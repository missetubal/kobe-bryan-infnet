2024-04-07 15:48:12,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:12,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:12,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:12,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:45,213:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:45,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:45,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:45,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:20:14,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:20:14,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:20:14,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:20:14,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:24:12,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:24:12,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:24:12,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:24:12,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:26:01,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:26:01,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:26:01,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:26:01,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:04:20,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:04:20,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:04:20,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:04:20,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:11:02,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:11:02,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:11:02,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:11:02,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:13:08,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:13:08,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:13:08,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:13:08,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:21:57,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:21:57,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:21:57,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:21:57,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:22:25,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:22:25,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:22:25,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:22:25,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:34:14,883:INFO:PyCaret ClassificationExperiment
2024-04-07 17:34:14,883:INFO:Logging name: clf-default-name
2024-04-07 17:34:14,883:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:34:14,883:INFO:version 3.2.0
2024-04-07 17:34:14,883:INFO:Initializing setup()
2024-04-07 17:34:14,883:INFO:self.USI: 363e
2024-04-07 17:34:14,883:INFO:self._variable_keys: {'n_jobs_param', 'data', 'exp_id', 'exp_name_log', '_available_plots', 'y_train', 'X', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'X_train', 'y_test', 'memory', 'idx', 'fold_generator', 'USI', 'gpu_param', 'X_test', 'log_plots_param', 'y', 'target_param', 'fold_groups_param', 'seed', '_ml_usecase', 'pipeline', 'logging_param'}
2024-04-07 17:34:14,883:INFO:Checking environment
2024-04-07 17:34:14,883:INFO:python_version: 3.11.7
2024-04-07 17:34:14,883:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:34:14,883:INFO:machine: AMD64
2024-04-07 17:34:14,883:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:34:14,883:INFO:Memory: svmem(total=10575405056, available=3058933760, percent=71.1, used=7516471296, free=3058933760)
2024-04-07 17:34:14,883:INFO:Physical Core: 8
2024-04-07 17:34:14,883:INFO:Logical Core: 16
2024-04-07 17:34:14,883:INFO:Checking libraries
2024-04-07 17:34:14,883:INFO:System:
2024-04-07 17:34:14,883:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:34:14,883:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:34:14,883:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:34:14,883:INFO:PyCaret required dependencies:
2024-04-07 17:34:16,189:INFO:                 pip: 23.3.1
2024-04-07 17:34:16,189:INFO:          setuptools: 68.2.2
2024-04-07 17:34:16,189:INFO:             pycaret: 3.2.0
2024-04-07 17:34:16,189:INFO:             IPython: 8.20.0
2024-04-07 17:34:16,189:INFO:          ipywidgets: 7.6.5
2024-04-07 17:34:16,189:INFO:                tqdm: 4.65.0
2024-04-07 17:34:16,189:INFO:               numpy: 1.25.2
2024-04-07 17:34:16,189:INFO:              pandas: 1.5.3
2024-04-07 17:34:16,189:INFO:              jinja2: 3.1.3
2024-04-07 17:34:16,189:INFO:               scipy: 1.10.1
2024-04-07 17:34:16,190:INFO:              joblib: 1.2.0
2024-04-07 17:34:16,190:INFO:             sklearn: 1.2.2
2024-04-07 17:34:16,190:INFO:                pyod: 1.1.3
2024-04-07 17:34:16,190:INFO:            imblearn: 0.11.0
2024-04-07 17:34:16,190:INFO:   category_encoders: 2.6.3
2024-04-07 17:34:16,190:INFO:            lightgbm: 4.3.0
2024-04-07 17:34:16,190:INFO:               numba: 0.59.0
2024-04-07 17:34:16,190:INFO:            requests: 2.31.0
2024-04-07 17:34:16,190:INFO:          matplotlib: 3.6.0
2024-04-07 17:34:16,190:INFO:          scikitplot: 0.3.7
2024-04-07 17:34:16,190:INFO:         yellowbrick: 1.5
2024-04-07 17:34:16,190:INFO:              plotly: 5.9.0
2024-04-07 17:34:16,191:INFO:    plotly-resampler: Not installed
2024-04-07 17:34:16,191:INFO:             kaleido: 0.2.1
2024-04-07 17:34:16,191:INFO:           schemdraw: 0.15
2024-04-07 17:34:16,191:INFO:         statsmodels: 0.14.0
2024-04-07 17:34:16,191:INFO:              sktime: 0.21.1
2024-04-07 17:34:16,191:INFO:               tbats: 1.1.3
2024-04-07 17:34:16,191:INFO:            pmdarima: 2.0.4
2024-04-07 17:34:16,191:INFO:              psutil: 5.9.0
2024-04-07 17:34:16,191:INFO:          markupsafe: 2.1.3
2024-04-07 17:34:16,191:INFO:             pickle5: Not installed
2024-04-07 17:34:16,191:INFO:         cloudpickle: 2.2.1
2024-04-07 17:34:16,191:INFO:         deprecation: 2.1.0
2024-04-07 17:34:16,191:INFO:              xxhash: 3.4.1
2024-04-07 17:34:16,191:INFO:           wurlitzer: Not installed
2024-04-07 17:34:16,191:INFO:PyCaret optional dependencies:
2024-04-07 17:34:16,194:INFO:                shap: 0.44.0
2024-04-07 17:34:16,194:INFO:           interpret: Not installed
2024-04-07 17:34:16,194:INFO:                umap: Not installed
2024-04-07 17:34:16,194:INFO:     ydata_profiling: Not installed
2024-04-07 17:34:16,194:INFO:  explainerdashboard: Not installed
2024-04-07 17:34:16,194:INFO:             autoviz: Not installed
2024-04-07 17:34:16,194:INFO:           fairlearn: Not installed
2024-04-07 17:34:16,194:INFO:          deepchecks: Not installed
2024-04-07 17:34:16,194:INFO:             xgboost: Not installed
2024-04-07 17:34:16,194:INFO:            catboost: Not installed
2024-04-07 17:34:16,194:INFO:              kmodes: Not installed
2024-04-07 17:34:16,194:INFO:             mlxtend: Not installed
2024-04-07 17:34:16,194:INFO:       statsforecast: Not installed
2024-04-07 17:34:16,194:INFO:        tune_sklearn: Not installed
2024-04-07 17:34:16,194:INFO:                 ray: Not installed
2024-04-07 17:34:16,194:INFO:            hyperopt: Not installed
2024-04-07 17:34:16,194:INFO:              optuna: Not installed
2024-04-07 17:34:16,194:INFO:               skopt: Not installed
2024-04-07 17:34:16,194:INFO:              mlflow: 2.9.0
2024-04-07 17:34:16,194:INFO:              gradio: Not installed
2024-04-07 17:34:16,194:INFO:             fastapi: Not installed
2024-04-07 17:34:16,194:INFO:             uvicorn: Not installed
2024-04-07 17:34:16,194:INFO:              m2cgen: Not installed
2024-04-07 17:34:16,194:INFO:           evidently: Not installed
2024-04-07 17:34:16,194:INFO:               fugue: Not installed
2024-04-07 17:34:16,194:INFO:           streamlit: 1.28.0
2024-04-07 17:34:16,194:INFO:             prophet: Not installed
2024-04-07 17:34:16,194:INFO:None
2024-04-07 17:34:16,194:INFO:Set up data.
2024-04-07 17:34:16,207:INFO:Set up folding strategy.
2024-04-07 17:34:16,207:INFO:Set up train/test split.
2024-04-07 17:34:16,207:INFO:Set up data.
2024-04-07 17:34:16,207:INFO:Set up index.
2024-04-07 17:34:16,207:INFO:Assigning column types.
2024-04-07 17:34:16,224:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:34:16,273:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,368:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,401:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:34:16,451:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,551:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:34:16,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,701:INFO:Preparing preprocessing pipeline...
2024-04-07 17:34:16,701:INFO:Set up simple imputation.
2024-04-07 17:34:16,701:INFO:Set up feature normalization.
2024-04-07 17:34:16,730:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:34:16,730:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:34:16,730:INFO:Creating final display dataframe.
2024-04-07 17:34:16,816:INFO:Setup _display_container:                     Description             Value
0                    Session id              6395
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              363e
2024-04-07 17:34:16,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:17,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:17,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:17,001:INFO:setup() successfully completed in 2.12s...............
2024-04-07 17:34:17,001:INFO:Initializing compare_models()
2024-04-07 17:34:17,001:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:34:17,001:INFO:Checking exceptions
2024-04-07 17:34:17,006:INFO:Preparing display monitor
2024-04-07 17:34:17,040:INFO:Initializing Logistic Regression
2024-04-07 17:34:17,040:INFO:Total runtime is 0.0 minutes
2024-04-07 17:34:17,046:INFO:SubProcess create_model() called ==================================
2024-04-07 17:34:17,047:INFO:Initializing create_model()
2024-04-07 17:34:17,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058FC2150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:34:17,047:INFO:Checking exceptions
2024-04-07 17:34:17,047:INFO:Importing libraries
2024-04-07 17:34:17,047:INFO:Copying training dataset
2024-04-07 17:34:17,055:INFO:Defining folds
2024-04-07 17:34:17,055:INFO:Declaring metric variables
2024-04-07 17:34:17,058:INFO:Importing untrained model
2024-04-07 17:34:17,062:INFO:Logistic Regression Imported successfully
2024-04-07 17:34:17,068:INFO:Starting cross validation
2024-04-07 17:34:17,068:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:34:25,037:INFO:Calculating mean and std
2024-04-07 17:34:25,038:INFO:Creating metrics dataframe
2024-04-07 17:34:25,038:INFO:Uploading results into container
2024-04-07 17:34:25,038:INFO:Uploading model into container now
2024-04-07 17:34:25,038:INFO:_master_model_container: 1
2024-04-07 17:34:25,038:INFO:_display_container: 2
2024-04-07 17:34:25,038:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6395, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:34:25,038:INFO:create_model() successfully completed......................................
2024-04-07 17:34:25,326:INFO:SubProcess create_model() end ==================================
2024-04-07 17:34:25,327:INFO:Creating metrics dataframe
2024-04-07 17:34:25,334:INFO:Initializing Decision Tree Classifier
2024-04-07 17:34:25,334:INFO:Total runtime is 0.13824354807535807 minutes
2024-04-07 17:34:25,337:INFO:SubProcess create_model() called ==================================
2024-04-07 17:34:25,338:INFO:Initializing create_model()
2024-04-07 17:34:25,338:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058FC2150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:34:25,338:INFO:Checking exceptions
2024-04-07 17:34:25,338:INFO:Importing libraries
2024-04-07 17:34:25,338:INFO:Copying training dataset
2024-04-07 17:34:25,344:INFO:Defining folds
2024-04-07 17:34:25,344:INFO:Declaring metric variables
2024-04-07 17:34:25,349:INFO:Importing untrained model
2024-04-07 17:34:25,351:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:34:25,363:INFO:Starting cross validation
2024-04-07 17:34:25,364:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:34:30,926:INFO:Calculating mean and std
2024-04-07 17:34:30,928:INFO:Creating metrics dataframe
2024-04-07 17:34:30,928:INFO:Uploading results into container
2024-04-07 17:34:30,928:INFO:Uploading model into container now
2024-04-07 17:34:30,928:INFO:_master_model_container: 2
2024-04-07 17:34:30,928:INFO:_display_container: 2
2024-04-07 17:34:30,928:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6395, splitter='best')
2024-04-07 17:34:30,928:INFO:create_model() successfully completed......................................
2024-04-07 17:34:31,128:INFO:SubProcess create_model() end ==================================
2024-04-07 17:34:31,128:INFO:Creating metrics dataframe
2024-04-07 17:34:31,146:INFO:Initializing create_model()
2024-04-07 17:34:31,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6395, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:34:31,146:INFO:Checking exceptions
2024-04-07 17:34:31,148:INFO:Importing libraries
2024-04-07 17:34:31,148:INFO:Copying training dataset
2024-04-07 17:34:31,151:INFO:Defining folds
2024-04-07 17:34:31,151:INFO:Declaring metric variables
2024-04-07 17:34:31,156:INFO:Importing untrained model
2024-04-07 17:34:31,156:INFO:Declaring custom model
2024-04-07 17:34:31,156:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:34:31,157:INFO:Cross validation set to False
2024-04-07 17:34:31,157:INFO:Fitting Model
2024-04-07 17:34:31,206:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6395, splitter='best')
2024-04-07 17:34:31,206:INFO:create_model() successfully completed......................................
2024-04-07 17:34:31,380:INFO:Initializing create_model()
2024-04-07 17:34:31,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6395, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:34:31,380:INFO:Checking exceptions
2024-04-07 17:34:31,382:INFO:Importing libraries
2024-04-07 17:34:31,382:INFO:Copying training dataset
2024-04-07 17:34:31,390:INFO:Defining folds
2024-04-07 17:34:31,390:INFO:Declaring metric variables
2024-04-07 17:34:31,390:INFO:Importing untrained model
2024-04-07 17:34:31,390:INFO:Declaring custom model
2024-04-07 17:34:31,391:INFO:Logistic Regression Imported successfully
2024-04-07 17:34:31,391:INFO:Cross validation set to False
2024-04-07 17:34:31,391:INFO:Fitting Model
2024-04-07 17:34:31,414:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6395, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:34:31,414:INFO:create_model() successfully completed......................................
2024-04-07 17:34:31,611:INFO:_master_model_container: 2
2024-04-07 17:34:31,611:INFO:_display_container: 2
2024-04-07 17:34:31,611:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6395, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6395, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:34:31,611:INFO:compare_models() successfully completed......................................
2024-04-07 17:34:31,612:INFO:Initializing predict_model()
2024-04-07 17:34:31,612:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6395, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0588C8FE0>)
2024-04-07 17:34:31,612:INFO:Checking exceptions
2024-04-07 17:34:31,612:INFO:Preloading libraries
2024-04-07 17:36:03,364:INFO:PyCaret ClassificationExperiment
2024-04-07 17:36:03,364:INFO:Logging name: clf-default-name
2024-04-07 17:36:03,364:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:36:03,364:INFO:version 3.2.0
2024-04-07 17:36:03,364:INFO:Initializing setup()
2024-04-07 17:36:03,364:INFO:self.USI: 6d27
2024-04-07 17:36:03,364:INFO:self._variable_keys: {'n_jobs_param', 'data', 'exp_id', 'exp_name_log', '_available_plots', 'y_train', 'X', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'X_train', 'y_test', 'memory', 'idx', 'fold_generator', 'USI', 'gpu_param', 'X_test', 'log_plots_param', 'y', 'target_param', 'fold_groups_param', 'seed', '_ml_usecase', 'pipeline', 'logging_param'}
2024-04-07 17:36:03,364:INFO:Checking environment
2024-04-07 17:36:03,364:INFO:python_version: 3.11.7
2024-04-07 17:36:03,364:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:36:03,364:INFO:machine: AMD64
2024-04-07 17:36:03,364:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:36:03,364:INFO:Memory: svmem(total=10575405056, available=3382054912, percent=68.0, used=7193350144, free=3382054912)
2024-04-07 17:36:03,364:INFO:Physical Core: 8
2024-04-07 17:36:03,364:INFO:Logical Core: 16
2024-04-07 17:36:03,364:INFO:Checking libraries
2024-04-07 17:36:03,364:INFO:System:
2024-04-07 17:36:03,364:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:36:03,364:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:36:03,364:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:36:03,364:INFO:PyCaret required dependencies:
2024-04-07 17:36:03,364:INFO:                 pip: 23.3.1
2024-04-07 17:36:03,364:INFO:          setuptools: 68.2.2
2024-04-07 17:36:03,364:INFO:             pycaret: 3.2.0
2024-04-07 17:36:03,364:INFO:             IPython: 8.20.0
2024-04-07 17:36:03,364:INFO:          ipywidgets: 7.6.5
2024-04-07 17:36:03,364:INFO:                tqdm: 4.65.0
2024-04-07 17:36:03,364:INFO:               numpy: 1.25.2
2024-04-07 17:36:03,364:INFO:              pandas: 1.5.3
2024-04-07 17:36:03,364:INFO:              jinja2: 3.1.3
2024-04-07 17:36:03,364:INFO:               scipy: 1.10.1
2024-04-07 17:36:03,364:INFO:              joblib: 1.2.0
2024-04-07 17:36:03,364:INFO:             sklearn: 1.2.2
2024-04-07 17:36:03,364:INFO:                pyod: 1.1.3
2024-04-07 17:36:03,364:INFO:            imblearn: 0.11.0
2024-04-07 17:36:03,364:INFO:   category_encoders: 2.6.3
2024-04-07 17:36:03,364:INFO:            lightgbm: 4.3.0
2024-04-07 17:36:03,364:INFO:               numba: 0.59.0
2024-04-07 17:36:03,364:INFO:            requests: 2.31.0
2024-04-07 17:36:03,364:INFO:          matplotlib: 3.6.0
2024-04-07 17:36:03,364:INFO:          scikitplot: 0.3.7
2024-04-07 17:36:03,364:INFO:         yellowbrick: 1.5
2024-04-07 17:36:03,364:INFO:              plotly: 5.9.0
2024-04-07 17:36:03,364:INFO:    plotly-resampler: Not installed
2024-04-07 17:36:03,364:INFO:             kaleido: 0.2.1
2024-04-07 17:36:03,364:INFO:           schemdraw: 0.15
2024-04-07 17:36:03,364:INFO:         statsmodels: 0.14.0
2024-04-07 17:36:03,364:INFO:              sktime: 0.21.1
2024-04-07 17:36:03,364:INFO:               tbats: 1.1.3
2024-04-07 17:36:03,364:INFO:            pmdarima: 2.0.4
2024-04-07 17:36:03,364:INFO:              psutil: 5.9.0
2024-04-07 17:36:03,364:INFO:          markupsafe: 2.1.3
2024-04-07 17:36:03,364:INFO:             pickle5: Not installed
2024-04-07 17:36:03,364:INFO:         cloudpickle: 2.2.1
2024-04-07 17:36:03,364:INFO:         deprecation: 2.1.0
2024-04-07 17:36:03,364:INFO:              xxhash: 3.4.1
2024-04-07 17:36:03,364:INFO:           wurlitzer: Not installed
2024-04-07 17:36:03,364:INFO:PyCaret optional dependencies:
2024-04-07 17:36:03,364:INFO:                shap: 0.44.0
2024-04-07 17:36:03,364:INFO:           interpret: Not installed
2024-04-07 17:36:03,364:INFO:                umap: Not installed
2024-04-07 17:36:03,364:INFO:     ydata_profiling: Not installed
2024-04-07 17:36:03,364:INFO:  explainerdashboard: Not installed
2024-04-07 17:36:03,364:INFO:             autoviz: Not installed
2024-04-07 17:36:03,364:INFO:           fairlearn: Not installed
2024-04-07 17:36:03,364:INFO:          deepchecks: Not installed
2024-04-07 17:36:03,364:INFO:             xgboost: Not installed
2024-04-07 17:36:03,364:INFO:            catboost: Not installed
2024-04-07 17:36:03,364:INFO:              kmodes: Not installed
2024-04-07 17:36:03,364:INFO:             mlxtend: Not installed
2024-04-07 17:36:03,364:INFO:       statsforecast: Not installed
2024-04-07 17:36:03,364:INFO:        tune_sklearn: Not installed
2024-04-07 17:36:03,364:INFO:                 ray: Not installed
2024-04-07 17:36:03,364:INFO:            hyperopt: Not installed
2024-04-07 17:36:03,364:INFO:              optuna: Not installed
2024-04-07 17:36:03,364:INFO:               skopt: Not installed
2024-04-07 17:36:03,364:INFO:              mlflow: 2.9.0
2024-04-07 17:36:03,364:INFO:              gradio: Not installed
2024-04-07 17:36:03,364:INFO:             fastapi: Not installed
2024-04-07 17:36:03,364:INFO:             uvicorn: Not installed
2024-04-07 17:36:03,364:INFO:              m2cgen: Not installed
2024-04-07 17:36:03,364:INFO:           evidently: Not installed
2024-04-07 17:36:03,364:INFO:               fugue: Not installed
2024-04-07 17:36:03,364:INFO:           streamlit: 1.28.0
2024-04-07 17:36:03,364:INFO:             prophet: Not installed
2024-04-07 17:36:03,364:INFO:None
2024-04-07 17:36:03,364:INFO:Set up data.
2024-04-07 17:36:03,376:INFO:Set up folding strategy.
2024-04-07 17:36:03,376:INFO:Set up train/test split.
2024-04-07 17:36:03,376:INFO:Set up data.
2024-04-07 17:36:03,383:INFO:Set up index.
2024-04-07 17:36:03,383:INFO:Assigning column types.
2024-04-07 17:36:03,391:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:36:03,443:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,444:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,526:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,527:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,553:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:36:03,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,705:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:36:03,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,851:INFO:Preparing preprocessing pipeline...
2024-04-07 17:36:03,851:INFO:Set up simple imputation.
2024-04-07 17:36:03,851:INFO:Set up feature normalization.
2024-04-07 17:36:03,867:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:36:03,881:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:36:03,881:INFO:Creating final display dataframe.
2024-04-07 17:36:03,947:INFO:Setup _display_container:                     Description             Value
0                    Session id              4802
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6d27
2024-04-07 17:36:04,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:04,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:04,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:04,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:04,103:INFO:setup() successfully completed in 0.74s...............
2024-04-07 17:36:04,103:INFO:Initializing compare_models()
2024-04-07 17:36:04,103:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:36:04,103:INFO:Checking exceptions
2024-04-07 17:36:04,119:INFO:Preparing display monitor
2024-04-07 17:36:04,148:INFO:Initializing Logistic Regression
2024-04-07 17:36:04,148:INFO:Total runtime is 0.0 minutes
2024-04-07 17:36:04,152:INFO:SubProcess create_model() called ==================================
2024-04-07 17:36:04,152:INFO:Initializing create_model()
2024-04-07 17:36:04,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058CE2A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:04,152:INFO:Checking exceptions
2024-04-07 17:36:04,152:INFO:Importing libraries
2024-04-07 17:36:04,152:INFO:Copying training dataset
2024-04-07 17:36:04,158:INFO:Defining folds
2024-04-07 17:36:04,158:INFO:Declaring metric variables
2024-04-07 17:36:04,161:INFO:Importing untrained model
2024-04-07 17:36:04,164:INFO:Logistic Regression Imported successfully
2024-04-07 17:36:04,171:INFO:Starting cross validation
2024-04-07 17:36:04,172:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:36:11,793:INFO:Calculating mean and std
2024-04-07 17:36:11,793:INFO:Creating metrics dataframe
2024-04-07 17:36:11,793:INFO:Uploading results into container
2024-04-07 17:36:11,793:INFO:Uploading model into container now
2024-04-07 17:36:11,793:INFO:_master_model_container: 1
2024-04-07 17:36:11,793:INFO:_display_container: 2
2024-04-07 17:36:11,793:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4802, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:36:11,793:INFO:create_model() successfully completed......................................
2024-04-07 17:36:12,054:INFO:SubProcess create_model() end ==================================
2024-04-07 17:36:12,054:INFO:Creating metrics dataframe
2024-04-07 17:36:12,063:INFO:Initializing Decision Tree Classifier
2024-04-07 17:36:12,063:INFO:Total runtime is 0.1319222648938497 minutes
2024-04-07 17:36:12,066:INFO:SubProcess create_model() called ==================================
2024-04-07 17:36:12,066:INFO:Initializing create_model()
2024-04-07 17:36:12,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058CE2A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:12,066:INFO:Checking exceptions
2024-04-07 17:36:12,066:INFO:Importing libraries
2024-04-07 17:36:12,066:INFO:Copying training dataset
2024-04-07 17:36:12,071:INFO:Defining folds
2024-04-07 17:36:12,071:INFO:Declaring metric variables
2024-04-07 17:36:12,077:INFO:Importing untrained model
2024-04-07 17:36:12,080:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:36:12,089:INFO:Starting cross validation
2024-04-07 17:36:12,090:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:36:17,632:INFO:Calculating mean and std
2024-04-07 17:36:17,634:INFO:Creating metrics dataframe
2024-04-07 17:36:17,638:INFO:Uploading results into container
2024-04-07 17:36:17,640:INFO:Uploading model into container now
2024-04-07 17:36:17,641:INFO:_master_model_container: 2
2024-04-07 17:36:17,641:INFO:_display_container: 2
2024-04-07 17:36:17,641:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4802, splitter='best')
2024-04-07 17:36:17,641:INFO:create_model() successfully completed......................................
2024-04-07 17:36:17,858:INFO:SubProcess create_model() end ==================================
2024-04-07 17:36:17,858:INFO:Creating metrics dataframe
2024-04-07 17:36:17,883:INFO:Initializing create_model()
2024-04-07 17:36:17,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4802, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:17,883:INFO:Checking exceptions
2024-04-07 17:36:17,883:INFO:Importing libraries
2024-04-07 17:36:17,883:INFO:Copying training dataset
2024-04-07 17:36:17,890:INFO:Defining folds
2024-04-07 17:36:17,890:INFO:Declaring metric variables
2024-04-07 17:36:17,890:INFO:Importing untrained model
2024-04-07 17:36:17,890:INFO:Declaring custom model
2024-04-07 17:36:17,890:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:36:17,890:INFO:Cross validation set to False
2024-04-07 17:36:17,890:INFO:Fitting Model
2024-04-07 17:36:17,942:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4802, splitter='best')
2024-04-07 17:36:17,942:INFO:create_model() successfully completed......................................
2024-04-07 17:36:18,124:INFO:Initializing create_model()
2024-04-07 17:36:18,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4802, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:18,124:INFO:Checking exceptions
2024-04-07 17:36:18,137:INFO:Importing libraries
2024-04-07 17:36:18,137:INFO:Copying training dataset
2024-04-07 17:36:18,141:INFO:Defining folds
2024-04-07 17:36:18,141:INFO:Declaring metric variables
2024-04-07 17:36:18,141:INFO:Importing untrained model
2024-04-07 17:36:18,141:INFO:Declaring custom model
2024-04-07 17:36:18,141:INFO:Logistic Regression Imported successfully
2024-04-07 17:36:18,141:INFO:Cross validation set to False
2024-04-07 17:36:18,141:INFO:Fitting Model
2024-04-07 17:36:18,160:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4802, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:36:18,160:INFO:create_model() successfully completed......................................
2024-04-07 17:36:18,407:INFO:_master_model_container: 2
2024-04-07 17:36:18,407:INFO:_display_container: 2
2024-04-07 17:36:18,407:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4802, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4802, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:36:18,407:INFO:compare_models() successfully completed......................................
2024-04-07 17:36:18,416:INFO:Initializing predict_model()
2024-04-07 17:36:18,416:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4802, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0544CB920>)
2024-04-07 17:36:18,416:INFO:Checking exceptions
2024-04-07 17:36:18,416:INFO:Preloading libraries
2024-04-07 17:36:26,531:INFO:PyCaret ClassificationExperiment
2024-04-07 17:36:26,531:INFO:Logging name: clf-default-name
2024-04-07 17:36:26,538:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:36:26,538:INFO:version 3.2.0
2024-04-07 17:36:26,538:INFO:Initializing setup()
2024-04-07 17:36:26,538:INFO:self.USI: 2cce
2024-04-07 17:36:26,538:INFO:self._variable_keys: {'n_jobs_param', 'data', 'exp_id', 'exp_name_log', '_available_plots', 'y_train', 'X', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'X_train', 'y_test', 'memory', 'idx', 'fold_generator', 'USI', 'gpu_param', 'X_test', 'log_plots_param', 'y', 'target_param', 'fold_groups_param', 'seed', '_ml_usecase', 'pipeline', 'logging_param'}
2024-04-07 17:36:26,538:INFO:Checking environment
2024-04-07 17:36:26,538:INFO:python_version: 3.11.7
2024-04-07 17:36:26,538:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:36:26,538:INFO:machine: AMD64
2024-04-07 17:36:26,538:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:36:26,538:INFO:Memory: svmem(total=10575405056, available=3391709184, percent=67.9, used=7183695872, free=3391709184)
2024-04-07 17:36:26,538:INFO:Physical Core: 8
2024-04-07 17:36:26,538:INFO:Logical Core: 16
2024-04-07 17:36:26,538:INFO:Checking libraries
2024-04-07 17:36:26,538:INFO:System:
2024-04-07 17:36:26,538:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:36:26,538:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:36:26,538:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:36:26,538:INFO:PyCaret required dependencies:
2024-04-07 17:36:26,538:INFO:                 pip: 23.3.1
2024-04-07 17:36:26,538:INFO:          setuptools: 68.2.2
2024-04-07 17:36:26,538:INFO:             pycaret: 3.2.0
2024-04-07 17:36:26,538:INFO:             IPython: 8.20.0
2024-04-07 17:36:26,538:INFO:          ipywidgets: 7.6.5
2024-04-07 17:36:26,538:INFO:                tqdm: 4.65.0
2024-04-07 17:36:26,538:INFO:               numpy: 1.25.2
2024-04-07 17:36:26,539:INFO:              pandas: 1.5.3
2024-04-07 17:36:26,539:INFO:              jinja2: 3.1.3
2024-04-07 17:36:26,539:INFO:               scipy: 1.10.1
2024-04-07 17:36:26,539:INFO:              joblib: 1.2.0
2024-04-07 17:36:26,539:INFO:             sklearn: 1.2.2
2024-04-07 17:36:26,539:INFO:                pyod: 1.1.3
2024-04-07 17:36:26,539:INFO:            imblearn: 0.11.0
2024-04-07 17:36:26,539:INFO:   category_encoders: 2.6.3
2024-04-07 17:36:26,539:INFO:            lightgbm: 4.3.0
2024-04-07 17:36:26,539:INFO:               numba: 0.59.0
2024-04-07 17:36:26,540:INFO:            requests: 2.31.0
2024-04-07 17:36:26,540:INFO:          matplotlib: 3.6.0
2024-04-07 17:36:26,540:INFO:          scikitplot: 0.3.7
2024-04-07 17:36:26,540:INFO:         yellowbrick: 1.5
2024-04-07 17:36:26,540:INFO:              plotly: 5.9.0
2024-04-07 17:36:26,540:INFO:    plotly-resampler: Not installed
2024-04-07 17:36:26,540:INFO:             kaleido: 0.2.1
2024-04-07 17:36:26,540:INFO:           schemdraw: 0.15
2024-04-07 17:36:26,540:INFO:         statsmodels: 0.14.0
2024-04-07 17:36:26,540:INFO:              sktime: 0.21.1
2024-04-07 17:36:26,540:INFO:               tbats: 1.1.3
2024-04-07 17:36:26,540:INFO:            pmdarima: 2.0.4
2024-04-07 17:36:26,540:INFO:              psutil: 5.9.0
2024-04-07 17:36:26,540:INFO:          markupsafe: 2.1.3
2024-04-07 17:36:26,540:INFO:             pickle5: Not installed
2024-04-07 17:36:26,540:INFO:         cloudpickle: 2.2.1
2024-04-07 17:36:26,540:INFO:         deprecation: 2.1.0
2024-04-07 17:36:26,540:INFO:              xxhash: 3.4.1
2024-04-07 17:36:26,540:INFO:           wurlitzer: Not installed
2024-04-07 17:36:26,540:INFO:PyCaret optional dependencies:
2024-04-07 17:36:26,540:INFO:                shap: 0.44.0
2024-04-07 17:36:26,540:INFO:           interpret: Not installed
2024-04-07 17:36:26,541:INFO:                umap: Not installed
2024-04-07 17:36:26,541:INFO:     ydata_profiling: Not installed
2024-04-07 17:36:26,541:INFO:  explainerdashboard: Not installed
2024-04-07 17:36:26,541:INFO:             autoviz: Not installed
2024-04-07 17:36:26,541:INFO:           fairlearn: Not installed
2024-04-07 17:36:26,541:INFO:          deepchecks: Not installed
2024-04-07 17:36:26,541:INFO:             xgboost: Not installed
2024-04-07 17:36:26,541:INFO:            catboost: Not installed
2024-04-07 17:36:26,541:INFO:              kmodes: Not installed
2024-04-07 17:36:26,541:INFO:             mlxtend: Not installed
2024-04-07 17:36:26,541:INFO:       statsforecast: Not installed
2024-04-07 17:36:26,541:INFO:        tune_sklearn: Not installed
2024-04-07 17:36:26,541:INFO:                 ray: Not installed
2024-04-07 17:36:26,541:INFO:            hyperopt: Not installed
2024-04-07 17:36:26,541:INFO:              optuna: Not installed
2024-04-07 17:36:26,541:INFO:               skopt: Not installed
2024-04-07 17:36:26,541:INFO:              mlflow: 2.9.0
2024-04-07 17:36:26,541:INFO:              gradio: Not installed
2024-04-07 17:36:26,541:INFO:             fastapi: Not installed
2024-04-07 17:36:26,541:INFO:             uvicorn: Not installed
2024-04-07 17:36:26,541:INFO:              m2cgen: Not installed
2024-04-07 17:36:26,541:INFO:           evidently: Not installed
2024-04-07 17:36:26,541:INFO:               fugue: Not installed
2024-04-07 17:36:26,541:INFO:           streamlit: 1.28.0
2024-04-07 17:36:26,541:INFO:             prophet: Not installed
2024-04-07 17:36:26,541:INFO:None
2024-04-07 17:36:26,542:INFO:Set up data.
2024-04-07 17:36:26,547:INFO:Set up folding strategy.
2024-04-07 17:36:26,547:INFO:Set up train/test split.
2024-04-07 17:36:26,547:INFO:Set up data.
2024-04-07 17:36:26,547:INFO:Set up index.
2024-04-07 17:36:26,547:INFO:Assigning column types.
2024-04-07 17:36:26,558:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:36:26,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,609:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,669:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,669:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,701:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:36:26,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,787:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,834:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,856:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:36:26,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,009:INFO:Preparing preprocessing pipeline...
2024-04-07 17:36:27,009:INFO:Set up simple imputation.
2024-04-07 17:36:27,009:INFO:Set up feature normalization.
2024-04-07 17:36:27,041:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:36:27,048:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:36:27,048:INFO:Creating final display dataframe.
2024-04-07 17:36:27,130:INFO:Setup _display_container:                     Description             Value
0                    Session id              5552
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              2cce
2024-04-07 17:36:27,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,291:INFO:setup() successfully completed in 0.76s...............
2024-04-07 17:36:27,292:INFO:Initializing compare_models()
2024-04-07 17:36:27,292:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:36:27,292:INFO:Checking exceptions
2024-04-07 17:36:27,295:INFO:Preparing display monitor
2024-04-07 17:36:27,321:INFO:Initializing Logistic Regression
2024-04-07 17:36:27,321:INFO:Total runtime is 0.0 minutes
2024-04-07 17:36:27,325:INFO:SubProcess create_model() called ==================================
2024-04-07 17:36:27,326:INFO:Initializing create_model()
2024-04-07 17:36:27,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058B5A150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:27,327:INFO:Checking exceptions
2024-04-07 17:36:27,327:INFO:Importing libraries
2024-04-07 17:36:27,327:INFO:Copying training dataset
2024-04-07 17:36:27,332:INFO:Defining folds
2024-04-07 17:36:27,332:INFO:Declaring metric variables
2024-04-07 17:36:27,336:INFO:Importing untrained model
2024-04-07 17:36:27,340:INFO:Logistic Regression Imported successfully
2024-04-07 17:36:27,347:INFO:Starting cross validation
2024-04-07 17:36:27,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:36:35,017:INFO:Calculating mean and std
2024-04-07 17:36:35,017:INFO:Creating metrics dataframe
2024-04-07 17:36:35,017:INFO:Uploading results into container
2024-04-07 17:36:35,017:INFO:Uploading model into container now
2024-04-07 17:36:35,017:INFO:_master_model_container: 1
2024-04-07 17:36:35,017:INFO:_display_container: 2
2024-04-07 17:36:35,017:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5552, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:36:35,017:INFO:create_model() successfully completed......................................
2024-04-07 17:36:35,269:INFO:SubProcess create_model() end ==================================
2024-04-07 17:36:35,269:INFO:Creating metrics dataframe
2024-04-07 17:36:35,269:INFO:Initializing Decision Tree Classifier
2024-04-07 17:36:35,269:INFO:Total runtime is 0.13245665232340495 minutes
2024-04-07 17:36:35,284:INFO:SubProcess create_model() called ==================================
2024-04-07 17:36:35,287:INFO:Initializing create_model()
2024-04-07 17:36:35,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058B5A150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:35,287:INFO:Checking exceptions
2024-04-07 17:36:35,287:INFO:Importing libraries
2024-04-07 17:36:35,287:INFO:Copying training dataset
2024-04-07 17:36:35,293:INFO:Defining folds
2024-04-07 17:36:35,294:INFO:Declaring metric variables
2024-04-07 17:36:35,298:INFO:Importing untrained model
2024-04-07 17:36:35,302:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:36:35,307:INFO:Starting cross validation
2024-04-07 17:36:35,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:36:41,111:INFO:Calculating mean and std
2024-04-07 17:36:41,127:INFO:Creating metrics dataframe
2024-04-07 17:36:41,132:INFO:Uploading results into container
2024-04-07 17:36:41,133:INFO:Uploading model into container now
2024-04-07 17:36:41,133:INFO:_master_model_container: 2
2024-04-07 17:36:41,133:INFO:_display_container: 2
2024-04-07 17:36:41,133:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5552, splitter='best')
2024-04-07 17:36:41,133:INFO:create_model() successfully completed......................................
2024-04-07 17:36:41,319:INFO:SubProcess create_model() end ==================================
2024-04-07 17:36:41,319:INFO:Creating metrics dataframe
2024-04-07 17:36:41,355:INFO:Initializing create_model()
2024-04-07 17:36:41,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5552, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:41,355:INFO:Checking exceptions
2024-04-07 17:36:41,358:INFO:Importing libraries
2024-04-07 17:36:41,358:INFO:Copying training dataset
2024-04-07 17:36:41,364:INFO:Defining folds
2024-04-07 17:36:41,364:INFO:Declaring metric variables
2024-04-07 17:36:41,364:INFO:Importing untrained model
2024-04-07 17:36:41,364:INFO:Declaring custom model
2024-04-07 17:36:41,364:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:36:41,364:INFO:Cross validation set to False
2024-04-07 17:36:41,364:INFO:Fitting Model
2024-04-07 17:36:41,419:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5552, splitter='best')
2024-04-07 17:36:41,419:INFO:create_model() successfully completed......................................
2024-04-07 17:36:41,618:INFO:Initializing create_model()
2024-04-07 17:36:41,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5552, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:41,618:INFO:Checking exceptions
2024-04-07 17:36:41,620:INFO:Importing libraries
2024-04-07 17:36:41,620:INFO:Copying training dataset
2024-04-07 17:36:41,624:INFO:Defining folds
2024-04-07 17:36:41,624:INFO:Declaring metric variables
2024-04-07 17:36:41,625:INFO:Importing untrained model
2024-04-07 17:36:41,625:INFO:Declaring custom model
2024-04-07 17:36:41,625:INFO:Logistic Regression Imported successfully
2024-04-07 17:36:41,626:INFO:Cross validation set to False
2024-04-07 17:36:41,626:INFO:Fitting Model
2024-04-07 17:36:41,638:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5552, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:36:41,638:INFO:create_model() successfully completed......................................
2024-04-07 17:36:41,840:INFO:_master_model_container: 2
2024-04-07 17:36:41,840:INFO:_display_container: 2
2024-04-07 17:36:41,841:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5552, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5552, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:36:41,841:INFO:compare_models() successfully completed......................................
2024-04-07 17:36:41,842:INFO:Initializing predict_model()
2024-04-07 17:36:41,842:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5552, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0588502C0>)
2024-04-07 17:36:41,842:INFO:Checking exceptions
2024-04-07 17:36:41,842:INFO:Preloading libraries
2024-04-07 17:39:48,488:INFO:PyCaret ClassificationExperiment
2024-04-07 17:39:48,489:INFO:Logging name: clf-default-name
2024-04-07 17:39:48,489:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:39:48,489:INFO:version 3.2.0
2024-04-07 17:39:48,489:INFO:Initializing setup()
2024-04-07 17:39:48,489:INFO:self.USI: 1464
2024-04-07 17:39:48,489:INFO:self._variable_keys: {'n_jobs_param', 'data', 'exp_id', 'exp_name_log', '_available_plots', 'y_train', 'X', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'X_train', 'y_test', 'memory', 'idx', 'fold_generator', 'USI', 'gpu_param', 'X_test', 'log_plots_param', 'y', 'target_param', 'fold_groups_param', 'seed', '_ml_usecase', 'pipeline', 'logging_param'}
2024-04-07 17:39:48,489:INFO:Checking environment
2024-04-07 17:39:48,489:INFO:python_version: 3.11.7
2024-04-07 17:39:48,489:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:39:48,489:INFO:machine: AMD64
2024-04-07 17:39:48,489:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:39:48,489:INFO:Memory: svmem(total=10575405056, available=3557310464, percent=66.4, used=7018094592, free=3557310464)
2024-04-07 17:39:48,489:INFO:Physical Core: 8
2024-04-07 17:39:48,489:INFO:Logical Core: 16
2024-04-07 17:39:48,489:INFO:Checking libraries
2024-04-07 17:39:48,489:INFO:System:
2024-04-07 17:39:48,489:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:39:48,489:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:39:48,489:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:39:48,489:INFO:PyCaret required dependencies:
2024-04-07 17:39:48,489:INFO:                 pip: 23.3.1
2024-04-07 17:39:48,489:INFO:          setuptools: 68.2.2
2024-04-07 17:39:48,489:INFO:             pycaret: 3.2.0
2024-04-07 17:39:48,489:INFO:             IPython: 8.20.0
2024-04-07 17:39:48,489:INFO:          ipywidgets: 7.6.5
2024-04-07 17:39:48,489:INFO:                tqdm: 4.65.0
2024-04-07 17:39:48,489:INFO:               numpy: 1.25.2
2024-04-07 17:39:48,489:INFO:              pandas: 1.5.3
2024-04-07 17:39:48,489:INFO:              jinja2: 3.1.3
2024-04-07 17:39:48,489:INFO:               scipy: 1.10.1
2024-04-07 17:39:48,489:INFO:              joblib: 1.2.0
2024-04-07 17:39:48,489:INFO:             sklearn: 1.2.2
2024-04-07 17:39:48,489:INFO:                pyod: 1.1.3
2024-04-07 17:39:48,489:INFO:            imblearn: 0.11.0
2024-04-07 17:39:48,489:INFO:   category_encoders: 2.6.3
2024-04-07 17:39:48,489:INFO:            lightgbm: 4.3.0
2024-04-07 17:39:48,489:INFO:               numba: 0.59.0
2024-04-07 17:39:48,489:INFO:            requests: 2.31.0
2024-04-07 17:39:48,489:INFO:          matplotlib: 3.6.0
2024-04-07 17:39:48,489:INFO:          scikitplot: 0.3.7
2024-04-07 17:39:48,489:INFO:         yellowbrick: 1.5
2024-04-07 17:39:48,489:INFO:              plotly: 5.9.0
2024-04-07 17:39:48,489:INFO:    plotly-resampler: Not installed
2024-04-07 17:39:48,489:INFO:             kaleido: 0.2.1
2024-04-07 17:39:48,489:INFO:           schemdraw: 0.15
2024-04-07 17:39:48,489:INFO:         statsmodels: 0.14.0
2024-04-07 17:39:48,489:INFO:              sktime: 0.21.1
2024-04-07 17:39:48,489:INFO:               tbats: 1.1.3
2024-04-07 17:39:48,489:INFO:            pmdarima: 2.0.4
2024-04-07 17:39:48,489:INFO:              psutil: 5.9.0
2024-04-07 17:39:48,489:INFO:          markupsafe: 2.1.3
2024-04-07 17:39:48,489:INFO:             pickle5: Not installed
2024-04-07 17:39:48,489:INFO:         cloudpickle: 2.2.1
2024-04-07 17:39:48,489:INFO:         deprecation: 2.1.0
2024-04-07 17:39:48,489:INFO:              xxhash: 3.4.1
2024-04-07 17:39:48,489:INFO:           wurlitzer: Not installed
2024-04-07 17:39:48,489:INFO:PyCaret optional dependencies:
2024-04-07 17:39:48,489:INFO:                shap: 0.44.0
2024-04-07 17:39:48,489:INFO:           interpret: Not installed
2024-04-07 17:39:48,489:INFO:                umap: Not installed
2024-04-07 17:39:48,489:INFO:     ydata_profiling: Not installed
2024-04-07 17:39:48,489:INFO:  explainerdashboard: Not installed
2024-04-07 17:39:48,489:INFO:             autoviz: Not installed
2024-04-07 17:39:48,489:INFO:           fairlearn: Not installed
2024-04-07 17:39:48,489:INFO:          deepchecks: Not installed
2024-04-07 17:39:48,489:INFO:             xgboost: Not installed
2024-04-07 17:39:48,489:INFO:            catboost: Not installed
2024-04-07 17:39:48,489:INFO:              kmodes: Not installed
2024-04-07 17:39:48,489:INFO:             mlxtend: Not installed
2024-04-07 17:39:48,489:INFO:       statsforecast: Not installed
2024-04-07 17:39:48,489:INFO:        tune_sklearn: Not installed
2024-04-07 17:39:48,489:INFO:                 ray: Not installed
2024-04-07 17:39:48,489:INFO:            hyperopt: Not installed
2024-04-07 17:39:48,489:INFO:              optuna: Not installed
2024-04-07 17:39:48,489:INFO:               skopt: Not installed
2024-04-07 17:39:48,489:INFO:              mlflow: 2.9.0
2024-04-07 17:39:48,489:INFO:              gradio: Not installed
2024-04-07 17:39:48,489:INFO:             fastapi: Not installed
2024-04-07 17:39:48,489:INFO:             uvicorn: Not installed
2024-04-07 17:39:48,489:INFO:              m2cgen: Not installed
2024-04-07 17:39:48,489:INFO:           evidently: Not installed
2024-04-07 17:39:48,489:INFO:               fugue: Not installed
2024-04-07 17:39:48,489:INFO:           streamlit: 1.28.0
2024-04-07 17:39:48,489:INFO:             prophet: Not installed
2024-04-07 17:39:48,489:INFO:None
2024-04-07 17:39:48,489:INFO:Set up data.
2024-04-07 17:39:48,497:INFO:Set up folding strategy.
2024-04-07 17:39:48,497:INFO:Set up train/test split.
2024-04-07 17:39:48,497:INFO:Set up data.
2024-04-07 17:39:48,501:INFO:Set up index.
2024-04-07 17:39:48,501:INFO:Assigning column types.
2024-04-07 17:39:48,508:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:39:48,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,554:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,624:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,649:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:39:48,702:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,776:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,798:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:39:48,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,940:INFO:Preparing preprocessing pipeline...
2024-04-07 17:39:48,955:INFO:Set up simple imputation.
2024-04-07 17:39:48,955:INFO:Set up feature normalization.
2024-04-07 17:39:48,973:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:39:48,973:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:39:48,973:INFO:Creating final display dataframe.
2024-04-07 17:39:49,050:INFO:Setup _display_container:                     Description             Value
0                    Session id              6170
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              1464
2024-04-07 17:39:49,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:49,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:49,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:49,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:49,201:INFO:setup() successfully completed in 0.72s...............
2024-04-07 17:39:49,201:INFO:Initializing compare_models()
2024-04-07 17:39:49,201:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:39:49,201:INFO:Checking exceptions
2024-04-07 17:39:49,201:INFO:Preparing display monitor
2024-04-07 17:39:49,242:INFO:Initializing Logistic Regression
2024-04-07 17:39:49,242:INFO:Total runtime is 1.7575422922770183e-05 minutes
2024-04-07 17:39:49,246:INFO:SubProcess create_model() called ==================================
2024-04-07 17:39:49,246:INFO:Initializing create_model()
2024-04-07 17:39:49,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058E13050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:39:49,247:INFO:Checking exceptions
2024-04-07 17:39:49,247:INFO:Importing libraries
2024-04-07 17:39:49,247:INFO:Copying training dataset
2024-04-07 17:39:49,252:INFO:Defining folds
2024-04-07 17:39:49,252:INFO:Declaring metric variables
2024-04-07 17:39:49,256:INFO:Importing untrained model
2024-04-07 17:39:49,260:INFO:Logistic Regression Imported successfully
2024-04-07 17:39:49,263:INFO:Starting cross validation
2024-04-07 17:39:49,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:39:56,721:INFO:Calculating mean and std
2024-04-07 17:39:56,721:INFO:Creating metrics dataframe
2024-04-07 17:39:56,721:INFO:Uploading results into container
2024-04-07 17:39:56,721:INFO:Uploading model into container now
2024-04-07 17:39:56,721:INFO:_master_model_container: 1
2024-04-07 17:39:56,721:INFO:_display_container: 2
2024-04-07 17:39:56,721:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:39:56,721:INFO:create_model() successfully completed......................................
2024-04-07 17:39:56,961:INFO:SubProcess create_model() end ==================================
2024-04-07 17:39:56,961:INFO:Creating metrics dataframe
2024-04-07 17:39:56,962:INFO:Initializing Decision Tree Classifier
2024-04-07 17:39:56,962:INFO:Total runtime is 0.1286940097808838 minutes
2024-04-07 17:39:56,969:INFO:SubProcess create_model() called ==================================
2024-04-07 17:39:56,972:INFO:Initializing create_model()
2024-04-07 17:39:56,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058E13050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:39:56,972:INFO:Checking exceptions
2024-04-07 17:39:56,972:INFO:Importing libraries
2024-04-07 17:39:56,972:INFO:Copying training dataset
2024-04-07 17:39:56,978:INFO:Defining folds
2024-04-07 17:39:56,978:INFO:Declaring metric variables
2024-04-07 17:39:56,979:INFO:Importing untrained model
2024-04-07 17:39:56,988:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:39:56,995:INFO:Starting cross validation
2024-04-07 17:39:56,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:40:02,416:INFO:Calculating mean and std
2024-04-07 17:40:02,416:INFO:Creating metrics dataframe
2024-04-07 17:40:02,431:INFO:Uploading results into container
2024-04-07 17:40:02,431:INFO:Uploading model into container now
2024-04-07 17:40:02,431:INFO:_master_model_container: 2
2024-04-07 17:40:02,431:INFO:_display_container: 2
2024-04-07 17:40:02,431:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6170, splitter='best')
2024-04-07 17:40:02,431:INFO:create_model() successfully completed......................................
2024-04-07 17:40:02,643:INFO:SubProcess create_model() end ==================================
2024-04-07 17:40:02,643:INFO:Creating metrics dataframe
2024-04-07 17:40:02,661:INFO:Initializing create_model()
2024-04-07 17:40:02,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6170, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:40:02,661:INFO:Checking exceptions
2024-04-07 17:40:02,663:INFO:Importing libraries
2024-04-07 17:40:02,663:INFO:Copying training dataset
2024-04-07 17:40:02,668:INFO:Defining folds
2024-04-07 17:40:02,669:INFO:Declaring metric variables
2024-04-07 17:40:02,669:INFO:Importing untrained model
2024-04-07 17:40:02,669:INFO:Declaring custom model
2024-04-07 17:40:02,669:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:40:02,670:INFO:Cross validation set to False
2024-04-07 17:40:02,670:INFO:Fitting Model
2024-04-07 17:40:02,717:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6170, splitter='best')
2024-04-07 17:40:02,717:INFO:create_model() successfully completed......................................
2024-04-07 17:40:02,906:INFO:Initializing create_model()
2024-04-07 17:40:02,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:40:02,906:INFO:Checking exceptions
2024-04-07 17:40:02,908:INFO:Importing libraries
2024-04-07 17:40:02,908:INFO:Copying training dataset
2024-04-07 17:40:02,913:INFO:Defining folds
2024-04-07 17:40:02,913:INFO:Declaring metric variables
2024-04-07 17:40:02,914:INFO:Importing untrained model
2024-04-07 17:40:02,914:INFO:Declaring custom model
2024-04-07 17:40:02,914:INFO:Logistic Regression Imported successfully
2024-04-07 17:40:02,914:INFO:Cross validation set to False
2024-04-07 17:40:02,914:INFO:Fitting Model
2024-04-07 17:40:02,935:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:40:02,935:INFO:create_model() successfully completed......................................
2024-04-07 17:40:03,125:INFO:_master_model_container: 2
2024-04-07 17:40:03,125:INFO:_display_container: 2
2024-04-07 17:40:03,125:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6170, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:40:03,125:INFO:compare_models() successfully completed......................................
2024-04-07 17:40:03,125:INFO:Initializing predict_model()
2024-04-07 17:40:03,125:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6170, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F051C25800>)
2024-04-07 17:40:03,125:INFO:Checking exceptions
2024-04-07 17:40:03,125:INFO:Preloading libraries
2024-04-07 17:40:47,525:INFO:PyCaret ClassificationExperiment
2024-04-07 17:40:47,525:INFO:Logging name: clf-default-name
2024-04-07 17:40:47,525:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:40:47,525:INFO:version 3.2.0
2024-04-07 17:40:47,525:INFO:Initializing setup()
2024-04-07 17:40:47,525:INFO:self.USI: 9992
2024-04-07 17:40:47,525:INFO:self._variable_keys: {'n_jobs_param', 'data', 'exp_id', 'exp_name_log', '_available_plots', 'y_train', 'X', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'X_train', 'y_test', 'memory', 'idx', 'fold_generator', 'USI', 'gpu_param', 'X_test', 'log_plots_param', 'y', 'target_param', 'fold_groups_param', 'seed', '_ml_usecase', 'pipeline', 'logging_param'}
2024-04-07 17:40:47,525:INFO:Checking environment
2024-04-07 17:40:47,525:INFO:python_version: 3.11.7
2024-04-07 17:40:47,525:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:40:47,525:INFO:machine: AMD64
2024-04-07 17:40:47,525:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:40:47,525:INFO:Memory: svmem(total=10575405056, available=3605573632, percent=65.9, used=6969831424, free=3605573632)
2024-04-07 17:40:47,525:INFO:Physical Core: 8
2024-04-07 17:40:47,525:INFO:Logical Core: 16
2024-04-07 17:40:47,525:INFO:Checking libraries
2024-04-07 17:40:47,525:INFO:System:
2024-04-07 17:40:47,525:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:40:47,525:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:40:47,525:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:40:47,525:INFO:PyCaret required dependencies:
2024-04-07 17:40:47,525:INFO:                 pip: 23.3.1
2024-04-07 17:40:47,525:INFO:          setuptools: 68.2.2
2024-04-07 17:40:47,525:INFO:             pycaret: 3.2.0
2024-04-07 17:40:47,525:INFO:             IPython: 8.20.0
2024-04-07 17:40:47,525:INFO:          ipywidgets: 7.6.5
2024-04-07 17:40:47,525:INFO:                tqdm: 4.65.0
2024-04-07 17:40:47,525:INFO:               numpy: 1.25.2
2024-04-07 17:40:47,525:INFO:              pandas: 1.5.3
2024-04-07 17:40:47,525:INFO:              jinja2: 3.1.3
2024-04-07 17:40:47,525:INFO:               scipy: 1.10.1
2024-04-07 17:40:47,525:INFO:              joblib: 1.2.0
2024-04-07 17:40:47,525:INFO:             sklearn: 1.2.2
2024-04-07 17:40:47,525:INFO:                pyod: 1.1.3
2024-04-07 17:40:47,525:INFO:            imblearn: 0.11.0
2024-04-07 17:40:47,525:INFO:   category_encoders: 2.6.3
2024-04-07 17:40:47,525:INFO:            lightgbm: 4.3.0
2024-04-07 17:40:47,525:INFO:               numba: 0.59.0
2024-04-07 17:40:47,525:INFO:            requests: 2.31.0
2024-04-07 17:40:47,525:INFO:          matplotlib: 3.6.0
2024-04-07 17:40:47,525:INFO:          scikitplot: 0.3.7
2024-04-07 17:40:47,525:INFO:         yellowbrick: 1.5
2024-04-07 17:40:47,525:INFO:              plotly: 5.9.0
2024-04-07 17:40:47,525:INFO:    plotly-resampler: Not installed
2024-04-07 17:40:47,525:INFO:             kaleido: 0.2.1
2024-04-07 17:40:47,525:INFO:           schemdraw: 0.15
2024-04-07 17:40:47,525:INFO:         statsmodels: 0.14.0
2024-04-07 17:40:47,525:INFO:              sktime: 0.21.1
2024-04-07 17:40:47,525:INFO:               tbats: 1.1.3
2024-04-07 17:40:47,525:INFO:            pmdarima: 2.0.4
2024-04-07 17:40:47,525:INFO:              psutil: 5.9.0
2024-04-07 17:40:47,525:INFO:          markupsafe: 2.1.3
2024-04-07 17:40:47,525:INFO:             pickle5: Not installed
2024-04-07 17:40:47,525:INFO:         cloudpickle: 2.2.1
2024-04-07 17:40:47,525:INFO:         deprecation: 2.1.0
2024-04-07 17:40:47,525:INFO:              xxhash: 3.4.1
2024-04-07 17:40:47,525:INFO:           wurlitzer: Not installed
2024-04-07 17:40:47,534:INFO:PyCaret optional dependencies:
2024-04-07 17:40:47,534:INFO:                shap: 0.44.0
2024-04-07 17:40:47,534:INFO:           interpret: Not installed
2024-04-07 17:40:47,534:INFO:                umap: Not installed
2024-04-07 17:40:47,534:INFO:     ydata_profiling: Not installed
2024-04-07 17:40:47,534:INFO:  explainerdashboard: Not installed
2024-04-07 17:40:47,534:INFO:             autoviz: Not installed
2024-04-07 17:40:47,534:INFO:           fairlearn: Not installed
2024-04-07 17:40:47,534:INFO:          deepchecks: Not installed
2024-04-07 17:40:47,534:INFO:             xgboost: Not installed
2024-04-07 17:40:47,534:INFO:            catboost: Not installed
2024-04-07 17:40:47,534:INFO:              kmodes: Not installed
2024-04-07 17:40:47,534:INFO:             mlxtend: Not installed
2024-04-07 17:40:47,534:INFO:       statsforecast: Not installed
2024-04-07 17:40:47,534:INFO:        tune_sklearn: Not installed
2024-04-07 17:40:47,534:INFO:                 ray: Not installed
2024-04-07 17:40:47,534:INFO:            hyperopt: Not installed
2024-04-07 17:40:47,534:INFO:              optuna: Not installed
2024-04-07 17:40:47,534:INFO:               skopt: Not installed
2024-04-07 17:40:47,534:INFO:              mlflow: 2.9.0
2024-04-07 17:40:47,534:INFO:              gradio: Not installed
2024-04-07 17:40:47,534:INFO:             fastapi: Not installed
2024-04-07 17:40:47,534:INFO:             uvicorn: Not installed
2024-04-07 17:40:47,534:INFO:              m2cgen: Not installed
2024-04-07 17:40:47,534:INFO:           evidently: Not installed
2024-04-07 17:40:47,535:INFO:               fugue: Not installed
2024-04-07 17:40:47,535:INFO:           streamlit: 1.28.0
2024-04-07 17:40:47,535:INFO:             prophet: Not installed
2024-04-07 17:40:47,535:INFO:None
2024-04-07 17:40:47,535:INFO:Set up data.
2024-04-07 17:40:47,540:INFO:Set up folding strategy.
2024-04-07 17:40:47,540:INFO:Set up train/test split.
2024-04-07 17:40:47,540:INFO:Set up data.
2024-04-07 17:40:47,546:INFO:Set up index.
2024-04-07 17:40:47,547:INFO:Assigning column types.
2024-04-07 17:40:47,552:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:40:47,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,599:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,696:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:40:47,752:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,818:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,857:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:40:47,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,002:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,002:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,002:INFO:Preparing preprocessing pipeline...
2024-04-07 17:40:48,002:INFO:Set up simple imputation.
2024-04-07 17:40:48,002:INFO:Set up feature normalization.
2024-04-07 17:40:48,018:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:40:48,034:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:40:48,034:INFO:Creating final display dataframe.
2024-04-07 17:40:48,099:INFO:Setup _display_container:                     Description             Value
0                    Session id              1482
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              9992
2024-04-07 17:40:48,185:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,262:INFO:setup() successfully completed in 0.74s...............
2024-04-07 17:40:48,262:INFO:Initializing compare_models()
2024-04-07 17:40:48,262:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:40:48,262:INFO:Checking exceptions
2024-04-07 17:40:48,274:INFO:Preparing display monitor
2024-04-07 17:40:48,303:INFO:Initializing Logistic Regression
2024-04-07 17:40:48,305:INFO:Total runtime is 2.291997273763021e-05 minutes
2024-04-07 17:40:48,307:INFO:SubProcess create_model() called ==================================
2024-04-07 17:40:48,309:INFO:Initializing create_model()
2024-04-07 17:40:48,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058E140D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:40:48,309:INFO:Checking exceptions
2024-04-07 17:40:48,309:INFO:Importing libraries
2024-04-07 17:40:48,310:INFO:Copying training dataset
2024-04-07 17:40:48,315:INFO:Defining folds
2024-04-07 17:40:48,315:INFO:Declaring metric variables
2024-04-07 17:40:48,319:INFO:Importing untrained model
2024-04-07 17:40:48,322:INFO:Logistic Regression Imported successfully
2024-04-07 17:40:48,326:INFO:Starting cross validation
2024-04-07 17:40:48,326:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:40:55,629:INFO:Calculating mean and std
2024-04-07 17:40:55,629:INFO:Creating metrics dataframe
2024-04-07 17:40:55,629:INFO:Uploading results into container
2024-04-07 17:40:55,629:INFO:Uploading model into container now
2024-04-07 17:40:55,629:INFO:_master_model_container: 1
2024-04-07 17:40:55,629:INFO:_display_container: 2
2024-04-07 17:40:55,629:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1482, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:40:55,629:INFO:create_model() successfully completed......................................
2024-04-07 17:40:55,881:INFO:SubProcess create_model() end ==================================
2024-04-07 17:40:55,881:INFO:Creating metrics dataframe
2024-04-07 17:40:55,881:INFO:Initializing Decision Tree Classifier
2024-04-07 17:40:55,881:INFO:Total runtime is 0.12629018624623617 minutes
2024-04-07 17:40:55,881:INFO:SubProcess create_model() called ==================================
2024-04-07 17:40:55,881:INFO:Initializing create_model()
2024-04-07 17:40:55,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058E140D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:40:55,893:INFO:Checking exceptions
2024-04-07 17:40:55,893:INFO:Importing libraries
2024-04-07 17:40:55,893:INFO:Copying training dataset
2024-04-07 17:40:55,899:INFO:Defining folds
2024-04-07 17:40:55,899:INFO:Declaring metric variables
2024-04-07 17:40:55,904:INFO:Importing untrained model
2024-04-07 17:40:55,910:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:40:55,917:INFO:Starting cross validation
2024-04-07 17:40:55,918:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:41:01,244:INFO:Calculating mean and std
2024-04-07 17:41:01,244:INFO:Creating metrics dataframe
2024-04-07 17:41:01,260:INFO:Uploading results into container
2024-04-07 17:41:01,260:INFO:Uploading model into container now
2024-04-07 17:41:01,260:INFO:_master_model_container: 2
2024-04-07 17:41:01,260:INFO:_display_container: 2
2024-04-07 17:41:01,260:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1482, splitter='best')
2024-04-07 17:41:01,260:INFO:create_model() successfully completed......................................
2024-04-07 17:41:01,475:INFO:SubProcess create_model() end ==================================
2024-04-07 17:41:01,475:INFO:Creating metrics dataframe
2024-04-07 17:41:01,501:INFO:Initializing create_model()
2024-04-07 17:41:01,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1482, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:41:01,501:INFO:Checking exceptions
2024-04-07 17:41:01,503:INFO:Importing libraries
2024-04-07 17:41:01,503:INFO:Copying training dataset
2024-04-07 17:41:01,503:INFO:Defining folds
2024-04-07 17:41:01,503:INFO:Declaring metric variables
2024-04-07 17:41:01,503:INFO:Importing untrained model
2024-04-07 17:41:01,503:INFO:Declaring custom model
2024-04-07 17:41:01,503:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:41:01,503:INFO:Cross validation set to False
2024-04-07 17:41:01,503:INFO:Fitting Model
2024-04-07 17:41:01,568:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1482, splitter='best')
2024-04-07 17:41:01,568:INFO:create_model() successfully completed......................................
2024-04-07 17:41:01,740:INFO:Initializing create_model()
2024-04-07 17:41:01,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1482, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:41:01,740:INFO:Checking exceptions
2024-04-07 17:41:01,752:INFO:Importing libraries
2024-04-07 17:41:01,752:INFO:Copying training dataset
2024-04-07 17:41:01,757:INFO:Defining folds
2024-04-07 17:41:01,757:INFO:Declaring metric variables
2024-04-07 17:41:01,757:INFO:Importing untrained model
2024-04-07 17:41:01,758:INFO:Declaring custom model
2024-04-07 17:41:01,758:INFO:Logistic Regression Imported successfully
2024-04-07 17:41:01,758:INFO:Cross validation set to False
2024-04-07 17:41:01,758:INFO:Fitting Model
2024-04-07 17:41:01,781:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1482, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:41:01,781:INFO:create_model() successfully completed......................................
2024-04-07 17:41:01,972:INFO:_master_model_container: 2
2024-04-07 17:41:01,973:INFO:_display_container: 2
2024-04-07 17:41:01,974:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1482, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1482, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:41:01,974:INFO:compare_models() successfully completed......................................
2024-04-07 17:41:01,975:INFO:Initializing predict_model()
2024-04-07 17:41:01,975:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1482, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F051C25800>)
2024-04-07 17:41:01,975:INFO:Checking exceptions
2024-04-07 17:41:01,975:INFO:Preloading libraries
2024-04-07 17:43:37,710:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_ce81be9479ae45f9abbc319209f88479_c8df3724776d4b63825054bacc510387
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,710:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_a0b7ba3cc1ac4b8f98f09ac8d581243d_ee49ec3c38a84a34b131b3fa802bc9ab
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,710:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_3d0a147d015d441d9f0babe463367bf7_42704abb094b4b8c89a41bae0fd4874e
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_c7dbb2d4e45b42fabc004b9d4d726cf4_abf7e198bd9740be8376c6827decdd93
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_c4a8eaa8fe6d4c3c8748229d47a3e631_25ffe70bce214035b177447ae81b878e
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_5125f96f3cb64458b2040c3db4979a02_013bff9782ac40dda5b5b565029c8966
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_76c9590a40c14b7cabe1cde3d2e2f2fa_aa63d7a555b7455ab50d3641e1ce6d7f
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_712649b1b2494059aa00fdc3db87c812_4322e04913dc4ff09885a977f0f07bcc
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_6d0f0305f6fe45db8163cc8416d909e6_08c3f03502114680b6d963e877dd7fc8
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_1e30b35083f140a088c9328bf416f6ba_708728d8243041b48863ab182e9413bf
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:45,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:43:45,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:43:45,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:43:45,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:43:48,645:INFO:PyCaret ClassificationExperiment
2024-04-07 17:43:48,645:INFO:Logging name: clf-default-name
2024-04-07 17:43:48,645:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:43:48,645:INFO:version 3.2.0
2024-04-07 17:43:48,645:INFO:Initializing setup()
2024-04-07 17:43:48,645:INFO:self.USI: 39a4
2024-04-07 17:43:48,645:INFO:self._variable_keys: {'USI', 'X_test', 'fold_groups_param', 'fold_shuffle_param', 'memory', 'n_jobs_param', 'target_param', 'y_test', 'fix_imbalance', 'seed', 'logging_param', '_ml_usecase', 'X', 'fold_generator', 'is_multiclass', 'X_train', 'gpu_n_jobs_param', 'y_train', 'gpu_param', 'log_plots_param', '_available_plots', 'idx', 'exp_id', 'html_param', 'pipeline', 'y', 'data', 'exp_name_log'}
2024-04-07 17:43:48,645:INFO:Checking environment
2024-04-07 17:43:48,645:INFO:python_version: 3.11.7
2024-04-07 17:43:48,645:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:43:48,645:INFO:machine: AMD64
2024-04-07 17:43:48,645:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:43:48,645:INFO:Memory: svmem(total=10575405056, available=3459186688, percent=67.3, used=7116218368, free=3459186688)
2024-04-07 17:43:48,646:INFO:Physical Core: 8
2024-04-07 17:43:48,646:INFO:Logical Core: 16
2024-04-07 17:43:48,646:INFO:Checking libraries
2024-04-07 17:43:48,646:INFO:System:
2024-04-07 17:43:48,646:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:43:48,646:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:43:48,646:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:43:48,646:INFO:PyCaret required dependencies:
2024-04-07 17:43:49,620:INFO:                 pip: 23.3.1
2024-04-07 17:43:49,620:INFO:          setuptools: 68.2.2
2024-04-07 17:43:49,620:INFO:             pycaret: 3.2.0
2024-04-07 17:43:49,620:INFO:             IPython: 8.20.0
2024-04-07 17:43:49,620:INFO:          ipywidgets: 7.6.5
2024-04-07 17:43:49,620:INFO:                tqdm: 4.65.0
2024-04-07 17:43:49,620:INFO:               numpy: 1.25.2
2024-04-07 17:43:49,620:INFO:              pandas: 1.5.3
2024-04-07 17:43:49,620:INFO:              jinja2: 3.1.3
2024-04-07 17:43:49,620:INFO:               scipy: 1.10.1
2024-04-07 17:43:49,620:INFO:              joblib: 1.2.0
2024-04-07 17:43:49,620:INFO:             sklearn: 1.2.2
2024-04-07 17:43:49,620:INFO:                pyod: 1.1.3
2024-04-07 17:43:49,620:INFO:            imblearn: 0.11.0
2024-04-07 17:43:49,620:INFO:   category_encoders: 2.6.3
2024-04-07 17:43:49,620:INFO:            lightgbm: 4.3.0
2024-04-07 17:43:49,620:INFO:               numba: 0.59.0
2024-04-07 17:43:49,620:INFO:            requests: 2.31.0
2024-04-07 17:43:49,620:INFO:          matplotlib: 3.6.0
2024-04-07 17:43:49,620:INFO:          scikitplot: 0.3.7
2024-04-07 17:43:49,620:INFO:         yellowbrick: 1.5
2024-04-07 17:43:49,620:INFO:              plotly: 5.9.0
2024-04-07 17:43:49,620:INFO:    plotly-resampler: Not installed
2024-04-07 17:43:49,621:INFO:             kaleido: 0.2.1
2024-04-07 17:43:49,621:INFO:           schemdraw: 0.15
2024-04-07 17:43:49,621:INFO:         statsmodels: 0.14.0
2024-04-07 17:43:49,621:INFO:              sktime: 0.21.1
2024-04-07 17:43:49,621:INFO:               tbats: 1.1.3
2024-04-07 17:43:49,621:INFO:            pmdarima: 2.0.4
2024-04-07 17:43:49,621:INFO:              psutil: 5.9.0
2024-04-07 17:43:49,621:INFO:          markupsafe: 2.1.3
2024-04-07 17:43:49,621:INFO:             pickle5: Not installed
2024-04-07 17:43:49,621:INFO:         cloudpickle: 2.2.1
2024-04-07 17:43:49,621:INFO:         deprecation: 2.1.0
2024-04-07 17:43:49,621:INFO:              xxhash: 3.4.1
2024-04-07 17:43:49,621:INFO:           wurlitzer: Not installed
2024-04-07 17:43:49,621:INFO:PyCaret optional dependencies:
2024-04-07 17:43:49,632:INFO:                shap: 0.44.0
2024-04-07 17:43:49,632:INFO:           interpret: Not installed
2024-04-07 17:43:49,632:INFO:                umap: Not installed
2024-04-07 17:43:49,632:INFO:     ydata_profiling: Not installed
2024-04-07 17:43:49,632:INFO:  explainerdashboard: Not installed
2024-04-07 17:43:49,632:INFO:             autoviz: Not installed
2024-04-07 17:43:49,632:INFO:           fairlearn: Not installed
2024-04-07 17:43:49,632:INFO:          deepchecks: Not installed
2024-04-07 17:43:49,632:INFO:             xgboost: Not installed
2024-04-07 17:43:49,632:INFO:            catboost: Not installed
2024-04-07 17:43:49,632:INFO:              kmodes: Not installed
2024-04-07 17:43:49,632:INFO:             mlxtend: Not installed
2024-04-07 17:43:49,632:INFO:       statsforecast: Not installed
2024-04-07 17:43:49,632:INFO:        tune_sklearn: Not installed
2024-04-07 17:43:49,632:INFO:                 ray: Not installed
2024-04-07 17:43:49,632:INFO:            hyperopt: Not installed
2024-04-07 17:43:49,632:INFO:              optuna: Not installed
2024-04-07 17:43:49,632:INFO:               skopt: Not installed
2024-04-07 17:43:49,632:INFO:              mlflow: 2.9.0
2024-04-07 17:43:49,632:INFO:              gradio: Not installed
2024-04-07 17:43:49,632:INFO:             fastapi: Not installed
2024-04-07 17:43:49,632:INFO:             uvicorn: Not installed
2024-04-07 17:43:49,632:INFO:              m2cgen: Not installed
2024-04-07 17:43:49,633:INFO:           evidently: Not installed
2024-04-07 17:43:49,633:INFO:               fugue: Not installed
2024-04-07 17:43:49,633:INFO:           streamlit: 1.28.0
2024-04-07 17:43:49,633:INFO:             prophet: Not installed
2024-04-07 17:43:49,633:INFO:None
2024-04-07 17:43:49,633:INFO:Set up data.
2024-04-07 17:43:49,639:INFO:Set up folding strategy.
2024-04-07 17:43:49,639:INFO:Set up train/test split.
2024-04-07 17:43:49,640:INFO:Set up data.
2024-04-07 17:43:49,644:INFO:Set up index.
2024-04-07 17:43:49,644:INFO:Assigning column types.
2024-04-07 17:43:49,647:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:43:49,691:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,693:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,774:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,803:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:43:49,848:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,922:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,950:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,951:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:43:50,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,097:INFO:Preparing preprocessing pipeline...
2024-04-07 17:43:50,098:INFO:Set up simple imputation.
2024-04-07 17:43:50,099:INFO:Set up feature normalization.
2024-04-07 17:43:50,156:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:43:50,163:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:43:50,163:INFO:Creating final display dataframe.
2024-04-07 17:43:50,253:INFO:Setup _display_container:                     Description             Value
0                    Session id              2874
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              39a4
2024-04-07 17:43:50,337:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,416:INFO:setup() successfully completed in 1.77s...............
2024-04-07 17:43:50,416:INFO:Initializing compare_models()
2024-04-07 17:43:50,416:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027FE326DF50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000027FE326DF50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:43:50,416:INFO:Checking exceptions
2024-04-07 17:43:50,420:INFO:Preparing display monitor
2024-04-07 17:43:50,448:INFO:Initializing Logistic Regression
2024-04-07 17:43:50,448:INFO:Total runtime is 0.0 minutes
2024-04-07 17:43:50,453:INFO:SubProcess create_model() called ==================================
2024-04-07 17:43:50,453:INFO:Initializing create_model()
2024-04-07 17:43:50,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027FE326DF50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027FE51E4A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:43:50,454:INFO:Checking exceptions
2024-04-07 17:43:50,454:INFO:Importing libraries
2024-04-07 17:43:50,454:INFO:Copying training dataset
2024-04-07 17:43:50,459:INFO:Defining folds
2024-04-07 17:43:50,459:INFO:Declaring metric variables
2024-04-07 17:43:50,463:INFO:Importing untrained model
2024-04-07 17:43:50,466:INFO:Logistic Regression Imported successfully
2024-04-07 17:43:50,473:INFO:Starting cross validation
2024-04-07 17:43:50,475:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:43:58,301:INFO:Calculating mean and std
2024-04-07 17:43:58,303:INFO:Creating metrics dataframe
2024-04-07 17:43:58,308:INFO:Uploading results into container
2024-04-07 17:43:58,310:INFO:Uploading model into container now
2024-04-07 17:43:58,311:INFO:_master_model_container: 1
2024-04-07 17:43:58,311:INFO:_display_container: 2
2024-04-07 17:43:58,311:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2874, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:43:58,312:INFO:create_model() successfully completed......................................
2024-04-07 17:43:58,494:INFO:SubProcess create_model() end ==================================
2024-04-07 17:43:58,494:INFO:Creating metrics dataframe
2024-04-07 17:43:58,502:INFO:Initializing Decision Tree Classifier
2024-04-07 17:43:58,502:INFO:Total runtime is 0.13423949877421062 minutes
2024-04-07 17:43:58,506:INFO:SubProcess create_model() called ==================================
2024-04-07 17:43:58,506:INFO:Initializing create_model()
2024-04-07 17:43:58,506:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027FE326DF50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027FE51E4A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:43:58,506:INFO:Checking exceptions
2024-04-07 17:43:58,506:INFO:Importing libraries
2024-04-07 17:43:58,507:INFO:Copying training dataset
2024-04-07 17:43:58,513:INFO:Defining folds
2024-04-07 17:43:58,513:INFO:Declaring metric variables
2024-04-07 17:43:58,518:INFO:Importing untrained model
2024-04-07 17:43:58,522:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:43:58,529:INFO:Starting cross validation
2024-04-07 17:43:58,530:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:44:04,224:INFO:Calculating mean and std
2024-04-07 17:44:04,227:INFO:Creating metrics dataframe
2024-04-07 17:44:04,231:INFO:Uploading results into container
2024-04-07 17:44:04,232:INFO:Uploading model into container now
2024-04-07 17:44:04,233:INFO:_master_model_container: 2
2024-04-07 17:44:04,233:INFO:_display_container: 2
2024-04-07 17:44:04,234:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2874, splitter='best')
2024-04-07 17:44:04,234:INFO:create_model() successfully completed......................................
2024-04-07 17:44:04,390:INFO:SubProcess create_model() end ==================================
2024-04-07 17:44:04,390:INFO:Creating metrics dataframe
2024-04-07 17:44:04,407:INFO:Initializing create_model()
2024-04-07 17:44:04,407:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027FE326DF50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2874, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:44:04,407:INFO:Checking exceptions
2024-04-07 17:44:04,410:INFO:Importing libraries
2024-04-07 17:44:04,410:INFO:Copying training dataset
2024-04-07 17:44:04,415:INFO:Defining folds
2024-04-07 17:44:04,415:INFO:Declaring metric variables
2024-04-07 17:44:04,415:INFO:Importing untrained model
2024-04-07 17:44:04,415:INFO:Declaring custom model
2024-04-07 17:44:04,415:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:44:04,416:INFO:Cross validation set to False
2024-04-07 17:44:04,416:INFO:Fitting Model
2024-04-07 17:44:04,469:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2874, splitter='best')
2024-04-07 17:44:04,471:INFO:create_model() successfully completed......................................
2024-04-07 17:44:04,596:INFO:Initializing create_model()
2024-04-07 17:44:04,597:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027FE326DF50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2874, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:44:04,597:INFO:Checking exceptions
2024-04-07 17:44:04,599:INFO:Importing libraries
2024-04-07 17:44:04,599:INFO:Copying training dataset
2024-04-07 17:44:04,604:INFO:Defining folds
2024-04-07 17:44:04,604:INFO:Declaring metric variables
2024-04-07 17:44:04,604:INFO:Importing untrained model
2024-04-07 17:44:04,604:INFO:Declaring custom model
2024-04-07 17:44:04,605:INFO:Logistic Regression Imported successfully
2024-04-07 17:44:04,605:INFO:Cross validation set to False
2024-04-07 17:44:04,605:INFO:Fitting Model
2024-04-07 17:44:04,629:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2874, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:44:04,630:INFO:create_model() successfully completed......................................
2024-04-07 17:44:04,769:INFO:_master_model_container: 2
2024-04-07 17:44:04,769:INFO:_display_container: 2
2024-04-07 17:44:04,770:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2874, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2874, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:44:04,770:INFO:compare_models() successfully completed......................................
2024-04-07 17:44:04,771:INFO:Initializing predict_model()
2024-04-07 17:44:04,771:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027FE326DF50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2874, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027FE4E23920>)
2024-04-07 17:44:04,771:INFO:Checking exceptions
2024-04-07 17:44:04,771:INFO:Preloading libraries
2024-04-07 17:48:06,793:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8080_d5a4152f496343dd80b393d6bdda9a4b_a4a768aab78446ba8e2c9bf3af91402b
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:48:06,794:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8080_3410d3e777154000bbc1f93f49c0d8d4_8b58aa6ba9944563a1048bca080ae421
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:48:14,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:48:14,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:48:14,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:48:14,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:48:17,572:INFO:PyCaret ClassificationExperiment
2024-04-07 17:48:17,572:INFO:Logging name: clf-default-name
2024-04-07 17:48:17,573:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:48:17,573:INFO:version 3.2.0
2024-04-07 17:48:17,573:INFO:Initializing setup()
2024-04-07 17:48:17,573:INFO:self.USI: 1b96
2024-04-07 17:48:17,573:INFO:self._variable_keys: {'y_train', 'logging_param', 'fold_generator', 'seed', 'exp_name_log', 'is_multiclass', 'memory', 'gpu_param', 'log_plots_param', '_ml_usecase', 'idx', 'data', 'X_test', 'fix_imbalance', 'html_param', 'X', 'exp_id', 'y', 'fold_groups_param', 'y_test', '_available_plots', 'pipeline', 'gpu_n_jobs_param', 'n_jobs_param', 'USI', 'X_train', 'fold_shuffle_param', 'target_param'}
2024-04-07 17:48:17,573:INFO:Checking environment
2024-04-07 17:48:17,573:INFO:python_version: 3.11.7
2024-04-07 17:48:17,573:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:48:17,573:INFO:machine: AMD64
2024-04-07 17:48:17,573:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:48:17,573:INFO:Memory: svmem(total=10575405056, available=3294994432, percent=68.8, used=7280410624, free=3294994432)
2024-04-07 17:48:17,573:INFO:Physical Core: 8
2024-04-07 17:48:17,573:INFO:Logical Core: 16
2024-04-07 17:48:17,573:INFO:Checking libraries
2024-04-07 17:48:17,573:INFO:System:
2024-04-07 17:48:17,573:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:48:17,573:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:48:17,575:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:48:17,575:INFO:PyCaret required dependencies:
2024-04-07 17:48:18,810:INFO:                 pip: 23.3.1
2024-04-07 17:48:18,810:INFO:          setuptools: 68.2.2
2024-04-07 17:48:18,810:INFO:             pycaret: 3.2.0
2024-04-07 17:48:18,810:INFO:             IPython: 8.20.0
2024-04-07 17:48:18,810:INFO:          ipywidgets: 7.6.5
2024-04-07 17:48:18,810:INFO:                tqdm: 4.65.0
2024-04-07 17:48:18,810:INFO:               numpy: 1.25.2
2024-04-07 17:48:18,810:INFO:              pandas: 1.5.3
2024-04-07 17:48:18,810:INFO:              jinja2: 3.1.3
2024-04-07 17:48:18,810:INFO:               scipy: 1.10.1
2024-04-07 17:48:18,810:INFO:              joblib: 1.2.0
2024-04-07 17:48:18,810:INFO:             sklearn: 1.2.2
2024-04-07 17:48:18,810:INFO:                pyod: 1.1.3
2024-04-07 17:48:18,810:INFO:            imblearn: 0.11.0
2024-04-07 17:48:18,811:INFO:   category_encoders: 2.6.3
2024-04-07 17:48:18,811:INFO:            lightgbm: 4.3.0
2024-04-07 17:48:18,811:INFO:               numba: 0.59.0
2024-04-07 17:48:18,811:INFO:            requests: 2.31.0
2024-04-07 17:48:18,811:INFO:          matplotlib: 3.6.0
2024-04-07 17:48:18,811:INFO:          scikitplot: 0.3.7
2024-04-07 17:48:18,811:INFO:         yellowbrick: 1.5
2024-04-07 17:48:18,811:INFO:              plotly: 5.9.0
2024-04-07 17:48:18,811:INFO:    plotly-resampler: Not installed
2024-04-07 17:48:18,811:INFO:             kaleido: 0.2.1
2024-04-07 17:48:18,811:INFO:           schemdraw: 0.15
2024-04-07 17:48:18,811:INFO:         statsmodels: 0.14.0
2024-04-07 17:48:18,811:INFO:              sktime: 0.21.1
2024-04-07 17:48:18,811:INFO:               tbats: 1.1.3
2024-04-07 17:48:18,811:INFO:            pmdarima: 2.0.4
2024-04-07 17:48:18,811:INFO:              psutil: 5.9.0
2024-04-07 17:48:18,812:INFO:          markupsafe: 2.1.3
2024-04-07 17:48:18,812:INFO:             pickle5: Not installed
2024-04-07 17:48:18,812:INFO:         cloudpickle: 2.2.1
2024-04-07 17:48:18,812:INFO:         deprecation: 2.1.0
2024-04-07 17:48:18,812:INFO:              xxhash: 3.4.1
2024-04-07 17:48:18,812:INFO:           wurlitzer: Not installed
2024-04-07 17:48:18,812:INFO:PyCaret optional dependencies:
2024-04-07 17:48:18,828:INFO:                shap: 0.44.0
2024-04-07 17:48:18,828:INFO:           interpret: Not installed
2024-04-07 17:48:18,828:INFO:                umap: Not installed
2024-04-07 17:48:18,828:INFO:     ydata_profiling: Not installed
2024-04-07 17:48:18,828:INFO:  explainerdashboard: Not installed
2024-04-07 17:48:18,828:INFO:             autoviz: Not installed
2024-04-07 17:48:18,828:INFO:           fairlearn: Not installed
2024-04-07 17:48:18,828:INFO:          deepchecks: Not installed
2024-04-07 17:48:18,828:INFO:             xgboost: Not installed
2024-04-07 17:48:18,828:INFO:            catboost: 1.2.3
2024-04-07 17:48:18,828:INFO:              kmodes: Not installed
2024-04-07 17:48:18,828:INFO:             mlxtend: Not installed
2024-04-07 17:48:18,828:INFO:       statsforecast: Not installed
2024-04-07 17:48:18,828:INFO:        tune_sklearn: Not installed
2024-04-07 17:48:18,828:INFO:                 ray: Not installed
2024-04-07 17:48:18,829:INFO:            hyperopt: Not installed
2024-04-07 17:48:18,829:INFO:              optuna: Not installed
2024-04-07 17:48:18,829:INFO:               skopt: Not installed
2024-04-07 17:48:18,829:INFO:              mlflow: 2.9.0
2024-04-07 17:48:18,829:INFO:              gradio: Not installed
2024-04-07 17:48:18,829:INFO:             fastapi: Not installed
2024-04-07 17:48:18,829:INFO:             uvicorn: Not installed
2024-04-07 17:48:18,829:INFO:              m2cgen: Not installed
2024-04-07 17:48:18,829:INFO:           evidently: Not installed
2024-04-07 17:48:18,829:INFO:               fugue: Not installed
2024-04-07 17:48:18,829:INFO:           streamlit: 1.28.0
2024-04-07 17:48:18,829:INFO:             prophet: Not installed
2024-04-07 17:48:18,829:INFO:None
2024-04-07 17:48:18,829:INFO:Set up data.
2024-04-07 17:48:18,835:INFO:Set up folding strategy.
2024-04-07 17:48:18,835:INFO:Set up train/test split.
2024-04-07 17:48:18,835:INFO:Set up data.
2024-04-07 17:48:18,840:INFO:Set up index.
2024-04-07 17:48:18,840:INFO:Assigning column types.
2024-04-07 17:48:18,844:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:48:18,903:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:48:18,906:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:48:18,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:48:18,952:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:48:19,133:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:48:19,134:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:48:19,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:48:19,174:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:48:19,175:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:48:19,233:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:48:19,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:48:19,262:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:48:19,326:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:48:19,367:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:48:19,367:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:48:19,368:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:48:19,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:48:19,469:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:48:19,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:48:19,550:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:48:19,553:INFO:Preparing preprocessing pipeline...
2024-04-07 17:48:19,555:INFO:Set up simple imputation.
2024-04-07 17:48:19,555:INFO:Set up feature normalization.
2024-04-07 17:48:19,584:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:48:19,588:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:48:19,588:INFO:Creating final display dataframe.
2024-04-07 17:48:19,669:INFO:Setup _display_container:                     Description             Value
0                    Session id              2660
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              1b96
2024-04-07 17:48:19,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:48:19,887:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:48:19,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:48:19,965:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:48:19,966:INFO:setup() successfully completed in 2.39s...............
2024-04-07 17:48:19,966:INFO:Initializing compare_models()
2024-04-07 17:48:19,966:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F02B301B50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F02B301B50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:48:19,966:INFO:Checking exceptions
2024-04-07 17:48:19,969:INFO:Preparing display monitor
2024-04-07 17:48:20,003:INFO:Initializing Logistic Regression
2024-04-07 17:48:20,003:INFO:Total runtime is 0.0 minutes
2024-04-07 17:48:20,009:INFO:SubProcess create_model() called ==================================
2024-04-07 17:48:20,009:INFO:Initializing create_model()
2024-04-07 17:48:20,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F02B301B50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F02D400AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:48:20,009:INFO:Checking exceptions
2024-04-07 17:48:20,009:INFO:Importing libraries
2024-04-07 17:48:20,010:INFO:Copying training dataset
2024-04-07 17:48:20,017:INFO:Defining folds
2024-04-07 17:48:20,017:INFO:Declaring metric variables
2024-04-07 17:48:20,022:INFO:Importing untrained model
2024-04-07 17:48:20,025:INFO:Logistic Regression Imported successfully
2024-04-07 17:48:20,033:INFO:Starting cross validation
2024-04-07 17:48:20,034:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:48:28,148:INFO:Calculating mean and std
2024-04-07 17:48:28,150:INFO:Creating metrics dataframe
2024-04-07 17:48:28,159:INFO:Uploading results into container
2024-04-07 17:48:28,160:INFO:Uploading model into container now
2024-04-07 17:48:28,160:INFO:_master_model_container: 1
2024-04-07 17:48:28,162:INFO:_display_container: 2
2024-04-07 17:48:28,162:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2660, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:48:28,162:INFO:create_model() successfully completed......................................
2024-04-07 17:48:28,370:INFO:SubProcess create_model() end ==================================
2024-04-07 17:48:28,371:INFO:Creating metrics dataframe
2024-04-07 17:48:28,378:INFO:Initializing Decision Tree Classifier
2024-04-07 17:48:28,379:INFO:Total runtime is 0.13958237568537393 minutes
2024-04-07 17:48:28,382:INFO:SubProcess create_model() called ==================================
2024-04-07 17:48:28,382:INFO:Initializing create_model()
2024-04-07 17:48:28,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F02B301B50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F02D400AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:48:28,383:INFO:Checking exceptions
2024-04-07 17:48:28,383:INFO:Importing libraries
2024-04-07 17:48:28,383:INFO:Copying training dataset
2024-04-07 17:48:28,389:INFO:Defining folds
2024-04-07 17:48:28,389:INFO:Declaring metric variables
2024-04-07 17:48:28,394:INFO:Importing untrained model
2024-04-07 17:48:28,398:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:48:28,406:INFO:Starting cross validation
2024-04-07 17:48:28,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:48:34,829:INFO:Calculating mean and std
2024-04-07 17:48:34,831:INFO:Creating metrics dataframe
2024-04-07 17:48:34,838:INFO:Uploading results into container
2024-04-07 17:48:34,839:INFO:Uploading model into container now
2024-04-07 17:48:34,839:INFO:_master_model_container: 2
2024-04-07 17:48:34,839:INFO:_display_container: 2
2024-04-07 17:48:34,840:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2660, splitter='best')
2024-04-07 17:48:34,840:INFO:create_model() successfully completed......................................
2024-04-07 17:48:35,035:INFO:SubProcess create_model() end ==================================
2024-04-07 17:48:35,035:INFO:Creating metrics dataframe
2024-04-07 17:48:35,055:INFO:Initializing create_model()
2024-04-07 17:48:35,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F02B301B50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2660, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:48:35,055:INFO:Checking exceptions
2024-04-07 17:48:35,058:INFO:Importing libraries
2024-04-07 17:48:35,058:INFO:Copying training dataset
2024-04-07 17:48:35,066:INFO:Defining folds
2024-04-07 17:48:35,066:INFO:Declaring metric variables
2024-04-07 17:48:35,066:INFO:Importing untrained model
2024-04-07 17:48:35,066:INFO:Declaring custom model
2024-04-07 17:48:35,067:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:48:35,068:INFO:Cross validation set to False
2024-04-07 17:48:35,068:INFO:Fitting Model
2024-04-07 17:48:35,138:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2660, splitter='best')
2024-04-07 17:48:35,138:INFO:create_model() successfully completed......................................
2024-04-07 17:48:35,292:INFO:Initializing create_model()
2024-04-07 17:48:35,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F02B301B50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2660, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:48:35,292:INFO:Checking exceptions
2024-04-07 17:48:35,294:INFO:Importing libraries
2024-04-07 17:48:35,294:INFO:Copying training dataset
2024-04-07 17:48:35,301:INFO:Defining folds
2024-04-07 17:48:35,301:INFO:Declaring metric variables
2024-04-07 17:48:35,301:INFO:Importing untrained model
2024-04-07 17:48:35,301:INFO:Declaring custom model
2024-04-07 17:48:35,303:INFO:Logistic Regression Imported successfully
2024-04-07 17:48:35,303:INFO:Cross validation set to False
2024-04-07 17:48:35,304:INFO:Fitting Model
2024-04-07 17:48:35,339:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2660, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:48:35,339:INFO:create_model() successfully completed......................................
2024-04-07 17:48:35,507:INFO:_master_model_container: 2
2024-04-07 17:48:35,507:INFO:_display_container: 2
2024-04-07 17:48:35,508:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2660, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2660, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:48:35,508:INFO:compare_models() successfully completed......................................
2024-04-07 17:48:35,509:INFO:Initializing predict_model()
2024-04-07 17:48:35,509:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F02B301B50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2660, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F02CF554E0>)
2024-04-07 17:48:35,510:INFO:Checking exceptions
2024-04-07 17:48:35,510:INFO:Preloading libraries
2024-04-07 17:50:36,541:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_13320_acb90be6562d4da49d0f26449d90bb2d_2af243af942e49f397b04f6e07b2ddf2
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:50:36,541:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_13320_6bdfccadca6f449381bef804d795fd91_3f78e7acc85b4eb0af041952bc48a850
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:50:43,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:50:43,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:50:43,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:50:43,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:50:46,411:INFO:PyCaret ClassificationExperiment
2024-04-07 17:50:46,411:INFO:Logging name: clf-default-name
2024-04-07 17:50:46,411:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:50:46,411:INFO:version 3.2.0
2024-04-07 17:50:46,411:INFO:Initializing setup()
2024-04-07 17:50:46,411:INFO:self.USI: dc1d
2024-04-07 17:50:46,411:INFO:self._variable_keys: {'_ml_usecase', 'log_plots_param', 'pipeline', 'seed', 'y_train', 'fold_shuffle_param', 'gpu_param', 'n_jobs_param', 'fold_groups_param', 'fold_generator', 'data', 'X', 'gpu_n_jobs_param', 'exp_name_log', 'idx', '_available_plots', 'logging_param', 'y_test', 'y', 'is_multiclass', 'exp_id', 'html_param', 'X_train', 'memory', 'X_test', 'target_param', 'USI', 'fix_imbalance'}
2024-04-07 17:50:46,411:INFO:Checking environment
2024-04-07 17:50:46,411:INFO:python_version: 3.11.7
2024-04-07 17:50:46,411:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:50:46,411:INFO:machine: AMD64
2024-04-07 17:50:46,411:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:50:46,411:INFO:Memory: svmem(total=10575405056, available=3504214016, percent=66.9, used=7071191040, free=3504214016)
2024-04-07 17:50:46,413:INFO:Physical Core: 8
2024-04-07 17:50:46,413:INFO:Logical Core: 16
2024-04-07 17:50:46,413:INFO:Checking libraries
2024-04-07 17:50:46,413:INFO:System:
2024-04-07 17:50:46,413:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:50:46,413:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:50:46,413:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:50:46,413:INFO:PyCaret required dependencies:
2024-04-07 17:50:47,320:INFO:                 pip: 23.3.1
2024-04-07 17:50:47,320:INFO:          setuptools: 68.2.2
2024-04-07 17:50:47,320:INFO:             pycaret: 3.2.0
2024-04-07 17:50:47,320:INFO:             IPython: 8.20.0
2024-04-07 17:50:47,320:INFO:          ipywidgets: 7.6.5
2024-04-07 17:50:47,320:INFO:                tqdm: 4.65.0
2024-04-07 17:50:47,320:INFO:               numpy: 1.25.2
2024-04-07 17:50:47,320:INFO:              pandas: 1.5.3
2024-04-07 17:50:47,320:INFO:              jinja2: 3.1.3
2024-04-07 17:50:47,320:INFO:               scipy: 1.10.1
2024-04-07 17:50:47,320:INFO:              joblib: 1.2.0
2024-04-07 17:50:47,320:INFO:             sklearn: 1.2.2
2024-04-07 17:50:47,320:INFO:                pyod: 1.1.3
2024-04-07 17:50:47,320:INFO:            imblearn: 0.11.0
2024-04-07 17:50:47,320:INFO:   category_encoders: 2.6.3
2024-04-07 17:50:47,320:INFO:            lightgbm: 4.3.0
2024-04-07 17:50:47,320:INFO:               numba: 0.59.0
2024-04-07 17:50:47,320:INFO:            requests: 2.31.0
2024-04-07 17:50:47,320:INFO:          matplotlib: 3.6.0
2024-04-07 17:50:47,320:INFO:          scikitplot: 0.3.7
2024-04-07 17:50:47,321:INFO:         yellowbrick: 1.5
2024-04-07 17:50:47,321:INFO:              plotly: 5.9.0
2024-04-07 17:50:47,321:INFO:    plotly-resampler: Not installed
2024-04-07 17:50:47,321:INFO:             kaleido: 0.2.1
2024-04-07 17:50:47,321:INFO:           schemdraw: 0.15
2024-04-07 17:50:47,321:INFO:         statsmodels: 0.14.0
2024-04-07 17:50:47,321:INFO:              sktime: 0.21.1
2024-04-07 17:50:47,321:INFO:               tbats: 1.1.3
2024-04-07 17:50:47,321:INFO:            pmdarima: 2.0.4
2024-04-07 17:50:47,321:INFO:              psutil: 5.9.0
2024-04-07 17:50:47,321:INFO:          markupsafe: 2.1.3
2024-04-07 17:50:47,321:INFO:             pickle5: Not installed
2024-04-07 17:50:47,321:INFO:         cloudpickle: 2.2.1
2024-04-07 17:50:47,321:INFO:         deprecation: 2.1.0
2024-04-07 17:50:47,321:INFO:              xxhash: 3.4.1
2024-04-07 17:50:47,321:INFO:           wurlitzer: Not installed
2024-04-07 17:50:47,321:INFO:PyCaret optional dependencies:
2024-04-07 17:50:47,329:INFO:                shap: 0.44.0
2024-04-07 17:50:47,329:INFO:           interpret: Not installed
2024-04-07 17:50:47,329:INFO:                umap: Not installed
2024-04-07 17:50:47,329:INFO:     ydata_profiling: Not installed
2024-04-07 17:50:47,329:INFO:  explainerdashboard: Not installed
2024-04-07 17:50:47,329:INFO:             autoviz: Not installed
2024-04-07 17:50:47,329:INFO:           fairlearn: Not installed
2024-04-07 17:50:47,329:INFO:          deepchecks: Not installed
2024-04-07 17:50:47,330:INFO:             xgboost: Not installed
2024-04-07 17:50:47,330:INFO:            catboost: 1.2.3
2024-04-07 17:50:47,330:INFO:              kmodes: 0.12.2
2024-04-07 17:50:47,330:INFO:             mlxtend: 0.23.1
2024-04-07 17:50:47,330:INFO:       statsforecast: 1.5.0
2024-04-07 17:50:47,330:INFO:        tune_sklearn: Not installed
2024-04-07 17:50:47,330:INFO:                 ray: Not installed
2024-04-07 17:50:47,330:INFO:            hyperopt: Not installed
2024-04-07 17:50:47,330:INFO:              optuna: Not installed
2024-04-07 17:50:47,330:INFO:               skopt: Not installed
2024-04-07 17:50:47,330:INFO:              mlflow: 2.9.0
2024-04-07 17:50:47,330:INFO:              gradio: Not installed
2024-04-07 17:50:47,330:INFO:             fastapi: Not installed
2024-04-07 17:50:47,330:INFO:             uvicorn: Not installed
2024-04-07 17:50:47,330:INFO:              m2cgen: Not installed
2024-04-07 17:50:47,330:INFO:           evidently: Not installed
2024-04-07 17:50:47,330:INFO:               fugue: 0.8.7
2024-04-07 17:50:47,330:INFO:           streamlit: 1.28.0
2024-04-07 17:50:47,330:INFO:             prophet: Not installed
2024-04-07 17:50:47,330:INFO:None
2024-04-07 17:50:47,330:INFO:Set up data.
2024-04-07 17:50:47,336:INFO:Set up folding strategy.
2024-04-07 17:50:47,337:INFO:Set up train/test split.
2024-04-07 17:50:47,337:INFO:Set up data.
2024-04-07 17:50:47,340:INFO:Set up index.
2024-04-07 17:50:47,341:INFO:Assigning column types.
2024-04-07 17:50:47,345:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:50:47,389:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:50:47,392:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:50:47,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:50:47,428:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:50:47,509:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:50:47,510:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:50:47,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:50:47,542:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:50:47,543:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:50:47,587:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:50:47,614:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:50:47,614:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:50:47,659:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:50:47,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:50:47,686:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:50:47,687:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:50:47,758:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:50:47,759:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:50:47,832:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:50:47,832:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:50:47,836:INFO:Preparing preprocessing pipeline...
2024-04-07 17:50:47,838:INFO:Set up simple imputation.
2024-04-07 17:50:47,838:INFO:Set up feature normalization.
2024-04-07 17:50:47,862:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:50:47,868:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:50:47,868:INFO:Creating final display dataframe.
2024-04-07 17:50:47,942:INFO:Setup _display_container:                     Description             Value
0                    Session id              6999
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              dc1d
2024-04-07 17:50:48,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:50:48,027:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:50:48,105:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:50:48,105:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:50:48,222:INFO:setup() successfully completed in 1.81s...............
2024-04-07 17:50:48,222:INFO:Initializing compare_models()
2024-04-07 17:50:48,222:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEDA8D0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEDA8D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:50:48,222:INFO:Checking exceptions
2024-04-07 17:50:48,226:INFO:Preparing display monitor
2024-04-07 17:50:48,258:INFO:Initializing Logistic Regression
2024-04-07 17:50:48,258:INFO:Total runtime is 0.0 minutes
2024-04-07 17:50:48,263:INFO:SubProcess create_model() called ==================================
2024-04-07 17:50:48,263:INFO:Initializing create_model()
2024-04-07 17:50:48,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEDA8D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB5DAC4810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:50:48,264:INFO:Checking exceptions
2024-04-07 17:50:48,264:INFO:Importing libraries
2024-04-07 17:50:48,264:INFO:Copying training dataset
2024-04-07 17:50:48,271:INFO:Defining folds
2024-04-07 17:50:48,271:INFO:Declaring metric variables
2024-04-07 17:50:48,274:INFO:Importing untrained model
2024-04-07 17:50:48,277:INFO:Logistic Regression Imported successfully
2024-04-07 17:50:48,286:INFO:Starting cross validation
2024-04-07 17:50:48,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:50:55,751:INFO:Calculating mean and std
2024-04-07 17:50:55,753:INFO:Creating metrics dataframe
2024-04-07 17:50:55,758:INFO:Uploading results into container
2024-04-07 17:50:55,759:INFO:Uploading model into container now
2024-04-07 17:50:55,760:INFO:_master_model_container: 1
2024-04-07 17:50:55,760:INFO:_display_container: 2
2024-04-07 17:50:55,761:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6999, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:50:55,761:INFO:create_model() successfully completed......................................
2024-04-07 17:50:55,945:INFO:SubProcess create_model() end ==================================
2024-04-07 17:50:55,945:INFO:Creating metrics dataframe
2024-04-07 17:50:55,953:INFO:Initializing Decision Tree Classifier
2024-04-07 17:50:55,953:INFO:Total runtime is 0.12824594179789225 minutes
2024-04-07 17:50:55,956:INFO:SubProcess create_model() called ==================================
2024-04-07 17:50:55,957:INFO:Initializing create_model()
2024-04-07 17:50:55,957:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEDA8D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB5DAC4810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:50:55,958:INFO:Checking exceptions
2024-04-07 17:50:55,958:INFO:Importing libraries
2024-04-07 17:50:55,958:INFO:Copying training dataset
2024-04-07 17:50:55,964:INFO:Defining folds
2024-04-07 17:50:55,965:INFO:Declaring metric variables
2024-04-07 17:50:55,968:INFO:Importing untrained model
2024-04-07 17:50:55,974:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:50:55,984:INFO:Starting cross validation
2024-04-07 17:50:55,985:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:51:01,539:INFO:Calculating mean and std
2024-04-07 17:51:01,540:INFO:Creating metrics dataframe
2024-04-07 17:51:01,544:INFO:Uploading results into container
2024-04-07 17:51:01,545:INFO:Uploading model into container now
2024-04-07 17:51:01,546:INFO:_master_model_container: 2
2024-04-07 17:51:01,546:INFO:_display_container: 2
2024-04-07 17:51:01,547:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6999, splitter='best')
2024-04-07 17:51:01,547:INFO:create_model() successfully completed......................................
2024-04-07 17:51:01,695:INFO:SubProcess create_model() end ==================================
2024-04-07 17:51:01,695:INFO:Creating metrics dataframe
2024-04-07 17:51:01,714:INFO:Initializing create_model()
2024-04-07 17:51:01,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEDA8D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6999, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:51:01,714:INFO:Checking exceptions
2024-04-07 17:51:01,716:INFO:Importing libraries
2024-04-07 17:51:01,716:INFO:Copying training dataset
2024-04-07 17:51:01,722:INFO:Defining folds
2024-04-07 17:51:01,722:INFO:Declaring metric variables
2024-04-07 17:51:01,722:INFO:Importing untrained model
2024-04-07 17:51:01,722:INFO:Declaring custom model
2024-04-07 17:51:01,723:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:51:01,724:INFO:Cross validation set to False
2024-04-07 17:51:01,724:INFO:Fitting Model
2024-04-07 17:51:01,777:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6999, splitter='best')
2024-04-07 17:51:01,777:INFO:create_model() successfully completed......................................
2024-04-07 17:51:01,901:INFO:Initializing create_model()
2024-04-07 17:51:01,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEDA8D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6999, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:51:01,901:INFO:Checking exceptions
2024-04-07 17:51:01,903:INFO:Importing libraries
2024-04-07 17:51:01,903:INFO:Copying training dataset
2024-04-07 17:51:01,909:INFO:Defining folds
2024-04-07 17:51:01,909:INFO:Declaring metric variables
2024-04-07 17:51:01,909:INFO:Importing untrained model
2024-04-07 17:51:01,909:INFO:Declaring custom model
2024-04-07 17:51:01,910:INFO:Logistic Regression Imported successfully
2024-04-07 17:51:01,910:INFO:Cross validation set to False
2024-04-07 17:51:01,910:INFO:Fitting Model
2024-04-07 17:51:01,938:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6999, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:51:01,938:INFO:create_model() successfully completed......................................
2024-04-07 17:51:02,074:INFO:_master_model_container: 2
2024-04-07 17:51:02,074:INFO:_display_container: 2
2024-04-07 17:51:02,075:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6999, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6999, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:51:02,075:INFO:compare_models() successfully completed......................................
2024-04-07 17:51:02,076:INFO:Initializing predict_model()
2024-04-07 17:51:02,076:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEDA8D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6999, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BB5BEC80E0>)
2024-04-07 17:51:02,076:INFO:Checking exceptions
2024-04-07 17:51:02,076:INFO:Preloading libraries
2024-04-07 17:55:24,672:INFO:PyCaret ClassificationExperiment
2024-04-07 17:55:24,672:INFO:Logging name: clf-default-name
2024-04-07 17:55:24,672:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:55:24,672:INFO:version 3.2.0
2024-04-07 17:55:24,672:INFO:Initializing setup()
2024-04-07 17:55:24,672:INFO:self.USI: 80e1
2024-04-07 17:55:24,672:INFO:self._variable_keys: {'_ml_usecase', 'log_plots_param', 'pipeline', 'seed', 'y_train', 'fold_shuffle_param', 'gpu_param', 'n_jobs_param', 'fold_groups_param', 'fold_generator', 'data', 'X', 'gpu_n_jobs_param', 'exp_name_log', 'idx', '_available_plots', 'logging_param', 'y_test', 'y', 'is_multiclass', 'exp_id', 'html_param', 'X_train', 'memory', 'X_test', 'target_param', 'USI', 'fix_imbalance'}
2024-04-07 17:55:24,672:INFO:Checking environment
2024-04-07 17:55:24,672:INFO:python_version: 3.11.7
2024-04-07 17:55:24,672:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:55:24,672:INFO:machine: AMD64
2024-04-07 17:55:24,672:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:55:24,672:INFO:Memory: svmem(total=10575405056, available=3551223808, percent=66.4, used=7024181248, free=3551223808)
2024-04-07 17:55:24,673:INFO:Physical Core: 8
2024-04-07 17:55:24,673:INFO:Logical Core: 16
2024-04-07 17:55:24,673:INFO:Checking libraries
2024-04-07 17:55:24,673:INFO:System:
2024-04-07 17:55:24,673:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:55:24,673:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:55:24,673:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:55:24,673:INFO:PyCaret required dependencies:
2024-04-07 17:55:24,673:INFO:                 pip: 23.3.1
2024-04-07 17:55:24,673:INFO:          setuptools: 68.2.2
2024-04-07 17:55:24,673:INFO:             pycaret: 3.2.0
2024-04-07 17:55:24,673:INFO:             IPython: 8.20.0
2024-04-07 17:55:24,673:INFO:          ipywidgets: 7.6.5
2024-04-07 17:55:24,673:INFO:                tqdm: 4.65.0
2024-04-07 17:55:24,673:INFO:               numpy: 1.25.2
2024-04-07 17:55:24,673:INFO:              pandas: 1.5.3
2024-04-07 17:55:24,673:INFO:              jinja2: 3.1.3
2024-04-07 17:55:24,673:INFO:               scipy: 1.10.1
2024-04-07 17:55:24,673:INFO:              joblib: 1.2.0
2024-04-07 17:55:24,673:INFO:             sklearn: 1.2.2
2024-04-07 17:55:24,673:INFO:                pyod: 1.1.3
2024-04-07 17:55:24,674:INFO:            imblearn: 0.11.0
2024-04-07 17:55:24,674:INFO:   category_encoders: 2.6.3
2024-04-07 17:55:24,674:INFO:            lightgbm: 4.3.0
2024-04-07 17:55:24,674:INFO:               numba: 0.59.0
2024-04-07 17:55:24,674:INFO:            requests: 2.31.0
2024-04-07 17:55:24,674:INFO:          matplotlib: 3.6.0
2024-04-07 17:55:24,674:INFO:          scikitplot: 0.3.7
2024-04-07 17:55:24,674:INFO:         yellowbrick: 1.5
2024-04-07 17:55:24,674:INFO:              plotly: 5.9.0
2024-04-07 17:55:24,674:INFO:    plotly-resampler: Not installed
2024-04-07 17:55:24,674:INFO:             kaleido: 0.2.1
2024-04-07 17:55:24,674:INFO:           schemdraw: 0.15
2024-04-07 17:55:24,674:INFO:         statsmodels: 0.14.0
2024-04-07 17:55:24,674:INFO:              sktime: 0.21.1
2024-04-07 17:55:24,674:INFO:               tbats: 1.1.3
2024-04-07 17:55:24,674:INFO:            pmdarima: 2.0.4
2024-04-07 17:55:24,674:INFO:              psutil: 5.9.0
2024-04-07 17:55:24,674:INFO:          markupsafe: 2.1.3
2024-04-07 17:55:24,674:INFO:             pickle5: Not installed
2024-04-07 17:55:24,674:INFO:         cloudpickle: 2.2.1
2024-04-07 17:55:24,674:INFO:         deprecation: 2.1.0
2024-04-07 17:55:24,674:INFO:              xxhash: 3.4.1
2024-04-07 17:55:24,674:INFO:           wurlitzer: Not installed
2024-04-07 17:55:24,674:INFO:PyCaret optional dependencies:
2024-04-07 17:55:24,675:INFO:                shap: 0.44.0
2024-04-07 17:55:24,675:INFO:           interpret: Not installed
2024-04-07 17:55:24,675:INFO:                umap: Not installed
2024-04-07 17:55:24,675:INFO:     ydata_profiling: Not installed
2024-04-07 17:55:24,675:INFO:  explainerdashboard: Not installed
2024-04-07 17:55:24,675:INFO:             autoviz: Not installed
2024-04-07 17:55:24,675:INFO:           fairlearn: Not installed
2024-04-07 17:55:24,675:INFO:          deepchecks: Not installed
2024-04-07 17:55:24,675:INFO:             xgboost: Not installed
2024-04-07 17:55:24,675:INFO:            catboost: 1.2.3
2024-04-07 17:55:24,675:INFO:              kmodes: 0.12.2
2024-04-07 17:55:24,675:INFO:             mlxtend: 0.23.1
2024-04-07 17:55:24,675:INFO:       statsforecast: 1.5.0
2024-04-07 17:55:24,675:INFO:        tune_sklearn: Not installed
2024-04-07 17:55:24,675:INFO:                 ray: Not installed
2024-04-07 17:55:24,675:INFO:            hyperopt: Not installed
2024-04-07 17:55:24,675:INFO:              optuna: Not installed
2024-04-07 17:55:24,675:INFO:               skopt: Not installed
2024-04-07 17:55:24,675:INFO:              mlflow: 2.9.0
2024-04-07 17:55:24,675:INFO:              gradio: Not installed
2024-04-07 17:55:24,675:INFO:             fastapi: Not installed
2024-04-07 17:55:24,675:INFO:             uvicorn: Not installed
2024-04-07 17:55:24,675:INFO:              m2cgen: Not installed
2024-04-07 17:55:24,675:INFO:           evidently: Not installed
2024-04-07 17:55:24,676:INFO:               fugue: 0.8.7
2024-04-07 17:55:24,676:INFO:           streamlit: 1.28.0
2024-04-07 17:55:24,676:INFO:             prophet: Not installed
2024-04-07 17:55:24,676:INFO:None
2024-04-07 17:55:24,676:INFO:Set up data.
2024-04-07 17:55:24,683:INFO:Set up folding strategy.
2024-04-07 17:55:24,683:INFO:Set up train/test split.
2024-04-07 17:55:24,683:INFO:Set up data.
2024-04-07 17:55:24,688:INFO:Set up index.
2024-04-07 17:55:24,689:INFO:Assigning column types.
2024-04-07 17:55:24,693:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:55:24,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:55:24,742:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:55:24,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:55:24,773:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:55:24,819:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:55:24,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:55:24,849:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:55:24,849:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:55:24,850:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:55:24,896:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:55:24,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:55:24,924:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:55:24,971:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:55:25,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:55:25,000:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:55:25,000:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:55:25,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:55:25,075:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:55:25,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:55:25,150:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:55:25,152:INFO:Preparing preprocessing pipeline...
2024-04-07 17:55:25,153:INFO:Set up simple imputation.
2024-04-07 17:55:25,153:INFO:Set up feature normalization.
2024-04-07 17:55:25,177:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:55:25,181:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:55:25,181:INFO:Creating final display dataframe.
2024-04-07 17:55:25,257:INFO:Setup _display_container:                     Description             Value
0                    Session id              1797
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              80e1
2024-04-07 17:55:25,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:55:25,348:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:55:25,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:55:25,428:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 17:55:25,429:INFO:setup() successfully completed in 0.76s...............
2024-04-07 17:55:25,430:INFO:Initializing compare_models()
2024-04-07 17:55:25,430:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEE7650>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEE7650>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:55:25,430:INFO:Checking exceptions
2024-04-07 17:55:25,434:INFO:Preparing display monitor
2024-04-07 17:55:25,461:INFO:Initializing Logistic Regression
2024-04-07 17:55:25,461:INFO:Total runtime is 0.0 minutes
2024-04-07 17:55:25,465:INFO:SubProcess create_model() called ==================================
2024-04-07 17:55:25,465:INFO:Initializing create_model()
2024-04-07 17:55:25,466:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEE7650>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB5BCA18D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:55:25,466:INFO:Checking exceptions
2024-04-07 17:55:25,466:INFO:Importing libraries
2024-04-07 17:55:25,466:INFO:Copying training dataset
2024-04-07 17:55:25,475:INFO:Defining folds
2024-04-07 17:55:25,475:INFO:Declaring metric variables
2024-04-07 17:55:25,479:INFO:Importing untrained model
2024-04-07 17:55:25,483:INFO:Logistic Regression Imported successfully
2024-04-07 17:55:25,491:INFO:Starting cross validation
2024-04-07 17:55:25,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:55:33,047:INFO:Calculating mean and std
2024-04-07 17:55:33,050:INFO:Creating metrics dataframe
2024-04-07 17:55:33,056:INFO:Uploading results into container
2024-04-07 17:55:33,057:INFO:Uploading model into container now
2024-04-07 17:55:33,058:INFO:_master_model_container: 1
2024-04-07 17:55:33,059:INFO:_display_container: 2
2024-04-07 17:55:33,059:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:55:33,059:INFO:create_model() successfully completed......................................
2024-04-07 17:55:33,266:INFO:SubProcess create_model() end ==================================
2024-04-07 17:55:33,266:INFO:Creating metrics dataframe
2024-04-07 17:55:33,274:INFO:Initializing Decision Tree Classifier
2024-04-07 17:55:33,274:INFO:Total runtime is 0.13021790981292725 minutes
2024-04-07 17:55:33,278:INFO:SubProcess create_model() called ==================================
2024-04-07 17:55:33,278:INFO:Initializing create_model()
2024-04-07 17:55:33,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEE7650>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB5BCA18D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:55:33,279:INFO:Checking exceptions
2024-04-07 17:55:33,279:INFO:Importing libraries
2024-04-07 17:55:33,279:INFO:Copying training dataset
2024-04-07 17:55:33,286:INFO:Defining folds
2024-04-07 17:55:33,286:INFO:Declaring metric variables
2024-04-07 17:55:33,291:INFO:Importing untrained model
2024-04-07 17:55:33,295:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:55:33,303:INFO:Starting cross validation
2024-04-07 17:55:33,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:55:38,755:INFO:Calculating mean and std
2024-04-07 17:55:38,756:INFO:Creating metrics dataframe
2024-04-07 17:55:38,759:INFO:Uploading results into container
2024-04-07 17:55:38,760:INFO:Uploading model into container now
2024-04-07 17:55:38,761:INFO:_master_model_container: 2
2024-04-07 17:55:38,761:INFO:_display_container: 2
2024-04-07 17:55:38,762:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1797, splitter='best')
2024-04-07 17:55:38,762:INFO:create_model() successfully completed......................................
2024-04-07 17:55:38,917:INFO:SubProcess create_model() end ==================================
2024-04-07 17:55:38,917:INFO:Creating metrics dataframe
2024-04-07 17:55:38,936:INFO:Initializing create_model()
2024-04-07 17:55:38,936:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEE7650>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1797, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:55:38,937:INFO:Checking exceptions
2024-04-07 17:55:38,940:INFO:Importing libraries
2024-04-07 17:55:38,940:INFO:Copying training dataset
2024-04-07 17:55:38,947:INFO:Defining folds
2024-04-07 17:55:38,947:INFO:Declaring metric variables
2024-04-07 17:55:38,947:INFO:Importing untrained model
2024-04-07 17:55:38,947:INFO:Declaring custom model
2024-04-07 17:55:38,948:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:55:38,948:INFO:Cross validation set to False
2024-04-07 17:55:38,948:INFO:Fitting Model
2024-04-07 17:55:39,004:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1797, splitter='best')
2024-04-07 17:55:39,004:INFO:create_model() successfully completed......................................
2024-04-07 17:55:39,147:INFO:Initializing create_model()
2024-04-07 17:55:39,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEE7650>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:55:39,147:INFO:Checking exceptions
2024-04-07 17:55:39,150:INFO:Importing libraries
2024-04-07 17:55:39,150:INFO:Copying training dataset
2024-04-07 17:55:39,155:INFO:Defining folds
2024-04-07 17:55:39,155:INFO:Declaring metric variables
2024-04-07 17:55:39,156:INFO:Importing untrained model
2024-04-07 17:55:39,156:INFO:Declaring custom model
2024-04-07 17:55:39,156:INFO:Logistic Regression Imported successfully
2024-04-07 17:55:39,157:INFO:Cross validation set to False
2024-04-07 17:55:39,157:INFO:Fitting Model
2024-04-07 17:55:39,179:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:55:39,180:INFO:create_model() successfully completed......................................
2024-04-07 17:55:39,342:INFO:_master_model_container: 2
2024-04-07 17:55:39,342:INFO:_display_container: 2
2024-04-07 17:55:39,343:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1797, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1797, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:55:39,343:INFO:compare_models() successfully completed......................................
2024-04-07 17:55:39,344:INFO:Initializing predict_model()
2024-04-07 17:55:39,344:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB5BEE7650>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1797, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BB13FDBA60>)
2024-04-07 17:55:39,344:INFO:Checking exceptions
2024-04-07 17:55:39,344:INFO:Preloading libraries
2024-04-07 18:09:39,003:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_10024_221e7faafd39424c89fe56c32dfa1bd0_ff2f4df57a0a4edaa4081e4f249d96d5
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:09:39,003:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_10024_6e2b4ad150af404495b891a62ac28670_7add97bae12c40afb17094ea7f9a7f0e
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:09:39,003:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_10024_701c66941ab34dafbb196b6299e5aa87_f26658e76387422781a67d97126b6bc1
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:09:39,004:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_10024_a0066a86bb324579b0dbffb89043d4de_2810640e6c2c46db8c29ec70813a6ed4
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:09:46,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 18:09:46,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 18:09:46,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 18:09:46,528:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 18:09:49,543:INFO:PyCaret ClassificationExperiment
2024-04-07 18:09:49,543:INFO:Logging name: clf-default-name
2024-04-07 18:09:49,543:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:09:49,543:INFO:version 3.2.0
2024-04-07 18:09:49,543:INFO:Initializing setup()
2024-04-07 18:09:49,543:INFO:self.USI: 619b
2024-04-07 18:09:49,543:INFO:self._variable_keys: {'n_jobs_param', 'X_test', 'seed', 'memory', 'y', 'log_plots_param', 'data', 'gpu_n_jobs_param', '_ml_usecase', 'fold_generator', 'is_multiclass', 'X_train', 'idx', 'exp_name_log', '_available_plots', 'fold_shuffle_param', 'USI', 'X', 'pipeline', 'html_param', 'fold_groups_param', 'y_train', 'logging_param', 'exp_id', 'gpu_param', 'y_test', 'target_param', 'fix_imbalance'}
2024-04-07 18:09:49,543:INFO:Checking environment
2024-04-07 18:09:49,543:INFO:python_version: 3.11.7
2024-04-07 18:09:49,543:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:09:49,543:INFO:machine: AMD64
2024-04-07 18:09:49,543:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:09:49,543:INFO:Memory: svmem(total=10575405056, available=3123748864, percent=70.5, used=7451656192, free=3123748864)
2024-04-07 18:09:49,543:INFO:Physical Core: 8
2024-04-07 18:09:49,543:INFO:Logical Core: 16
2024-04-07 18:09:49,544:INFO:Checking libraries
2024-04-07 18:09:49,544:INFO:System:
2024-04-07 18:09:49,544:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:09:49,544:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:09:49,544:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:09:49,544:INFO:PyCaret required dependencies:
2024-04-07 18:09:50,488:INFO:                 pip: 23.3.1
2024-04-07 18:09:50,488:INFO:          setuptools: 68.2.2
2024-04-07 18:09:50,488:INFO:             pycaret: 3.2.0
2024-04-07 18:09:50,488:INFO:             IPython: 8.20.0
2024-04-07 18:09:50,488:INFO:          ipywidgets: 7.6.5
2024-04-07 18:09:50,488:INFO:                tqdm: 4.65.0
2024-04-07 18:09:50,488:INFO:               numpy: 1.25.2
2024-04-07 18:09:50,488:INFO:              pandas: 1.5.3
2024-04-07 18:09:50,488:INFO:              jinja2: 3.1.3
2024-04-07 18:09:50,488:INFO:               scipy: 1.10.1
2024-04-07 18:09:50,488:INFO:              joblib: 1.2.0
2024-04-07 18:09:50,488:INFO:             sklearn: 1.2.2
2024-04-07 18:09:50,488:INFO:                pyod: 1.1.3
2024-04-07 18:09:50,488:INFO:            imblearn: 0.11.0
2024-04-07 18:09:50,489:INFO:   category_encoders: 2.6.3
2024-04-07 18:09:50,489:INFO:            lightgbm: 4.3.0
2024-04-07 18:09:50,489:INFO:               numba: 0.59.0
2024-04-07 18:09:50,489:INFO:            requests: 2.31.0
2024-04-07 18:09:50,489:INFO:          matplotlib: 3.6.0
2024-04-07 18:09:50,489:INFO:          scikitplot: 0.3.7
2024-04-07 18:09:50,489:INFO:         yellowbrick: 1.5
2024-04-07 18:09:50,489:INFO:              plotly: 5.9.0
2024-04-07 18:09:50,489:INFO:    plotly-resampler: Not installed
2024-04-07 18:09:50,489:INFO:             kaleido: 0.2.1
2024-04-07 18:09:50,489:INFO:           schemdraw: 0.15
2024-04-07 18:09:50,489:INFO:         statsmodels: 0.14.0
2024-04-07 18:09:50,489:INFO:              sktime: 0.21.1
2024-04-07 18:09:50,489:INFO:               tbats: 1.1.3
2024-04-07 18:09:50,489:INFO:            pmdarima: 2.0.4
2024-04-07 18:09:50,489:INFO:              psutil: 5.9.0
2024-04-07 18:09:50,489:INFO:          markupsafe: 2.1.3
2024-04-07 18:09:50,489:INFO:             pickle5: Not installed
2024-04-07 18:09:50,489:INFO:         cloudpickle: 2.2.1
2024-04-07 18:09:50,489:INFO:         deprecation: 2.1.0
2024-04-07 18:09:50,489:INFO:              xxhash: 3.4.1
2024-04-07 18:09:50,489:INFO:           wurlitzer: Not installed
2024-04-07 18:09:50,489:INFO:PyCaret optional dependencies:
2024-04-07 18:09:50,498:INFO:                shap: 0.44.0
2024-04-07 18:09:50,498:INFO:           interpret: Not installed
2024-04-07 18:09:50,498:INFO:                umap: Not installed
2024-04-07 18:09:50,498:INFO:     ydata_profiling: Not installed
2024-04-07 18:09:50,498:INFO:  explainerdashboard: Not installed
2024-04-07 18:09:50,498:INFO:             autoviz: Not installed
2024-04-07 18:09:50,498:INFO:           fairlearn: Not installed
2024-04-07 18:09:50,498:INFO:          deepchecks: Not installed
2024-04-07 18:09:50,498:INFO:             xgboost: Not installed
2024-04-07 18:09:50,498:INFO:            catboost: 1.2.3
2024-04-07 18:09:50,498:INFO:              kmodes: 0.12.2
2024-04-07 18:09:50,498:INFO:             mlxtend: 0.23.1
2024-04-07 18:09:50,498:INFO:       statsforecast: 1.5.0
2024-04-07 18:09:50,498:INFO:        tune_sklearn: Not installed
2024-04-07 18:09:50,498:INFO:                 ray: Not installed
2024-04-07 18:09:50,498:INFO:            hyperopt: Not installed
2024-04-07 18:09:50,498:INFO:              optuna: Not installed
2024-04-07 18:09:50,498:INFO:               skopt: Not installed
2024-04-07 18:09:50,498:INFO:              mlflow: 2.9.0
2024-04-07 18:09:50,498:INFO:              gradio: Not installed
2024-04-07 18:09:50,498:INFO:             fastapi: Not installed
2024-04-07 18:09:50,498:INFO:             uvicorn: Not installed
2024-04-07 18:09:50,498:INFO:              m2cgen: Not installed
2024-04-07 18:09:50,498:INFO:           evidently: Not installed
2024-04-07 18:09:50,498:INFO:               fugue: 0.8.7
2024-04-07 18:09:50,498:INFO:           streamlit: 1.28.0
2024-04-07 18:09:50,498:INFO:             prophet: Not installed
2024-04-07 18:09:50,498:INFO:None
2024-04-07 18:09:50,498:INFO:Set up data.
2024-04-07 18:09:50,505:INFO:Set up folding strategy.
2024-04-07 18:09:50,505:INFO:Set up train/test split.
2024-04-07 18:09:50,506:INFO:Set up data.
2024-04-07 18:09:50,508:INFO:Set up index.
2024-04-07 18:09:50,508:INFO:Assigning column types.
2024-04-07 18:09:50,513:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:09:50,558:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:09:50,560:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:09:50,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:09:50,593:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:09:50,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:09:50,663:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:09:50,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:09:50,694:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:09:50,695:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:09:50,740:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:09:50,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:09:50,767:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:09:50,813:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:09:50,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:09:50,841:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:09:50,842:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:09:50,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:09:50,916:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:09:50,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:09:50,988:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:09:50,993:INFO:Preparing preprocessing pipeline...
2024-04-07 18:09:50,994:INFO:Set up simple imputation.
2024-04-07 18:09:50,995:INFO:Set up feature normalization.
2024-04-07 18:09:51,019:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:09:51,025:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:09:51,026:INFO:Creating final display dataframe.
2024-04-07 18:09:51,102:INFO:Setup _display_container:                     Description             Value
0                    Session id              8683
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              619b
2024-04-07 18:09:51,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:09:51,310:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:09:51,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:09:51,386:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:09:51,387:INFO:setup() successfully completed in 1.85s...............
2024-04-07 18:09:51,387:INFO:Initializing compare_models()
2024-04-07 18:09:51,387:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11921F910>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D11921F910>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:09:51,387:INFO:Checking exceptions
2024-04-07 18:09:51,391:INFO:Preparing display monitor
2024-04-07 18:09:51,419:INFO:Initializing Logistic Regression
2024-04-07 18:09:51,420:INFO:Total runtime is 1.6812483469645182e-05 minutes
2024-04-07 18:09:51,424:INFO:SubProcess create_model() called ==================================
2024-04-07 18:09:51,424:INFO:Initializing create_model()
2024-04-07 18:09:51,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11921F910>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D11B031B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:09:51,425:INFO:Checking exceptions
2024-04-07 18:09:51,425:INFO:Importing libraries
2024-04-07 18:09:51,425:INFO:Copying training dataset
2024-04-07 18:09:51,431:INFO:Defining folds
2024-04-07 18:09:51,431:INFO:Declaring metric variables
2024-04-07 18:09:51,434:INFO:Importing untrained model
2024-04-07 18:09:51,438:INFO:Logistic Regression Imported successfully
2024-04-07 18:09:51,447:INFO:Starting cross validation
2024-04-07 18:09:51,448:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:09:59,805:INFO:Calculating mean and std
2024-04-07 18:09:59,807:INFO:Creating metrics dataframe
2024-04-07 18:09:59,813:INFO:Uploading results into container
2024-04-07 18:09:59,815:INFO:Uploading model into container now
2024-04-07 18:09:59,816:INFO:_master_model_container: 1
2024-04-07 18:09:59,817:INFO:_display_container: 2
2024-04-07 18:09:59,817:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8683, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:09:59,817:INFO:create_model() successfully completed......................................
2024-04-07 18:10:00,012:INFO:SubProcess create_model() end ==================================
2024-04-07 18:10:00,012:INFO:Creating metrics dataframe
2024-04-07 18:10:00,021:INFO:Initializing Decision Tree Classifier
2024-04-07 18:10:00,021:INFO:Total runtime is 0.1433752218882243 minutes
2024-04-07 18:10:00,025:INFO:SubProcess create_model() called ==================================
2024-04-07 18:10:00,026:INFO:Initializing create_model()
2024-04-07 18:10:00,026:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11921F910>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D11B031B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:10:00,026:INFO:Checking exceptions
2024-04-07 18:10:00,026:INFO:Importing libraries
2024-04-07 18:10:00,026:INFO:Copying training dataset
2024-04-07 18:10:00,032:INFO:Defining folds
2024-04-07 18:10:00,032:INFO:Declaring metric variables
2024-04-07 18:10:00,037:INFO:Importing untrained model
2024-04-07 18:10:00,040:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:10:00,045:INFO:Starting cross validation
2024-04-07 18:10:00,047:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:10:05,787:INFO:Calculating mean and std
2024-04-07 18:10:05,789:INFO:Creating metrics dataframe
2024-04-07 18:10:05,793:INFO:Uploading results into container
2024-04-07 18:10:05,795:INFO:Uploading model into container now
2024-04-07 18:10:05,796:INFO:_master_model_container: 2
2024-04-07 18:10:05,796:INFO:_display_container: 2
2024-04-07 18:10:05,797:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8683, splitter='best')
2024-04-07 18:10:05,797:INFO:create_model() successfully completed......................................
2024-04-07 18:10:05,974:INFO:SubProcess create_model() end ==================================
2024-04-07 18:10:05,975:INFO:Creating metrics dataframe
2024-04-07 18:10:05,993:INFO:Initializing create_model()
2024-04-07 18:10:05,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11921F910>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8683, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:10:05,993:INFO:Checking exceptions
2024-04-07 18:10:05,996:INFO:Importing libraries
2024-04-07 18:10:05,996:INFO:Copying training dataset
2024-04-07 18:10:06,001:INFO:Defining folds
2024-04-07 18:10:06,001:INFO:Declaring metric variables
2024-04-07 18:10:06,001:INFO:Importing untrained model
2024-04-07 18:10:06,001:INFO:Declaring custom model
2024-04-07 18:10:06,002:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:10:06,003:INFO:Cross validation set to False
2024-04-07 18:10:06,003:INFO:Fitting Model
2024-04-07 18:10:06,057:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8683, splitter='best')
2024-04-07 18:10:06,057:INFO:create_model() successfully completed......................................
2024-04-07 18:10:06,217:INFO:Initializing create_model()
2024-04-07 18:10:06,218:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11921F910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8683, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:10:06,218:INFO:Checking exceptions
2024-04-07 18:10:06,220:INFO:Importing libraries
2024-04-07 18:10:06,220:INFO:Copying training dataset
2024-04-07 18:10:06,225:INFO:Defining folds
2024-04-07 18:10:06,226:INFO:Declaring metric variables
2024-04-07 18:10:06,226:INFO:Importing untrained model
2024-04-07 18:10:06,226:INFO:Declaring custom model
2024-04-07 18:10:06,226:INFO:Logistic Regression Imported successfully
2024-04-07 18:10:06,227:INFO:Cross validation set to False
2024-04-07 18:10:06,227:INFO:Fitting Model
2024-04-07 18:10:06,254:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8683, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:10:06,254:INFO:create_model() successfully completed......................................
2024-04-07 18:10:06,402:INFO:_master_model_container: 2
2024-04-07 18:10:06,402:INFO:_display_container: 2
2024-04-07 18:10:06,403:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8683, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8683, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:10:06,403:INFO:compare_models() successfully completed......................................
2024-04-07 18:10:06,404:INFO:Initializing predict_model()
2024-04-07 18:10:06,404:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11921F910>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8683, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002D11AB05620>)
2024-04-07 18:10:06,404:INFO:Checking exceptions
2024-04-07 18:10:06,404:INFO:Preloading libraries
2024-04-07 18:18:20,554:INFO:PyCaret ClassificationExperiment
2024-04-07 18:18:20,554:INFO:Logging name: clf-default-name
2024-04-07 18:18:20,554:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:18:20,554:INFO:version 3.2.0
2024-04-07 18:18:20,554:INFO:Initializing setup()
2024-04-07 18:18:20,554:INFO:self.USI: d382
2024-04-07 18:18:20,554:INFO:self._variable_keys: {'n_jobs_param', 'X_test', 'seed', 'memory', 'y', 'log_plots_param', 'data', 'gpu_n_jobs_param', '_ml_usecase', 'fold_generator', 'is_multiclass', 'X_train', 'idx', 'exp_name_log', '_available_plots', 'fold_shuffle_param', 'USI', 'X', 'pipeline', 'html_param', 'fold_groups_param', 'y_train', 'logging_param', 'exp_id', 'gpu_param', 'y_test', 'target_param', 'fix_imbalance'}
2024-04-07 18:18:20,554:INFO:Checking environment
2024-04-07 18:18:20,554:INFO:python_version: 3.11.7
2024-04-07 18:18:20,554:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:18:20,554:INFO:machine: AMD64
2024-04-07 18:18:20,554:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:18:20,554:INFO:Memory: svmem(total=10575405056, available=3072286720, percent=70.9, used=7503118336, free=3072286720)
2024-04-07 18:18:20,554:INFO:Physical Core: 8
2024-04-07 18:18:20,554:INFO:Logical Core: 16
2024-04-07 18:18:20,554:INFO:Checking libraries
2024-04-07 18:18:20,554:INFO:System:
2024-04-07 18:18:20,554:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:18:20,554:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:18:20,554:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:18:20,554:INFO:PyCaret required dependencies:
2024-04-07 18:18:20,554:INFO:                 pip: 23.3.1
2024-04-07 18:18:20,554:INFO:          setuptools: 68.2.2
2024-04-07 18:18:20,554:INFO:             pycaret: 3.2.0
2024-04-07 18:18:20,554:INFO:             IPython: 8.20.0
2024-04-07 18:18:20,554:INFO:          ipywidgets: 7.6.5
2024-04-07 18:18:20,554:INFO:                tqdm: 4.65.0
2024-04-07 18:18:20,554:INFO:               numpy: 1.25.2
2024-04-07 18:18:20,554:INFO:              pandas: 1.5.3
2024-04-07 18:18:20,554:INFO:              jinja2: 3.1.3
2024-04-07 18:18:20,554:INFO:               scipy: 1.10.1
2024-04-07 18:18:20,558:INFO:              joblib: 1.2.0
2024-04-07 18:18:20,558:INFO:             sklearn: 1.2.2
2024-04-07 18:18:20,558:INFO:                pyod: 1.1.3
2024-04-07 18:18:20,558:INFO:            imblearn: 0.11.0
2024-04-07 18:18:20,558:INFO:   category_encoders: 2.6.3
2024-04-07 18:18:20,558:INFO:            lightgbm: 4.3.0
2024-04-07 18:18:20,558:INFO:               numba: 0.59.0
2024-04-07 18:18:20,558:INFO:            requests: 2.31.0
2024-04-07 18:18:20,558:INFO:          matplotlib: 3.6.0
2024-04-07 18:18:20,558:INFO:          scikitplot: 0.3.7
2024-04-07 18:18:20,558:INFO:         yellowbrick: 1.5
2024-04-07 18:18:20,558:INFO:              plotly: 5.9.0
2024-04-07 18:18:20,558:INFO:    plotly-resampler: Not installed
2024-04-07 18:18:20,558:INFO:             kaleido: 0.2.1
2024-04-07 18:18:20,558:INFO:           schemdraw: 0.15
2024-04-07 18:18:20,558:INFO:         statsmodels: 0.14.0
2024-04-07 18:18:20,558:INFO:              sktime: 0.21.1
2024-04-07 18:18:20,558:INFO:               tbats: 1.1.3
2024-04-07 18:18:20,558:INFO:            pmdarima: 2.0.4
2024-04-07 18:18:20,558:INFO:              psutil: 5.9.0
2024-04-07 18:18:20,558:INFO:          markupsafe: 2.1.3
2024-04-07 18:18:20,558:INFO:             pickle5: Not installed
2024-04-07 18:18:20,558:INFO:         cloudpickle: 2.2.1
2024-04-07 18:18:20,558:INFO:         deprecation: 2.1.0
2024-04-07 18:18:20,558:INFO:              xxhash: 3.4.1
2024-04-07 18:18:20,558:INFO:           wurlitzer: Not installed
2024-04-07 18:18:20,558:INFO:PyCaret optional dependencies:
2024-04-07 18:18:20,559:INFO:                shap: 0.44.0
2024-04-07 18:18:20,559:INFO:           interpret: Not installed
2024-04-07 18:18:20,559:INFO:                umap: Not installed
2024-04-07 18:18:20,559:INFO:     ydata_profiling: Not installed
2024-04-07 18:18:20,559:INFO:  explainerdashboard: Not installed
2024-04-07 18:18:20,559:INFO:             autoviz: Not installed
2024-04-07 18:18:20,559:INFO:           fairlearn: Not installed
2024-04-07 18:18:20,559:INFO:          deepchecks: Not installed
2024-04-07 18:18:20,559:INFO:             xgboost: Not installed
2024-04-07 18:18:20,559:INFO:            catboost: 1.2.3
2024-04-07 18:18:20,559:INFO:              kmodes: 0.12.2
2024-04-07 18:18:20,559:INFO:             mlxtend: 0.23.1
2024-04-07 18:18:20,559:INFO:       statsforecast: 1.5.0
2024-04-07 18:18:20,559:INFO:        tune_sklearn: Not installed
2024-04-07 18:18:20,559:INFO:                 ray: Not installed
2024-04-07 18:18:20,559:INFO:            hyperopt: Not installed
2024-04-07 18:18:20,559:INFO:              optuna: Not installed
2024-04-07 18:18:20,559:INFO:               skopt: Not installed
2024-04-07 18:18:20,559:INFO:              mlflow: 2.9.0
2024-04-07 18:18:20,559:INFO:              gradio: Not installed
2024-04-07 18:18:20,559:INFO:             fastapi: Not installed
2024-04-07 18:18:20,559:INFO:             uvicorn: Not installed
2024-04-07 18:18:20,559:INFO:              m2cgen: Not installed
2024-04-07 18:18:20,559:INFO:           evidently: Not installed
2024-04-07 18:18:20,559:INFO:               fugue: 0.8.7
2024-04-07 18:18:20,559:INFO:           streamlit: 1.28.0
2024-04-07 18:18:20,559:INFO:             prophet: Not installed
2024-04-07 18:18:20,559:INFO:None
2024-04-07 18:18:20,559:INFO:Set up data.
2024-04-07 18:18:20,568:INFO:Set up folding strategy.
2024-04-07 18:18:20,568:INFO:Set up train/test split.
2024-04-07 18:18:20,568:INFO:Set up data.
2024-04-07 18:18:20,572:INFO:Set up index.
2024-04-07 18:18:20,572:INFO:Assigning column types.
2024-04-07 18:18:20,577:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:18:20,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:18:20,624:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:18:20,651:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:18:20,651:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:18:20,697:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:18:20,697:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:18:20,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:18:20,727:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:18:20,729:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:18:20,774:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:18:20,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:18:20,802:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:18:20,849:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:18:20,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:18:20,878:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:18:20,878:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:18:20,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:18:20,941:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:18:21,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:18:21,019:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:18:21,019:INFO:Preparing preprocessing pipeline...
2024-04-07 18:18:21,019:INFO:Set up simple imputation.
2024-04-07 18:18:21,019:INFO:Set up feature normalization.
2024-04-07 18:18:21,051:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:18:21,051:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:18:21,051:INFO:Creating final display dataframe.
2024-04-07 18:18:21,134:INFO:Setup _display_container:                     Description             Value
0                    Session id              3673
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              d382
2024-04-07 18:18:21,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:18:21,215:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:18:21,282:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:18:21,282:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:18:21,282:INFO:setup() successfully completed in 0.73s...............
2024-04-07 18:18:21,282:INFO:Initializing compare_models()
2024-04-07 18:18:21,282:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB43D0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB43D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:18:21,282:INFO:Checking exceptions
2024-04-07 18:18:21,282:INFO:Preparing display monitor
2024-04-07 18:18:21,321:INFO:Initializing Logistic Regression
2024-04-07 18:18:21,321:INFO:Total runtime is 0.0 minutes
2024-04-07 18:18:21,325:INFO:SubProcess create_model() called ==================================
2024-04-07 18:18:21,325:INFO:Initializing create_model()
2024-04-07 18:18:21,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB43D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D11915E690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:18:21,325:INFO:Checking exceptions
2024-04-07 18:18:21,325:INFO:Importing libraries
2024-04-07 18:18:21,326:INFO:Copying training dataset
2024-04-07 18:18:21,330:INFO:Defining folds
2024-04-07 18:18:21,330:INFO:Declaring metric variables
2024-04-07 18:18:21,334:INFO:Importing untrained model
2024-04-07 18:18:21,337:INFO:Logistic Regression Imported successfully
2024-04-07 18:18:21,342:INFO:Starting cross validation
2024-04-07 18:18:21,342:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:18:29,096:INFO:Calculating mean and std
2024-04-07 18:18:29,097:INFO:Creating metrics dataframe
2024-04-07 18:18:29,103:INFO:Uploading results into container
2024-04-07 18:18:29,104:INFO:Uploading model into container now
2024-04-07 18:18:29,106:INFO:_master_model_container: 1
2024-04-07 18:18:29,106:INFO:_display_container: 2
2024-04-07 18:18:29,107:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3673, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:18:29,107:INFO:create_model() successfully completed......................................
2024-04-07 18:18:29,317:INFO:SubProcess create_model() end ==================================
2024-04-07 18:18:29,317:INFO:Creating metrics dataframe
2024-04-07 18:18:29,326:INFO:Initializing Decision Tree Classifier
2024-04-07 18:18:29,326:INFO:Total runtime is 0.1334171692530314 minutes
2024-04-07 18:18:29,329:INFO:SubProcess create_model() called ==================================
2024-04-07 18:18:29,329:INFO:Initializing create_model()
2024-04-07 18:18:29,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB43D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D11915E690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:18:29,330:INFO:Checking exceptions
2024-04-07 18:18:29,330:INFO:Importing libraries
2024-04-07 18:18:29,330:INFO:Copying training dataset
2024-04-07 18:18:29,336:INFO:Defining folds
2024-04-07 18:18:29,336:INFO:Declaring metric variables
2024-04-07 18:18:29,339:INFO:Importing untrained model
2024-04-07 18:18:29,343:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:18:29,352:INFO:Starting cross validation
2024-04-07 18:18:29,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:18:35,692:INFO:Calculating mean and std
2024-04-07 18:18:35,694:INFO:Creating metrics dataframe
2024-04-07 18:18:35,699:INFO:Uploading results into container
2024-04-07 18:18:35,700:INFO:Uploading model into container now
2024-04-07 18:18:35,701:INFO:_master_model_container: 2
2024-04-07 18:18:35,701:INFO:_display_container: 2
2024-04-07 18:18:35,701:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3673, splitter='best')
2024-04-07 18:18:35,701:INFO:create_model() successfully completed......................................
2024-04-07 18:18:35,969:INFO:SubProcess create_model() end ==================================
2024-04-07 18:18:35,969:INFO:Creating metrics dataframe
2024-04-07 18:18:35,994:INFO:Initializing create_model()
2024-04-07 18:18:35,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB43D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3673, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:18:35,994:INFO:Checking exceptions
2024-04-07 18:18:36,000:INFO:Importing libraries
2024-04-07 18:18:36,000:INFO:Copying training dataset
2024-04-07 18:18:36,006:INFO:Defining folds
2024-04-07 18:18:36,006:INFO:Declaring metric variables
2024-04-07 18:18:36,006:INFO:Importing untrained model
2024-04-07 18:18:36,006:INFO:Declaring custom model
2024-04-07 18:18:36,007:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:18:36,008:INFO:Cross validation set to False
2024-04-07 18:18:36,008:INFO:Fitting Model
2024-04-07 18:18:36,075:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3673, splitter='best')
2024-04-07 18:18:36,075:INFO:create_model() successfully completed......................................
2024-04-07 18:18:36,252:INFO:Initializing create_model()
2024-04-07 18:18:36,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB43D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3673, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:18:36,252:INFO:Checking exceptions
2024-04-07 18:18:36,260:INFO:Importing libraries
2024-04-07 18:18:36,260:INFO:Copying training dataset
2024-04-07 18:18:36,267:INFO:Defining folds
2024-04-07 18:18:36,269:INFO:Declaring metric variables
2024-04-07 18:18:36,269:INFO:Importing untrained model
2024-04-07 18:18:36,269:INFO:Declaring custom model
2024-04-07 18:18:36,269:INFO:Logistic Regression Imported successfully
2024-04-07 18:18:36,270:INFO:Cross validation set to False
2024-04-07 18:18:36,270:INFO:Fitting Model
2024-04-07 18:18:36,291:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3673, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:18:36,291:INFO:create_model() successfully completed......................................
2024-04-07 18:18:36,481:INFO:_master_model_container: 2
2024-04-07 18:18:36,482:INFO:_display_container: 2
2024-04-07 18:18:36,482:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3673, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3673, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:18:36,483:INFO:compare_models() successfully completed......................................
2024-04-07 18:19:06,474:INFO:PyCaret ClassificationExperiment
2024-04-07 18:19:06,474:INFO:Logging name: clf-default-name
2024-04-07 18:19:06,474:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:19:06,474:INFO:version 3.2.0
2024-04-07 18:19:06,474:INFO:Initializing setup()
2024-04-07 18:19:06,474:INFO:self.USI: 8432
2024-04-07 18:19:06,474:INFO:self._variable_keys: {'n_jobs_param', 'X_test', 'seed', 'memory', 'y', 'log_plots_param', 'data', 'gpu_n_jobs_param', '_ml_usecase', 'fold_generator', 'is_multiclass', 'X_train', 'idx', 'exp_name_log', '_available_plots', 'fold_shuffle_param', 'USI', 'X', 'pipeline', 'html_param', 'fold_groups_param', 'y_train', 'logging_param', 'exp_id', 'gpu_param', 'y_test', 'target_param', 'fix_imbalance'}
2024-04-07 18:19:06,474:INFO:Checking environment
2024-04-07 18:19:06,474:INFO:python_version: 3.11.7
2024-04-07 18:19:06,474:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:19:06,474:INFO:machine: AMD64
2024-04-07 18:19:06,474:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:19:06,474:INFO:Memory: svmem(total=10575405056, available=746430464, percent=92.9, used=9828974592, free=746430464)
2024-04-07 18:19:06,475:INFO:Physical Core: 8
2024-04-07 18:19:06,475:INFO:Logical Core: 16
2024-04-07 18:19:06,475:INFO:Checking libraries
2024-04-07 18:19:06,475:INFO:System:
2024-04-07 18:19:06,475:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:19:06,475:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:19:06,475:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:19:06,475:INFO:PyCaret required dependencies:
2024-04-07 18:19:06,475:INFO:                 pip: 23.3.1
2024-04-07 18:19:06,475:INFO:          setuptools: 68.2.2
2024-04-07 18:19:06,475:INFO:             pycaret: 3.2.0
2024-04-07 18:19:06,475:INFO:             IPython: 8.20.0
2024-04-07 18:19:06,475:INFO:          ipywidgets: 7.6.5
2024-04-07 18:19:06,475:INFO:                tqdm: 4.65.0
2024-04-07 18:19:06,475:INFO:               numpy: 1.25.2
2024-04-07 18:19:06,475:INFO:              pandas: 1.5.3
2024-04-07 18:19:06,475:INFO:              jinja2: 3.1.3
2024-04-07 18:19:06,475:INFO:               scipy: 1.10.1
2024-04-07 18:19:06,475:INFO:              joblib: 1.2.0
2024-04-07 18:19:06,475:INFO:             sklearn: 1.2.2
2024-04-07 18:19:06,475:INFO:                pyod: 1.1.3
2024-04-07 18:19:06,475:INFO:            imblearn: 0.11.0
2024-04-07 18:19:06,475:INFO:   category_encoders: 2.6.3
2024-04-07 18:19:06,475:INFO:            lightgbm: 4.3.0
2024-04-07 18:19:06,475:INFO:               numba: 0.59.0
2024-04-07 18:19:06,475:INFO:            requests: 2.31.0
2024-04-07 18:19:06,475:INFO:          matplotlib: 3.6.0
2024-04-07 18:19:06,475:INFO:          scikitplot: 0.3.7
2024-04-07 18:19:06,475:INFO:         yellowbrick: 1.5
2024-04-07 18:19:06,475:INFO:              plotly: 5.9.0
2024-04-07 18:19:06,475:INFO:    plotly-resampler: Not installed
2024-04-07 18:19:06,475:INFO:             kaleido: 0.2.1
2024-04-07 18:19:06,475:INFO:           schemdraw: 0.15
2024-04-07 18:19:06,475:INFO:         statsmodels: 0.14.0
2024-04-07 18:19:06,475:INFO:              sktime: 0.21.1
2024-04-07 18:19:06,475:INFO:               tbats: 1.1.3
2024-04-07 18:19:06,475:INFO:            pmdarima: 2.0.4
2024-04-07 18:19:06,475:INFO:              psutil: 5.9.0
2024-04-07 18:19:06,475:INFO:          markupsafe: 2.1.3
2024-04-07 18:19:06,475:INFO:             pickle5: Not installed
2024-04-07 18:19:06,475:INFO:         cloudpickle: 2.2.1
2024-04-07 18:19:06,475:INFO:         deprecation: 2.1.0
2024-04-07 18:19:06,475:INFO:              xxhash: 3.4.1
2024-04-07 18:19:06,475:INFO:           wurlitzer: Not installed
2024-04-07 18:19:06,475:INFO:PyCaret optional dependencies:
2024-04-07 18:19:06,475:INFO:                shap: 0.44.0
2024-04-07 18:19:06,475:INFO:           interpret: Not installed
2024-04-07 18:19:06,475:INFO:                umap: Not installed
2024-04-07 18:19:06,475:INFO:     ydata_profiling: Not installed
2024-04-07 18:19:06,475:INFO:  explainerdashboard: Not installed
2024-04-07 18:19:06,475:INFO:             autoviz: Not installed
2024-04-07 18:19:06,475:INFO:           fairlearn: Not installed
2024-04-07 18:19:06,475:INFO:          deepchecks: Not installed
2024-04-07 18:19:06,475:INFO:             xgboost: Not installed
2024-04-07 18:19:06,475:INFO:            catboost: 1.2.3
2024-04-07 18:19:06,475:INFO:              kmodes: 0.12.2
2024-04-07 18:19:06,475:INFO:             mlxtend: 0.23.1
2024-04-07 18:19:06,475:INFO:       statsforecast: 1.5.0
2024-04-07 18:19:06,475:INFO:        tune_sklearn: Not installed
2024-04-07 18:19:06,475:INFO:                 ray: Not installed
2024-04-07 18:19:06,475:INFO:            hyperopt: Not installed
2024-04-07 18:19:06,475:INFO:              optuna: Not installed
2024-04-07 18:19:06,475:INFO:               skopt: Not installed
2024-04-07 18:19:06,475:INFO:              mlflow: 2.9.0
2024-04-07 18:19:06,475:INFO:              gradio: Not installed
2024-04-07 18:19:06,475:INFO:             fastapi: Not installed
2024-04-07 18:19:06,475:INFO:             uvicorn: Not installed
2024-04-07 18:19:06,475:INFO:              m2cgen: Not installed
2024-04-07 18:19:06,475:INFO:           evidently: Not installed
2024-04-07 18:19:06,475:INFO:               fugue: 0.8.7
2024-04-07 18:19:06,475:INFO:           streamlit: 1.28.0
2024-04-07 18:19:06,475:INFO:             prophet: Not installed
2024-04-07 18:19:06,475:INFO:None
2024-04-07 18:19:06,475:INFO:Set up data.
2024-04-07 18:19:06,485:INFO:Set up folding strategy.
2024-04-07 18:19:06,485:INFO:Set up train/test split.
2024-04-07 18:19:06,485:INFO:Set up data.
2024-04-07 18:19:06,489:INFO:Set up index.
2024-04-07 18:19:06,489:INFO:Assigning column types.
2024-04-07 18:19:06,498:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:19:06,546:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:19:06,547:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:06,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:06,578:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:06,615:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:19:06,615:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:06,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:06,647:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:06,647:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:19:06,701:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:06,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:06,729:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:06,777:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:06,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:06,805:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:06,806:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:19:06,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:06,879:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:06,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:06,954:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:06,955:INFO:Preparing preprocessing pipeline...
2024-04-07 18:19:06,956:INFO:Set up simple imputation.
2024-04-07 18:19:06,956:INFO:Set up feature normalization.
2024-04-07 18:19:06,982:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:19:06,985:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:19:06,985:INFO:Creating final display dataframe.
2024-04-07 18:19:07,062:INFO:Setup _display_container:                     Description             Value
0                    Session id              1458
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              8432
2024-04-07 18:19:07,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:07,155:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:07,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:07,224:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:07,230:INFO:setup() successfully completed in 0.76s...............
2024-04-07 18:19:07,230:INFO:Initializing compare_models()
2024-04-07 18:19:07,230:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB4710>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB4710>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:19:07,230:INFO:Checking exceptions
2024-04-07 18:19:07,230:INFO:Preparing display monitor
2024-04-07 18:19:07,257:INFO:Initializing Logistic Regression
2024-04-07 18:19:07,257:INFO:Total runtime is 0.0 minutes
2024-04-07 18:19:07,265:INFO:SubProcess create_model() called ==================================
2024-04-07 18:19:07,265:INFO:Initializing create_model()
2024-04-07 18:19:07,266:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB4710>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D1511750D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:07,266:INFO:Checking exceptions
2024-04-07 18:19:07,266:INFO:Importing libraries
2024-04-07 18:19:07,266:INFO:Copying training dataset
2024-04-07 18:19:07,272:INFO:Defining folds
2024-04-07 18:19:07,272:INFO:Declaring metric variables
2024-04-07 18:19:07,272:INFO:Importing untrained model
2024-04-07 18:19:07,272:INFO:Logistic Regression Imported successfully
2024-04-07 18:19:07,287:INFO:Starting cross validation
2024-04-07 18:19:07,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:19:07,399:INFO:Calculating mean and std
2024-04-07 18:19:07,400:INFO:Creating metrics dataframe
2024-04-07 18:19:07,403:INFO:Uploading results into container
2024-04-07 18:19:07,403:INFO:Uploading model into container now
2024-04-07 18:19:07,403:INFO:_master_model_container: 1
2024-04-07 18:19:07,403:INFO:_display_container: 2
2024-04-07 18:19:07,404:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1458, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:19:07,404:INFO:create_model() successfully completed......................................
2024-04-07 18:19:07,547:INFO:SubProcess create_model() end ==================================
2024-04-07 18:19:07,547:INFO:Creating metrics dataframe
2024-04-07 18:19:07,550:INFO:Initializing Decision Tree Classifier
2024-04-07 18:19:07,550:INFO:Total runtime is 0.004885756969451904 minutes
2024-04-07 18:19:07,560:INFO:SubProcess create_model() called ==================================
2024-04-07 18:19:07,560:INFO:Initializing create_model()
2024-04-07 18:19:07,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB4710>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D1511750D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:07,560:INFO:Checking exceptions
2024-04-07 18:19:07,560:INFO:Importing libraries
2024-04-07 18:19:07,561:INFO:Copying training dataset
2024-04-07 18:19:07,566:INFO:Defining folds
2024-04-07 18:19:07,566:INFO:Declaring metric variables
2024-04-07 18:19:07,570:INFO:Importing untrained model
2024-04-07 18:19:07,571:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:19:07,585:INFO:Starting cross validation
2024-04-07 18:19:07,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:19:07,733:INFO:Calculating mean and std
2024-04-07 18:19:07,733:INFO:Creating metrics dataframe
2024-04-07 18:19:07,749:INFO:Uploading results into container
2024-04-07 18:19:07,750:INFO:Uploading model into container now
2024-04-07 18:19:07,750:INFO:_master_model_container: 2
2024-04-07 18:19:07,750:INFO:_display_container: 2
2024-04-07 18:19:07,750:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1458, splitter='best')
2024-04-07 18:19:07,750:INFO:create_model() successfully completed......................................
2024-04-07 18:19:07,891:INFO:SubProcess create_model() end ==================================
2024-04-07 18:19:07,891:INFO:Creating metrics dataframe
2024-04-07 18:19:07,902:INFO:Initializing create_model()
2024-04-07 18:19:07,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB4710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1458, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:07,902:INFO:Checking exceptions
2024-04-07 18:19:07,902:INFO:Importing libraries
2024-04-07 18:19:07,902:INFO:Copying training dataset
2024-04-07 18:19:07,918:INFO:Defining folds
2024-04-07 18:19:07,919:INFO:Declaring metric variables
2024-04-07 18:19:07,919:INFO:Importing untrained model
2024-04-07 18:19:07,919:INFO:Declaring custom model
2024-04-07 18:19:07,919:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:19:07,920:INFO:Cross validation set to False
2024-04-07 18:19:07,920:INFO:Fitting Model
2024-04-07 18:19:07,968:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1458, splitter='best')
2024-04-07 18:19:07,968:INFO:create_model() successfully completed......................................
2024-04-07 18:19:08,118:INFO:Initializing create_model()
2024-04-07 18:19:08,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11FAB4710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1458, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:08,118:INFO:Checking exceptions
2024-04-07 18:19:08,123:INFO:Importing libraries
2024-04-07 18:19:08,123:INFO:Copying training dataset
2024-04-07 18:19:08,124:INFO:Defining folds
2024-04-07 18:19:08,124:INFO:Declaring metric variables
2024-04-07 18:19:08,124:INFO:Importing untrained model
2024-04-07 18:19:08,124:INFO:Declaring custom model
2024-04-07 18:19:08,124:INFO:Logistic Regression Imported successfully
2024-04-07 18:19:08,124:INFO:Cross validation set to False
2024-04-07 18:19:08,124:INFO:Fitting Model
2024-04-07 18:19:08,153:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1458, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:19:08,153:INFO:create_model() successfully completed......................................
2024-04-07 18:19:08,316:INFO:_master_model_container: 2
2024-04-07 18:19:08,317:INFO:_display_container: 2
2024-04-07 18:19:08,317:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1458, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1458, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:19:08,317:INFO:compare_models() successfully completed......................................
2024-04-07 18:19:24,966:INFO:PyCaret ClassificationExperiment
2024-04-07 18:19:24,966:INFO:Logging name: clf-default-name
2024-04-07 18:19:24,966:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:19:24,966:INFO:version 3.2.0
2024-04-07 18:19:24,966:INFO:Initializing setup()
2024-04-07 18:19:24,966:INFO:self.USI: 0d34
2024-04-07 18:19:24,966:INFO:self._variable_keys: {'n_jobs_param', 'X_test', 'seed', 'memory', 'y', 'log_plots_param', 'data', 'gpu_n_jobs_param', '_ml_usecase', 'fold_generator', 'is_multiclass', 'X_train', 'idx', 'exp_name_log', '_available_plots', 'fold_shuffle_param', 'USI', 'X', 'pipeline', 'html_param', 'fold_groups_param', 'y_train', 'logging_param', 'exp_id', 'gpu_param', 'y_test', 'target_param', 'fix_imbalance'}
2024-04-07 18:19:24,966:INFO:Checking environment
2024-04-07 18:19:24,966:INFO:python_version: 3.11.7
2024-04-07 18:19:24,966:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:19:24,966:INFO:machine: AMD64
2024-04-07 18:19:24,966:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:19:24,966:INFO:Memory: svmem(total=10575405056, available=819691520, percent=92.2, used=9755713536, free=819691520)
2024-04-07 18:19:24,966:INFO:Physical Core: 8
2024-04-07 18:19:24,967:INFO:Logical Core: 16
2024-04-07 18:19:24,967:INFO:Checking libraries
2024-04-07 18:19:24,967:INFO:System:
2024-04-07 18:19:24,967:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:19:24,967:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:19:24,967:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:19:24,967:INFO:PyCaret required dependencies:
2024-04-07 18:19:24,967:INFO:                 pip: 23.3.1
2024-04-07 18:19:24,967:INFO:          setuptools: 68.2.2
2024-04-07 18:19:24,967:INFO:             pycaret: 3.2.0
2024-04-07 18:19:24,967:INFO:             IPython: 8.20.0
2024-04-07 18:19:24,967:INFO:          ipywidgets: 7.6.5
2024-04-07 18:19:24,967:INFO:                tqdm: 4.65.0
2024-04-07 18:19:24,967:INFO:               numpy: 1.25.2
2024-04-07 18:19:24,967:INFO:              pandas: 1.5.3
2024-04-07 18:19:24,967:INFO:              jinja2: 3.1.3
2024-04-07 18:19:24,967:INFO:               scipy: 1.10.1
2024-04-07 18:19:24,967:INFO:              joblib: 1.2.0
2024-04-07 18:19:24,967:INFO:             sklearn: 1.2.2
2024-04-07 18:19:24,967:INFO:                pyod: 1.1.3
2024-04-07 18:19:24,967:INFO:            imblearn: 0.11.0
2024-04-07 18:19:24,967:INFO:   category_encoders: 2.6.3
2024-04-07 18:19:24,967:INFO:            lightgbm: 4.3.0
2024-04-07 18:19:24,967:INFO:               numba: 0.59.0
2024-04-07 18:19:24,967:INFO:            requests: 2.31.0
2024-04-07 18:19:24,967:INFO:          matplotlib: 3.6.0
2024-04-07 18:19:24,969:INFO:          scikitplot: 0.3.7
2024-04-07 18:19:24,969:INFO:         yellowbrick: 1.5
2024-04-07 18:19:24,969:INFO:              plotly: 5.9.0
2024-04-07 18:19:24,969:INFO:    plotly-resampler: Not installed
2024-04-07 18:19:24,969:INFO:             kaleido: 0.2.1
2024-04-07 18:19:24,969:INFO:           schemdraw: 0.15
2024-04-07 18:19:24,969:INFO:         statsmodels: 0.14.0
2024-04-07 18:19:24,969:INFO:              sktime: 0.21.1
2024-04-07 18:19:24,969:INFO:               tbats: 1.1.3
2024-04-07 18:19:24,969:INFO:            pmdarima: 2.0.4
2024-04-07 18:19:24,969:INFO:              psutil: 5.9.0
2024-04-07 18:19:24,969:INFO:          markupsafe: 2.1.3
2024-04-07 18:19:24,969:INFO:             pickle5: Not installed
2024-04-07 18:19:24,969:INFO:         cloudpickle: 2.2.1
2024-04-07 18:19:24,969:INFO:         deprecation: 2.1.0
2024-04-07 18:19:24,969:INFO:              xxhash: 3.4.1
2024-04-07 18:19:24,969:INFO:           wurlitzer: Not installed
2024-04-07 18:19:24,969:INFO:PyCaret optional dependencies:
2024-04-07 18:19:24,969:INFO:                shap: 0.44.0
2024-04-07 18:19:24,969:INFO:           interpret: Not installed
2024-04-07 18:19:24,969:INFO:                umap: Not installed
2024-04-07 18:19:24,969:INFO:     ydata_profiling: Not installed
2024-04-07 18:19:24,969:INFO:  explainerdashboard: Not installed
2024-04-07 18:19:24,969:INFO:             autoviz: Not installed
2024-04-07 18:19:24,969:INFO:           fairlearn: Not installed
2024-04-07 18:19:24,969:INFO:          deepchecks: Not installed
2024-04-07 18:19:24,969:INFO:             xgboost: Not installed
2024-04-07 18:19:24,970:INFO:            catboost: 1.2.3
2024-04-07 18:19:24,970:INFO:              kmodes: 0.12.2
2024-04-07 18:19:24,970:INFO:             mlxtend: 0.23.1
2024-04-07 18:19:24,970:INFO:       statsforecast: 1.5.0
2024-04-07 18:19:24,970:INFO:        tune_sklearn: Not installed
2024-04-07 18:19:24,970:INFO:                 ray: Not installed
2024-04-07 18:19:24,970:INFO:            hyperopt: Not installed
2024-04-07 18:19:24,970:INFO:              optuna: Not installed
2024-04-07 18:19:24,970:INFO:               skopt: Not installed
2024-04-07 18:19:24,970:INFO:              mlflow: 2.9.0
2024-04-07 18:19:24,970:INFO:              gradio: Not installed
2024-04-07 18:19:24,970:INFO:             fastapi: Not installed
2024-04-07 18:19:24,970:INFO:             uvicorn: Not installed
2024-04-07 18:19:24,970:INFO:              m2cgen: Not installed
2024-04-07 18:19:24,970:INFO:           evidently: Not installed
2024-04-07 18:19:24,970:INFO:               fugue: 0.8.7
2024-04-07 18:19:24,970:INFO:           streamlit: 1.28.0
2024-04-07 18:19:24,970:INFO:             prophet: Not installed
2024-04-07 18:19:24,970:INFO:None
2024-04-07 18:19:24,970:INFO:Set up data.
2024-04-07 18:19:24,975:INFO:Set up folding strategy.
2024-04-07 18:19:24,975:INFO:Set up train/test split.
2024-04-07 18:19:24,975:INFO:Set up data.
2024-04-07 18:19:24,982:INFO:Set up index.
2024-04-07 18:19:24,982:INFO:Assigning column types.
2024-04-07 18:19:24,989:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:19:25,036:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:19:25,037:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:25,065:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:25,066:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:25,116:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:19:25,117:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:25,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:25,147:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:25,148:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:19:25,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:25,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:25,222:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:25,268:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:25,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:25,296:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:25,297:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:19:25,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:25,362:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:25,441:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:25,441:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:25,441:INFO:Preparing preprocessing pipeline...
2024-04-07 18:19:25,441:INFO:Set up simple imputation.
2024-04-07 18:19:25,441:INFO:Set up feature normalization.
2024-04-07 18:19:25,474:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:19:25,474:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:19:25,474:INFO:Creating final display dataframe.
2024-04-07 18:19:25,552:INFO:Setup _display_container:                     Description             Value
0                    Session id              2133
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              0d34
2024-04-07 18:19:25,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:25,647:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:25,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:25,718:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:25,718:INFO:setup() successfully completed in 0.75s...............
2024-04-07 18:19:25,718:INFO:Initializing compare_models()
2024-04-07 18:19:25,718:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11B01B410>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D11B01B410>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:19:25,718:INFO:Checking exceptions
2024-04-07 18:19:25,718:INFO:Preparing display monitor
2024-04-07 18:19:25,754:INFO:Initializing Logistic Regression
2024-04-07 18:19:25,754:INFO:Total runtime is 0.0 minutes
2024-04-07 18:19:25,758:INFO:SubProcess create_model() called ==================================
2024-04-07 18:19:25,759:INFO:Initializing create_model()
2024-04-07 18:19:25,759:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11B01B410>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D118F027D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:25,759:INFO:Checking exceptions
2024-04-07 18:19:25,759:INFO:Importing libraries
2024-04-07 18:19:25,759:INFO:Copying training dataset
2024-04-07 18:19:25,764:INFO:Defining folds
2024-04-07 18:19:25,764:INFO:Declaring metric variables
2024-04-07 18:19:25,767:INFO:Importing untrained model
2024-04-07 18:19:25,772:INFO:Logistic Regression Imported successfully
2024-04-07 18:19:25,778:INFO:Starting cross validation
2024-04-07 18:19:25,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:19:25,892:INFO:Calculating mean and std
2024-04-07 18:19:25,892:INFO:Creating metrics dataframe
2024-04-07 18:19:25,900:INFO:Uploading results into container
2024-04-07 18:19:25,900:INFO:Uploading model into container now
2024-04-07 18:19:25,900:INFO:_master_model_container: 1
2024-04-07 18:19:25,900:INFO:_display_container: 2
2024-04-07 18:19:25,900:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2133, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:19:25,900:INFO:create_model() successfully completed......................................
2024-04-07 18:19:26,049:INFO:SubProcess create_model() end ==================================
2024-04-07 18:19:26,050:INFO:Creating metrics dataframe
2024-04-07 18:19:26,054:INFO:Initializing Decision Tree Classifier
2024-04-07 18:19:26,054:INFO:Total runtime is 0.004991153875986735 minutes
2024-04-07 18:19:26,062:INFO:SubProcess create_model() called ==================================
2024-04-07 18:19:26,062:INFO:Initializing create_model()
2024-04-07 18:19:26,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11B01B410>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D118F027D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:26,062:INFO:Checking exceptions
2024-04-07 18:19:26,062:INFO:Importing libraries
2024-04-07 18:19:26,062:INFO:Copying training dataset
2024-04-07 18:19:26,070:INFO:Defining folds
2024-04-07 18:19:26,070:INFO:Declaring metric variables
2024-04-07 18:19:26,073:INFO:Importing untrained model
2024-04-07 18:19:26,075:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:19:26,084:INFO:Starting cross validation
2024-04-07 18:19:26,085:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:19:26,253:INFO:Calculating mean and std
2024-04-07 18:19:26,253:INFO:Creating metrics dataframe
2024-04-07 18:19:26,253:INFO:Uploading results into container
2024-04-07 18:19:26,253:INFO:Uploading model into container now
2024-04-07 18:19:26,253:INFO:_master_model_container: 2
2024-04-07 18:19:26,253:INFO:_display_container: 2
2024-04-07 18:19:26,253:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2133, splitter='best')
2024-04-07 18:19:26,253:INFO:create_model() successfully completed......................................
2024-04-07 18:19:26,401:INFO:SubProcess create_model() end ==================================
2024-04-07 18:19:26,401:INFO:Creating metrics dataframe
2024-04-07 18:19:26,417:INFO:Initializing create_model()
2024-04-07 18:19:26,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11B01B410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2133, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:26,417:INFO:Checking exceptions
2024-04-07 18:19:26,427:INFO:Importing libraries
2024-04-07 18:19:26,427:INFO:Copying training dataset
2024-04-07 18:19:26,431:INFO:Defining folds
2024-04-07 18:19:26,432:INFO:Declaring metric variables
2024-04-07 18:19:26,432:INFO:Importing untrained model
2024-04-07 18:19:26,432:INFO:Declaring custom model
2024-04-07 18:19:26,432:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:19:26,433:INFO:Cross validation set to False
2024-04-07 18:19:26,433:INFO:Fitting Model
2024-04-07 18:19:26,486:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2133, splitter='best')
2024-04-07 18:19:26,486:INFO:create_model() successfully completed......................................
2024-04-07 18:19:26,634:INFO:Initializing create_model()
2024-04-07 18:19:26,634:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11B01B410>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2133, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:26,634:INFO:Checking exceptions
2024-04-07 18:19:26,634:INFO:Importing libraries
2024-04-07 18:19:26,634:INFO:Copying training dataset
2024-04-07 18:19:26,634:INFO:Defining folds
2024-04-07 18:19:26,634:INFO:Declaring metric variables
2024-04-07 18:19:26,634:INFO:Importing untrained model
2024-04-07 18:19:26,634:INFO:Declaring custom model
2024-04-07 18:19:26,634:INFO:Logistic Regression Imported successfully
2024-04-07 18:19:26,634:INFO:Cross validation set to False
2024-04-07 18:19:26,634:INFO:Fitting Model
2024-04-07 18:19:26,667:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2133, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:19:26,667:INFO:create_model() successfully completed......................................
2024-04-07 18:19:26,831:INFO:_master_model_container: 2
2024-04-07 18:19:26,831:INFO:_display_container: 2
2024-04-07 18:19:26,832:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2133, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2133, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:19:26,832:INFO:compare_models() successfully completed......................................
2024-04-07 18:19:26,833:INFO:Initializing plot_model()
2024-04-07 18:19:26,833:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11B01B410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2133, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:19:26,833:INFO:Checking exceptions
2024-04-07 18:19:26,850:INFO:Preloading libraries
2024-04-07 18:19:26,851:INFO:Copying training dataset
2024-04-07 18:19:26,851:INFO:Plot type: vc
2024-04-07 18:19:26,851:INFO:Determining param_name
2024-04-07 18:19:26,853:INFO:param_name: max_depth
2024-04-07 18:19:26,934:INFO:Fitting Model
2024-04-07 18:19:27,384:INFO:Saving 'Validation Curve.png'
2024-04-07 18:19:27,600:INFO:Visual Rendered Successfully
2024-04-07 18:19:27,748:INFO:plot_model() successfully completed......................................
2024-04-07 18:19:27,748:INFO:Initializing predict_model()
2024-04-07 18:19:27,748:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11B01B410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2133, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002D11B22C720>)
2024-04-07 18:19:27,748:INFO:Checking exceptions
2024-04-07 18:19:27,748:INFO:Preloading libraries
2024-04-07 18:19:49,372:INFO:PyCaret ClassificationExperiment
2024-04-07 18:19:49,372:INFO:Logging name: clf-default-name
2024-04-07 18:19:49,372:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:19:49,372:INFO:version 3.2.0
2024-04-07 18:19:49,372:INFO:Initializing setup()
2024-04-07 18:19:49,372:INFO:self.USI: 508b
2024-04-07 18:19:49,372:INFO:self._variable_keys: {'n_jobs_param', 'X_test', 'seed', 'memory', 'y', 'log_plots_param', 'data', 'gpu_n_jobs_param', '_ml_usecase', 'fold_generator', 'is_multiclass', 'X_train', 'idx', 'exp_name_log', '_available_plots', 'fold_shuffle_param', 'USI', 'X', 'pipeline', 'html_param', 'fold_groups_param', 'y_train', 'logging_param', 'exp_id', 'gpu_param', 'y_test', 'target_param', 'fix_imbalance'}
2024-04-07 18:19:49,372:INFO:Checking environment
2024-04-07 18:19:49,372:INFO:python_version: 3.11.7
2024-04-07 18:19:49,372:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:19:49,372:INFO:machine: AMD64
2024-04-07 18:19:49,372:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:19:49,375:INFO:Memory: svmem(total=10575405056, available=770678784, percent=92.7, used=9804726272, free=770678784)
2024-04-07 18:19:49,375:INFO:Physical Core: 8
2024-04-07 18:19:49,375:INFO:Logical Core: 16
2024-04-07 18:19:49,375:INFO:Checking libraries
2024-04-07 18:19:49,375:INFO:System:
2024-04-07 18:19:49,375:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:19:49,375:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:19:49,375:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:19:49,375:INFO:PyCaret required dependencies:
2024-04-07 18:19:49,375:INFO:                 pip: 23.3.1
2024-04-07 18:19:49,375:INFO:          setuptools: 68.2.2
2024-04-07 18:19:49,375:INFO:             pycaret: 3.2.0
2024-04-07 18:19:49,375:INFO:             IPython: 8.20.0
2024-04-07 18:19:49,375:INFO:          ipywidgets: 7.6.5
2024-04-07 18:19:49,375:INFO:                tqdm: 4.65.0
2024-04-07 18:19:49,375:INFO:               numpy: 1.25.2
2024-04-07 18:19:49,375:INFO:              pandas: 1.5.3
2024-04-07 18:19:49,375:INFO:              jinja2: 3.1.3
2024-04-07 18:19:49,375:INFO:               scipy: 1.10.1
2024-04-07 18:19:49,375:INFO:              joblib: 1.2.0
2024-04-07 18:19:49,375:INFO:             sklearn: 1.2.2
2024-04-07 18:19:49,375:INFO:                pyod: 1.1.3
2024-04-07 18:19:49,375:INFO:            imblearn: 0.11.0
2024-04-07 18:19:49,375:INFO:   category_encoders: 2.6.3
2024-04-07 18:19:49,375:INFO:            lightgbm: 4.3.0
2024-04-07 18:19:49,375:INFO:               numba: 0.59.0
2024-04-07 18:19:49,375:INFO:            requests: 2.31.0
2024-04-07 18:19:49,375:INFO:          matplotlib: 3.6.0
2024-04-07 18:19:49,375:INFO:          scikitplot: 0.3.7
2024-04-07 18:19:49,375:INFO:         yellowbrick: 1.5
2024-04-07 18:19:49,375:INFO:              plotly: 5.9.0
2024-04-07 18:19:49,375:INFO:    plotly-resampler: Not installed
2024-04-07 18:19:49,375:INFO:             kaleido: 0.2.1
2024-04-07 18:19:49,375:INFO:           schemdraw: 0.15
2024-04-07 18:19:49,375:INFO:         statsmodels: 0.14.0
2024-04-07 18:19:49,375:INFO:              sktime: 0.21.1
2024-04-07 18:19:49,375:INFO:               tbats: 1.1.3
2024-04-07 18:19:49,375:INFO:            pmdarima: 2.0.4
2024-04-07 18:19:49,375:INFO:              psutil: 5.9.0
2024-04-07 18:19:49,375:INFO:          markupsafe: 2.1.3
2024-04-07 18:19:49,375:INFO:             pickle5: Not installed
2024-04-07 18:19:49,378:INFO:         cloudpickle: 2.2.1
2024-04-07 18:19:49,378:INFO:         deprecation: 2.1.0
2024-04-07 18:19:49,378:INFO:              xxhash: 3.4.1
2024-04-07 18:19:49,378:INFO:           wurlitzer: Not installed
2024-04-07 18:19:49,378:INFO:PyCaret optional dependencies:
2024-04-07 18:19:49,378:INFO:                shap: 0.44.0
2024-04-07 18:19:49,378:INFO:           interpret: Not installed
2024-04-07 18:19:49,378:INFO:                umap: Not installed
2024-04-07 18:19:49,378:INFO:     ydata_profiling: Not installed
2024-04-07 18:19:49,379:INFO:  explainerdashboard: Not installed
2024-04-07 18:19:49,379:INFO:             autoviz: Not installed
2024-04-07 18:19:49,379:INFO:           fairlearn: Not installed
2024-04-07 18:19:49,379:INFO:          deepchecks: Not installed
2024-04-07 18:19:49,379:INFO:             xgboost: Not installed
2024-04-07 18:19:49,379:INFO:            catboost: 1.2.3
2024-04-07 18:19:49,379:INFO:              kmodes: 0.12.2
2024-04-07 18:19:49,379:INFO:             mlxtend: 0.23.1
2024-04-07 18:19:49,379:INFO:       statsforecast: 1.5.0
2024-04-07 18:19:49,379:INFO:        tune_sklearn: Not installed
2024-04-07 18:19:49,379:INFO:                 ray: Not installed
2024-04-07 18:19:49,379:INFO:            hyperopt: Not installed
2024-04-07 18:19:49,379:INFO:              optuna: Not installed
2024-04-07 18:19:49,379:INFO:               skopt: Not installed
2024-04-07 18:19:49,379:INFO:              mlflow: 2.9.0
2024-04-07 18:19:49,379:INFO:              gradio: Not installed
2024-04-07 18:19:49,379:INFO:             fastapi: Not installed
2024-04-07 18:19:49,379:INFO:             uvicorn: Not installed
2024-04-07 18:19:49,379:INFO:              m2cgen: Not installed
2024-04-07 18:19:49,379:INFO:           evidently: Not installed
2024-04-07 18:19:49,379:INFO:               fugue: 0.8.7
2024-04-07 18:19:49,379:INFO:           streamlit: 1.28.0
2024-04-07 18:19:49,379:INFO:             prophet: Not installed
2024-04-07 18:19:49,379:INFO:None
2024-04-07 18:19:49,379:INFO:Set up data.
2024-04-07 18:19:49,385:INFO:Set up folding strategy.
2024-04-07 18:19:49,385:INFO:Set up train/test split.
2024-04-07 18:19:49,385:INFO:Set up data.
2024-04-07 18:19:49,390:INFO:Set up index.
2024-04-07 18:19:49,390:INFO:Assigning column types.
2024-04-07 18:19:49,392:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:19:49,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:19:49,441:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:49,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:49,465:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:49,516:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:19:49,517:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:49,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:49,550:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:49,551:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:19:49,599:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:49,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:49,628:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:49,666:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:19:49,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:49,705:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:49,706:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:19:49,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:49,780:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:49,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:49,851:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:49,851:INFO:Preparing preprocessing pipeline...
2024-04-07 18:19:49,851:INFO:Set up simple imputation.
2024-04-07 18:19:49,851:INFO:Set up feature normalization.
2024-04-07 18:19:49,879:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:19:49,879:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:19:49,879:INFO:Creating final display dataframe.
2024-04-07 18:19:49,957:INFO:Setup _display_container:                     Description             Value
0                    Session id              2218
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              508b
2024-04-07 18:19:50,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:50,034:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:50,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:19:50,112:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:19:50,112:INFO:setup() successfully completed in 0.74s...............
2024-04-07 18:19:50,112:INFO:Initializing compare_models()
2024-04-07 18:19:50,112:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D119211D10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D119211D10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:19:50,112:INFO:Checking exceptions
2024-04-07 18:19:50,112:INFO:Preparing display monitor
2024-04-07 18:19:50,141:INFO:Initializing Logistic Regression
2024-04-07 18:19:50,144:INFO:Total runtime is 4.8089027404785154e-05 minutes
2024-04-07 18:19:50,148:INFO:SubProcess create_model() called ==================================
2024-04-07 18:19:50,148:INFO:Initializing create_model()
2024-04-07 18:19:50,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D119211D10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D1515F2B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:50,148:INFO:Checking exceptions
2024-04-07 18:19:50,149:INFO:Importing libraries
2024-04-07 18:19:50,149:INFO:Copying training dataset
2024-04-07 18:19:50,153:INFO:Defining folds
2024-04-07 18:19:50,153:INFO:Declaring metric variables
2024-04-07 18:19:50,155:INFO:Importing untrained model
2024-04-07 18:19:50,155:INFO:Logistic Regression Imported successfully
2024-04-07 18:19:50,167:INFO:Starting cross validation
2024-04-07 18:19:50,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:19:50,280:INFO:Calculating mean and std
2024-04-07 18:19:50,280:INFO:Creating metrics dataframe
2024-04-07 18:19:50,280:INFO:Uploading results into container
2024-04-07 18:19:50,280:INFO:Uploading model into container now
2024-04-07 18:19:50,280:INFO:_master_model_container: 1
2024-04-07 18:19:50,280:INFO:_display_container: 2
2024-04-07 18:19:50,280:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2218, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:19:50,280:INFO:create_model() successfully completed......................................
2024-04-07 18:19:50,432:INFO:SubProcess create_model() end ==================================
2024-04-07 18:19:50,440:INFO:Creating metrics dataframe
2024-04-07 18:19:50,449:INFO:Initializing Decision Tree Classifier
2024-04-07 18:19:50,449:INFO:Total runtime is 0.005128117402394613 minutes
2024-04-07 18:19:50,451:INFO:SubProcess create_model() called ==================================
2024-04-07 18:19:50,451:INFO:Initializing create_model()
2024-04-07 18:19:50,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D119211D10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D1515F2B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:50,451:INFO:Checking exceptions
2024-04-07 18:19:50,451:INFO:Importing libraries
2024-04-07 18:19:50,451:INFO:Copying training dataset
2024-04-07 18:19:50,454:INFO:Defining folds
2024-04-07 18:19:50,454:INFO:Declaring metric variables
2024-04-07 18:19:50,454:INFO:Importing untrained model
2024-04-07 18:19:50,465:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:19:50,473:INFO:Starting cross validation
2024-04-07 18:19:50,473:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:19:50,631:INFO:Calculating mean and std
2024-04-07 18:19:50,632:INFO:Creating metrics dataframe
2024-04-07 18:19:50,634:INFO:Uploading results into container
2024-04-07 18:19:50,635:INFO:Uploading model into container now
2024-04-07 18:19:50,635:INFO:_master_model_container: 2
2024-04-07 18:19:50,635:INFO:_display_container: 2
2024-04-07 18:19:50,635:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2218, splitter='best')
2024-04-07 18:19:50,635:INFO:create_model() successfully completed......................................
2024-04-07 18:19:50,782:INFO:SubProcess create_model() end ==================================
2024-04-07 18:19:50,782:INFO:Creating metrics dataframe
2024-04-07 18:19:50,798:INFO:Initializing create_model()
2024-04-07 18:19:50,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D119211D10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2218, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:50,799:INFO:Checking exceptions
2024-04-07 18:19:50,800:INFO:Importing libraries
2024-04-07 18:19:50,801:INFO:Copying training dataset
2024-04-07 18:19:50,804:INFO:Defining folds
2024-04-07 18:19:50,804:INFO:Declaring metric variables
2024-04-07 18:19:50,804:INFO:Importing untrained model
2024-04-07 18:19:50,804:INFO:Declaring custom model
2024-04-07 18:19:50,804:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:19:50,804:INFO:Cross validation set to False
2024-04-07 18:19:50,804:INFO:Fitting Model
2024-04-07 18:19:50,850:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2218, splitter='best')
2024-04-07 18:19:50,850:INFO:create_model() successfully completed......................................
2024-04-07 18:19:51,002:INFO:Initializing create_model()
2024-04-07 18:19:51,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D119211D10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2218, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:19:51,002:INFO:Checking exceptions
2024-04-07 18:19:51,011:INFO:Importing libraries
2024-04-07 18:19:51,011:INFO:Copying training dataset
2024-04-07 18:19:51,016:INFO:Defining folds
2024-04-07 18:19:51,016:INFO:Declaring metric variables
2024-04-07 18:19:51,016:INFO:Importing untrained model
2024-04-07 18:19:51,016:INFO:Declaring custom model
2024-04-07 18:19:51,017:INFO:Logistic Regression Imported successfully
2024-04-07 18:19:51,018:INFO:Cross validation set to False
2024-04-07 18:19:51,018:INFO:Fitting Model
2024-04-07 18:19:51,041:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2218, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:19:51,041:INFO:create_model() successfully completed......................................
2024-04-07 18:19:51,202:INFO:_master_model_container: 2
2024-04-07 18:19:51,202:INFO:_display_container: 2
2024-04-07 18:19:51,202:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2218, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2218, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:19:51,202:INFO:compare_models() successfully completed......................................
2024-04-07 18:19:51,202:INFO:Initializing plot_model()
2024-04-07 18:19:51,202:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D119211D10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2218, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:19:51,202:INFO:Checking exceptions
2024-04-07 18:19:51,207:INFO:Preloading libraries
2024-04-07 18:19:51,207:INFO:Copying training dataset
2024-04-07 18:19:51,207:INFO:Plot type: vc
2024-04-07 18:19:51,207:INFO:Determining param_name
2024-04-07 18:19:51,207:INFO:param_name: max_depth
2024-04-07 18:19:51,284:INFO:Fitting Model
2024-04-07 18:19:51,750:INFO:Saving 'Validation Curve.png'
2024-04-07 18:19:51,916:INFO:Visual Rendered Successfully
2024-04-07 18:19:52,053:INFO:plot_model() successfully completed......................................
2024-04-07 18:19:52,053:INFO:Initializing predict_model()
2024-04-07 18:19:52,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D119211D10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2218, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002D1190749A0>)
2024-04-07 18:19:52,053:INFO:Checking exceptions
2024-04-07 18:19:52,053:INFO:Preloading libraries
2024-04-07 18:33:03,732:INFO:PyCaret ClassificationExperiment
2024-04-07 18:33:03,732:INFO:Logging name: clf-default-name
2024-04-07 18:33:03,732:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:33:03,732:INFO:version 3.2.0
2024-04-07 18:33:03,732:INFO:Initializing setup()
2024-04-07 18:33:03,732:INFO:self.USI: 206c
2024-04-07 18:33:03,733:INFO:self._variable_keys: {'n_jobs_param', 'X_test', 'seed', 'memory', 'y', 'log_plots_param', 'data', 'gpu_n_jobs_param', '_ml_usecase', 'fold_generator', 'is_multiclass', 'X_train', 'idx', 'exp_name_log', '_available_plots', 'fold_shuffle_param', 'USI', 'X', 'pipeline', 'html_param', 'fold_groups_param', 'y_train', 'logging_param', 'exp_id', 'gpu_param', 'y_test', 'target_param', 'fix_imbalance'}
2024-04-07 18:33:03,733:INFO:Checking environment
2024-04-07 18:33:03,733:INFO:python_version: 3.11.7
2024-04-07 18:33:03,733:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:33:03,733:INFO:machine: AMD64
2024-04-07 18:33:03,733:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:33:03,733:INFO:Memory: svmem(total=10575405056, available=2664280064, percent=74.8, used=7911124992, free=2664280064)
2024-04-07 18:33:03,733:INFO:Physical Core: 8
2024-04-07 18:33:03,733:INFO:Logical Core: 16
2024-04-07 18:33:03,733:INFO:Checking libraries
2024-04-07 18:33:03,733:INFO:System:
2024-04-07 18:33:03,733:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:33:03,733:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:33:03,733:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:33:03,733:INFO:PyCaret required dependencies:
2024-04-07 18:33:03,733:INFO:                 pip: 23.3.1
2024-04-07 18:33:03,733:INFO:          setuptools: 68.2.2
2024-04-07 18:33:03,733:INFO:             pycaret: 3.2.0
2024-04-07 18:33:03,733:INFO:             IPython: 8.20.0
2024-04-07 18:33:03,734:INFO:          ipywidgets: 7.6.5
2024-04-07 18:33:03,734:INFO:                tqdm: 4.65.0
2024-04-07 18:33:03,734:INFO:               numpy: 1.25.2
2024-04-07 18:33:03,734:INFO:              pandas: 1.5.3
2024-04-07 18:33:03,734:INFO:              jinja2: 3.1.3
2024-04-07 18:33:03,734:INFO:               scipy: 1.10.1
2024-04-07 18:33:03,734:INFO:              joblib: 1.2.0
2024-04-07 18:33:03,734:INFO:             sklearn: 1.2.2
2024-04-07 18:33:03,734:INFO:                pyod: 1.1.3
2024-04-07 18:33:03,734:INFO:            imblearn: 0.11.0
2024-04-07 18:33:03,734:INFO:   category_encoders: 2.6.3
2024-04-07 18:33:03,734:INFO:            lightgbm: 4.3.0
2024-04-07 18:33:03,734:INFO:               numba: 0.59.0
2024-04-07 18:33:03,734:INFO:            requests: 2.31.0
2024-04-07 18:33:03,734:INFO:          matplotlib: 3.6.0
2024-04-07 18:33:03,734:INFO:          scikitplot: 0.3.7
2024-04-07 18:33:03,734:INFO:         yellowbrick: 1.5
2024-04-07 18:33:03,734:INFO:              plotly: 5.9.0
2024-04-07 18:33:03,734:INFO:    plotly-resampler: Not installed
2024-04-07 18:33:03,734:INFO:             kaleido: 0.2.1
2024-04-07 18:33:03,734:INFO:           schemdraw: 0.15
2024-04-07 18:33:03,734:INFO:         statsmodels: 0.14.0
2024-04-07 18:33:03,734:INFO:              sktime: 0.21.1
2024-04-07 18:33:03,734:INFO:               tbats: 1.1.3
2024-04-07 18:33:03,734:INFO:            pmdarima: 2.0.4
2024-04-07 18:33:03,734:INFO:              psutil: 5.9.0
2024-04-07 18:33:03,734:INFO:          markupsafe: 2.1.3
2024-04-07 18:33:03,734:INFO:             pickle5: Not installed
2024-04-07 18:33:03,736:INFO:         cloudpickle: 2.2.1
2024-04-07 18:33:03,736:INFO:         deprecation: 2.1.0
2024-04-07 18:33:03,736:INFO:              xxhash: 3.4.1
2024-04-07 18:33:03,736:INFO:           wurlitzer: Not installed
2024-04-07 18:33:03,736:INFO:PyCaret optional dependencies:
2024-04-07 18:33:03,736:INFO:                shap: 0.44.0
2024-04-07 18:33:03,736:INFO:           interpret: Not installed
2024-04-07 18:33:03,736:INFO:                umap: Not installed
2024-04-07 18:33:03,736:INFO:     ydata_profiling: Not installed
2024-04-07 18:33:03,736:INFO:  explainerdashboard: Not installed
2024-04-07 18:33:03,736:INFO:             autoviz: Not installed
2024-04-07 18:33:03,736:INFO:           fairlearn: Not installed
2024-04-07 18:33:03,736:INFO:          deepchecks: Not installed
2024-04-07 18:33:03,736:INFO:             xgboost: Not installed
2024-04-07 18:33:03,736:INFO:            catboost: 1.2.3
2024-04-07 18:33:03,736:INFO:              kmodes: 0.12.2
2024-04-07 18:33:03,736:INFO:             mlxtend: 0.23.1
2024-04-07 18:33:03,736:INFO:       statsforecast: 1.5.0
2024-04-07 18:33:03,736:INFO:        tune_sklearn: Not installed
2024-04-07 18:33:03,736:INFO:                 ray: Not installed
2024-04-07 18:33:03,736:INFO:            hyperopt: Not installed
2024-04-07 18:33:03,736:INFO:              optuna: Not installed
2024-04-07 18:33:03,736:INFO:               skopt: Not installed
2024-04-07 18:33:03,736:INFO:              mlflow: 2.9.0
2024-04-07 18:33:03,736:INFO:              gradio: Not installed
2024-04-07 18:33:03,737:INFO:             fastapi: Not installed
2024-04-07 18:33:03,737:INFO:             uvicorn: Not installed
2024-04-07 18:33:03,737:INFO:              m2cgen: Not installed
2024-04-07 18:33:03,737:INFO:           evidently: Not installed
2024-04-07 18:33:03,737:INFO:               fugue: 0.8.7
2024-04-07 18:33:03,737:INFO:           streamlit: 1.28.0
2024-04-07 18:33:03,737:INFO:             prophet: Not installed
2024-04-07 18:33:03,737:INFO:None
2024-04-07 18:33:03,737:INFO:Set up data.
2024-04-07 18:33:03,744:INFO:Set up folding strategy.
2024-04-07 18:33:03,746:INFO:Set up train/test split.
2024-04-07 18:33:03,746:INFO:Set up data.
2024-04-07 18:33:03,750:INFO:Set up index.
2024-04-07 18:33:03,751:INFO:Assigning column types.
2024-04-07 18:33:03,756:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:33:03,802:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:33:03,803:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:33:03,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:33:03,832:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:33:03,879:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:33:03,880:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:33:03,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:33:03,909:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:33:03,910:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:33:03,957:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:33:03,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:33:03,986:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:33:04,033:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:33:04,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:33:04,061:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:33:04,062:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:33:04,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:33:04,136:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:33:04,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:33:04,212:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:33:04,213:INFO:Preparing preprocessing pipeline...
2024-04-07 18:33:04,214:INFO:Set up simple imputation.
2024-04-07 18:33:04,214:INFO:Set up feature normalization.
2024-04-07 18:33:04,240:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:33:04,245:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:33:04,246:INFO:Creating final display dataframe.
2024-04-07 18:33:04,321:INFO:Setup _display_container:                     Description             Value
0                    Session id              3079
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              206c
2024-04-07 18:33:04,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:33:04,409:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:33:04,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:33:04,486:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:33:04,487:INFO:setup() successfully completed in 0.76s...............
2024-04-07 18:33:04,488:INFO:Initializing compare_models()
2024-04-07 18:33:04,488:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11AFB3AD0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D11AFB3AD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:33:04,489:INFO:Checking exceptions
2024-04-07 18:33:04,492:INFO:Preparing display monitor
2024-04-07 18:33:04,516:INFO:Initializing Logistic Regression
2024-04-07 18:33:04,517:INFO:Total runtime is 8.404254913330078e-06 minutes
2024-04-07 18:33:04,521:INFO:SubProcess create_model() called ==================================
2024-04-07 18:33:04,521:INFO:Initializing create_model()
2024-04-07 18:33:04,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11AFB3AD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D11F17E190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:33:04,522:INFO:Checking exceptions
2024-04-07 18:33:04,522:INFO:Importing libraries
2024-04-07 18:33:04,523:INFO:Copying training dataset
2024-04-07 18:33:04,531:INFO:Defining folds
2024-04-07 18:33:04,531:INFO:Declaring metric variables
2024-04-07 18:33:04,534:INFO:Importing untrained model
2024-04-07 18:33:04,539:INFO:Logistic Regression Imported successfully
2024-04-07 18:33:04,546:INFO:Starting cross validation
2024-04-07 18:33:04,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:33:12,354:INFO:Calculating mean and std
2024-04-07 18:33:12,355:INFO:Creating metrics dataframe
2024-04-07 18:33:12,361:INFO:Uploading results into container
2024-04-07 18:33:12,363:INFO:Uploading model into container now
2024-04-07 18:33:12,364:INFO:_master_model_container: 1
2024-04-07 18:33:12,364:INFO:_display_container: 2
2024-04-07 18:33:12,365:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3079, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:33:12,365:INFO:create_model() successfully completed......................................
2024-04-07 18:33:12,577:INFO:SubProcess create_model() end ==================================
2024-04-07 18:33:12,577:INFO:Creating metrics dataframe
2024-04-07 18:33:12,585:INFO:Initializing Decision Tree Classifier
2024-04-07 18:33:12,585:INFO:Total runtime is 0.13447759946187338 minutes
2024-04-07 18:33:12,589:INFO:SubProcess create_model() called ==================================
2024-04-07 18:33:12,589:INFO:Initializing create_model()
2024-04-07 18:33:12,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11AFB3AD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D11F17E190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:33:12,589:INFO:Checking exceptions
2024-04-07 18:33:12,589:INFO:Importing libraries
2024-04-07 18:33:12,590:INFO:Copying training dataset
2024-04-07 18:33:12,596:INFO:Defining folds
2024-04-07 18:33:12,596:INFO:Declaring metric variables
2024-04-07 18:33:12,600:INFO:Importing untrained model
2024-04-07 18:33:12,603:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:33:12,611:INFO:Starting cross validation
2024-04-07 18:33:12,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:33:18,411:INFO:Calculating mean and std
2024-04-07 18:33:18,413:INFO:Creating metrics dataframe
2024-04-07 18:33:18,417:INFO:Uploading results into container
2024-04-07 18:33:18,418:INFO:Uploading model into container now
2024-04-07 18:33:18,419:INFO:_master_model_container: 2
2024-04-07 18:33:18,419:INFO:_display_container: 2
2024-04-07 18:33:18,420:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3079, splitter='best')
2024-04-07 18:33:18,420:INFO:create_model() successfully completed......................................
2024-04-07 18:33:18,611:INFO:SubProcess create_model() end ==================================
2024-04-07 18:33:18,611:INFO:Creating metrics dataframe
2024-04-07 18:33:18,630:INFO:Initializing create_model()
2024-04-07 18:33:18,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11AFB3AD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3079, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:33:18,630:INFO:Checking exceptions
2024-04-07 18:33:18,632:INFO:Importing libraries
2024-04-07 18:33:18,632:INFO:Copying training dataset
2024-04-07 18:33:18,637:INFO:Defining folds
2024-04-07 18:33:18,637:INFO:Declaring metric variables
2024-04-07 18:33:18,637:INFO:Importing untrained model
2024-04-07 18:33:18,637:INFO:Declaring custom model
2024-04-07 18:33:18,638:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:33:18,638:INFO:Cross validation set to False
2024-04-07 18:33:18,638:INFO:Fitting Model
2024-04-07 18:33:18,692:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3079, splitter='best')
2024-04-07 18:33:18,692:INFO:create_model() successfully completed......................................
2024-04-07 18:33:18,845:INFO:Initializing create_model()
2024-04-07 18:33:18,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11AFB3AD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3079, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:33:18,845:INFO:Checking exceptions
2024-04-07 18:33:18,848:INFO:Importing libraries
2024-04-07 18:33:18,848:INFO:Copying training dataset
2024-04-07 18:33:18,855:INFO:Defining folds
2024-04-07 18:33:18,855:INFO:Declaring metric variables
2024-04-07 18:33:18,856:INFO:Importing untrained model
2024-04-07 18:33:18,856:INFO:Declaring custom model
2024-04-07 18:33:18,856:INFO:Logistic Regression Imported successfully
2024-04-07 18:33:18,857:INFO:Cross validation set to False
2024-04-07 18:33:18,857:INFO:Fitting Model
2024-04-07 18:33:18,886:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3079, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:33:18,886:INFO:create_model() successfully completed......................................
2024-04-07 18:33:19,045:INFO:_master_model_container: 2
2024-04-07 18:33:19,045:INFO:_display_container: 2
2024-04-07 18:33:19,047:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3079, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3079, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:33:19,047:INFO:compare_models() successfully completed......................................
2024-04-07 18:33:19,047:INFO:Initializing plot_model()
2024-04-07 18:33:19,048:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11AFB3AD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3079, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:33:19,048:INFO:Checking exceptions
2024-04-07 18:33:19,052:INFO:Preloading libraries
2024-04-07 18:33:19,053:INFO:Copying training dataset
2024-04-07 18:33:19,053:INFO:Plot type: vc
2024-04-07 18:33:19,054:INFO:Determining param_name
2024-04-07 18:33:19,054:INFO:param_name: max_depth
2024-04-07 18:33:19,129:INFO:Fitting Model
2024-04-07 18:33:19,587:INFO:Saving 'Validation Curve.png'
2024-04-07 18:33:19,789:INFO:Visual Rendered Successfully
2024-04-07 18:33:19,948:INFO:plot_model() successfully completed......................................
2024-04-07 18:33:19,949:INFO:Initializing predict_model()
2024-04-07 18:33:19,949:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D11AFB3AD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3079, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002D14F018720>)
2024-04-07 18:33:19,949:INFO:Checking exceptions
2024-04-07 18:33:19,949:INFO:Preloading libraries
2024-04-07 18:34:52,185:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_11371640f06440b2b2a598ef5899e828_8c90dc71c34b4554bebe76b9c7d17fc4
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,186:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_6723a16940204c8ba40ce99930010e84_4df2d080b58b4ed18d45a41b091aa3e7
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,186:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_11371640f06440b2b2a598ef5899e828_3c520b7401f746278958c0c298be1e68
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,186:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_e2d61bb188e04d47b0b69e18105ef498_d88e3c4eabae420487a107d736253fc8
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,186:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_11371640f06440b2b2a598ef5899e828_81544a1e499041ffb74e1543564e72da
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,186:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_11371640f06440b2b2a598ef5899e828_11efe363b49140ec88d23f15d12159f7
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,186:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_c0a3271578e94f2490e5a868e073c356_41dd018e93874e1282b7bd24a13de9bd
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,186:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_8f2c0b2ba49040d48be1061566ce0001_1debf4d7c1fb4896b39fdb8bd6c2a7dd
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,186:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_cfbda4c3c51d4830a2b262ca68079a37_0f804a2e63624a9a843f40f32941986d
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,186:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_c0905a159df94e20949faf0d7928f480_a1e9dcc1d1c24ee9866a7f675e910fa1
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,186:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_fc51cd569d44454099f99b4c35b63b22_0707cf1d64154093b1f26d811609326c
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,187:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_b4107ee61c0a47ab88e7ada301668371_dfb76961e2d44a1fb743b5580105852a
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,187:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_cccb8fb5b2774671bc30f9399c7cf9c8_9c0d8ba568b84662b060be96f2c40eb5
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,187:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_9ec0283cfebe4958b46c1383e3904e4a_ac78f9847ca94d309dd1ddd838d7d68a
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,187:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_9932ee37390544e697d7594b5a012475_a595a3ada897494189482701019c9bc0
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,187:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_31772b905ea44135a4f740030c9149f5_de08d146da434d6b97534c135af1c3eb
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,187:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_84be16fb40054c168a1974140879cd6f_7399f21624c243fbaf34a7ada4b45442
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:34:52,187:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_8648_16c15a17b72c4308b2441e996504ab46_54f49170920c49d883b56eb7ec744c72
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 18:35:00,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 18:35:00,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 18:35:00,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 18:35:00,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 18:35:03,442:INFO:PyCaret ClassificationExperiment
2024-04-07 18:35:03,442:INFO:Logging name: clf-default-name
2024-04-07 18:35:03,442:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:35:03,442:INFO:version 3.2.0
2024-04-07 18:35:03,442:INFO:Initializing setup()
2024-04-07 18:35:03,442:INFO:self.USI: af2b
2024-04-07 18:35:03,442:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:35:03,442:INFO:Checking environment
2024-04-07 18:35:03,442:INFO:python_version: 3.11.7
2024-04-07 18:35:03,442:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:35:03,442:INFO:machine: AMD64
2024-04-07 18:35:03,442:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:35:03,442:INFO:Memory: svmem(total=10575405056, available=3547058176, percent=66.5, used=7028346880, free=3547058176)
2024-04-07 18:35:03,443:INFO:Physical Core: 8
2024-04-07 18:35:03,443:INFO:Logical Core: 16
2024-04-07 18:35:03,443:INFO:Checking libraries
2024-04-07 18:35:03,443:INFO:System:
2024-04-07 18:35:03,443:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:35:03,443:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:35:03,443:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:35:03,443:INFO:PyCaret required dependencies:
2024-04-07 18:35:04,547:INFO:                 pip: 23.3.1
2024-04-07 18:35:04,547:INFO:          setuptools: 68.2.2
2024-04-07 18:35:04,547:INFO:             pycaret: 3.2.0
2024-04-07 18:35:04,547:INFO:             IPython: 8.20.0
2024-04-07 18:35:04,547:INFO:          ipywidgets: 7.6.5
2024-04-07 18:35:04,547:INFO:                tqdm: 4.65.0
2024-04-07 18:35:04,547:INFO:               numpy: 1.25.2
2024-04-07 18:35:04,547:INFO:              pandas: 1.5.3
2024-04-07 18:35:04,547:INFO:              jinja2: 3.1.3
2024-04-07 18:35:04,547:INFO:               scipy: 1.10.1
2024-04-07 18:35:04,547:INFO:              joblib: 1.2.0
2024-04-07 18:35:04,547:INFO:             sklearn: 1.2.2
2024-04-07 18:35:04,547:INFO:                pyod: 1.1.3
2024-04-07 18:35:04,547:INFO:            imblearn: 0.11.0
2024-04-07 18:35:04,547:INFO:   category_encoders: 2.6.3
2024-04-07 18:35:04,547:INFO:            lightgbm: 4.3.0
2024-04-07 18:35:04,547:INFO:               numba: 0.59.0
2024-04-07 18:35:04,547:INFO:            requests: 2.31.0
2024-04-07 18:35:04,547:INFO:          matplotlib: 3.6.0
2024-04-07 18:35:04,547:INFO:          scikitplot: 0.3.7
2024-04-07 18:35:04,547:INFO:         yellowbrick: 1.5
2024-04-07 18:35:04,548:INFO:              plotly: 5.9.0
2024-04-07 18:35:04,548:INFO:    plotly-resampler: Not installed
2024-04-07 18:35:04,548:INFO:             kaleido: 0.2.1
2024-04-07 18:35:04,548:INFO:           schemdraw: 0.15
2024-04-07 18:35:04,548:INFO:         statsmodels: 0.14.0
2024-04-07 18:35:04,548:INFO:              sktime: 0.21.1
2024-04-07 18:35:04,548:INFO:               tbats: 1.1.3
2024-04-07 18:35:04,548:INFO:            pmdarima: 2.0.4
2024-04-07 18:35:04,548:INFO:              psutil: 5.9.0
2024-04-07 18:35:04,548:INFO:          markupsafe: 2.1.3
2024-04-07 18:35:04,548:INFO:             pickle5: Not installed
2024-04-07 18:35:04,548:INFO:         cloudpickle: 2.2.1
2024-04-07 18:35:04,548:INFO:         deprecation: 2.1.0
2024-04-07 18:35:04,548:INFO:              xxhash: 3.4.1
2024-04-07 18:35:04,548:INFO:           wurlitzer: Not installed
2024-04-07 18:35:04,548:INFO:PyCaret optional dependencies:
2024-04-07 18:35:04,556:INFO:                shap: 0.44.0
2024-04-07 18:35:04,556:INFO:           interpret: Not installed
2024-04-07 18:35:04,556:INFO:                umap: Not installed
2024-04-07 18:35:04,557:INFO:     ydata_profiling: Not installed
2024-04-07 18:35:04,557:INFO:  explainerdashboard: Not installed
2024-04-07 18:35:04,557:INFO:             autoviz: Not installed
2024-04-07 18:35:04,557:INFO:           fairlearn: Not installed
2024-04-07 18:35:04,557:INFO:          deepchecks: Not installed
2024-04-07 18:35:04,557:INFO:             xgboost: Not installed
2024-04-07 18:35:04,557:INFO:            catboost: 1.2.3
2024-04-07 18:35:04,557:INFO:              kmodes: 0.12.2
2024-04-07 18:35:04,557:INFO:             mlxtend: 0.23.1
2024-04-07 18:35:04,557:INFO:       statsforecast: 1.5.0
2024-04-07 18:35:04,557:INFO:        tune_sklearn: Not installed
2024-04-07 18:35:04,557:INFO:                 ray: Not installed
2024-04-07 18:35:04,557:INFO:            hyperopt: Not installed
2024-04-07 18:35:04,557:INFO:              optuna: Not installed
2024-04-07 18:35:04,557:INFO:               skopt: Not installed
2024-04-07 18:35:04,557:INFO:              mlflow: 2.9.0
2024-04-07 18:35:04,557:INFO:              gradio: Not installed
2024-04-07 18:35:04,557:INFO:             fastapi: Not installed
2024-04-07 18:35:04,557:INFO:             uvicorn: Not installed
2024-04-07 18:35:04,557:INFO:              m2cgen: Not installed
2024-04-07 18:35:04,557:INFO:           evidently: Not installed
2024-04-07 18:35:04,557:INFO:               fugue: 0.8.7
2024-04-07 18:35:04,557:INFO:           streamlit: 1.28.0
2024-04-07 18:35:04,557:INFO:             prophet: Not installed
2024-04-07 18:35:04,557:INFO:None
2024-04-07 18:35:04,557:INFO:Set up data.
2024-04-07 18:35:04,564:INFO:Set up folding strategy.
2024-04-07 18:35:04,564:INFO:Set up train/test split.
2024-04-07 18:35:04,564:INFO:Set up data.
2024-04-07 18:35:04,567:INFO:Set up index.
2024-04-07 18:35:04,568:INFO:Assigning column types.
2024-04-07 18:35:04,571:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:35:04,614:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:35:04,619:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:35:04,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:35:04,656:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:35:04,734:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:35:04,736:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:35:04,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:35:04,764:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:35:04,764:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:35:04,809:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:35:04,837:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:35:04,837:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:35:04,883:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:35:04,910:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:35:04,910:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:35:04,911:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:35:04,983:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:35:04,983:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:35:05,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:35:05,057:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:35:05,059:INFO:Preparing preprocessing pipeline...
2024-04-07 18:35:05,059:INFO:Set up simple imputation.
2024-04-07 18:35:05,059:INFO:Set up feature normalization.
2024-04-07 18:35:05,088:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:35:05,094:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:35:05,094:INFO:Creating final display dataframe.
2024-04-07 18:35:05,174:INFO:Setup _display_container:                     Description             Value
0                    Session id              7569
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              af2b
2024-04-07 18:35:05,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:35:05,259:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:35:05,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:35:05,335:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:35:05,455:INFO:setup() successfully completed in 2.01s...............
2024-04-07 18:35:05,455:INFO:Initializing compare_models()
2024-04-07 18:35:05,455:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C020C24D0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C020C24D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:35:05,455:INFO:Checking exceptions
2024-04-07 18:35:05,457:INFO:Preparing display monitor
2024-04-07 18:35:05,497:INFO:Initializing Logistic Regression
2024-04-07 18:35:05,499:INFO:Total runtime is 2.4529298146565757e-05 minutes
2024-04-07 18:35:05,504:INFO:SubProcess create_model() called ==================================
2024-04-07 18:35:05,504:INFO:Initializing create_model()
2024-04-07 18:35:05,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C020C24D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C03BF50D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:35:05,505:INFO:Checking exceptions
2024-04-07 18:35:05,505:INFO:Importing libraries
2024-04-07 18:35:05,505:INFO:Copying training dataset
2024-04-07 18:35:05,511:INFO:Defining folds
2024-04-07 18:35:05,511:INFO:Declaring metric variables
2024-04-07 18:35:05,514:INFO:Importing untrained model
2024-04-07 18:35:05,518:INFO:Logistic Regression Imported successfully
2024-04-07 18:35:05,525:INFO:Starting cross validation
2024-04-07 18:35:05,527:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:35:13,299:INFO:Calculating mean and std
2024-04-07 18:35:13,301:INFO:Creating metrics dataframe
2024-04-07 18:35:13,308:INFO:Uploading results into container
2024-04-07 18:35:13,310:INFO:Uploading model into container now
2024-04-07 18:35:13,311:INFO:_master_model_container: 1
2024-04-07 18:35:13,311:INFO:_display_container: 2
2024-04-07 18:35:13,312:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7569, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:35:13,312:INFO:create_model() successfully completed......................................
2024-04-07 18:35:13,509:INFO:SubProcess create_model() end ==================================
2024-04-07 18:35:13,509:INFO:Creating metrics dataframe
2024-04-07 18:35:13,518:INFO:Initializing Decision Tree Classifier
2024-04-07 18:35:13,518:INFO:Total runtime is 0.13366968631744383 minutes
2024-04-07 18:35:13,522:INFO:SubProcess create_model() called ==================================
2024-04-07 18:35:13,522:INFO:Initializing create_model()
2024-04-07 18:35:13,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C020C24D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C03BF50D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:35:13,522:INFO:Checking exceptions
2024-04-07 18:35:13,523:INFO:Importing libraries
2024-04-07 18:35:13,523:INFO:Copying training dataset
2024-04-07 18:35:13,528:INFO:Defining folds
2024-04-07 18:35:13,529:INFO:Declaring metric variables
2024-04-07 18:35:13,534:INFO:Importing untrained model
2024-04-07 18:35:13,540:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:35:13,549:INFO:Starting cross validation
2024-04-07 18:35:13,551:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:35:19,224:INFO:Calculating mean and std
2024-04-07 18:35:19,226:INFO:Creating metrics dataframe
2024-04-07 18:35:19,230:INFO:Uploading results into container
2024-04-07 18:35:19,232:INFO:Uploading model into container now
2024-04-07 18:35:19,232:INFO:_master_model_container: 2
2024-04-07 18:35:19,233:INFO:_display_container: 2
2024-04-07 18:35:19,233:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7569, splitter='best')
2024-04-07 18:35:19,233:INFO:create_model() successfully completed......................................
2024-04-07 18:35:19,410:INFO:SubProcess create_model() end ==================================
2024-04-07 18:35:19,411:INFO:Creating metrics dataframe
2024-04-07 18:35:19,429:INFO:Initializing create_model()
2024-04-07 18:35:19,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C020C24D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7569, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:35:19,429:INFO:Checking exceptions
2024-04-07 18:35:19,432:INFO:Importing libraries
2024-04-07 18:35:19,432:INFO:Copying training dataset
2024-04-07 18:35:19,437:INFO:Defining folds
2024-04-07 18:35:19,437:INFO:Declaring metric variables
2024-04-07 18:35:19,437:INFO:Importing untrained model
2024-04-07 18:35:19,437:INFO:Declaring custom model
2024-04-07 18:35:19,438:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:35:19,438:INFO:Cross validation set to False
2024-04-07 18:35:19,438:INFO:Fitting Model
2024-04-07 18:35:19,496:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7569, splitter='best')
2024-04-07 18:35:19,496:INFO:create_model() successfully completed......................................
2024-04-07 18:35:19,636:INFO:Initializing create_model()
2024-04-07 18:35:19,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C020C24D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7569, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:35:19,636:INFO:Checking exceptions
2024-04-07 18:35:19,638:INFO:Importing libraries
2024-04-07 18:35:19,639:INFO:Copying training dataset
2024-04-07 18:35:19,644:INFO:Defining folds
2024-04-07 18:35:19,644:INFO:Declaring metric variables
2024-04-07 18:35:19,644:INFO:Importing untrained model
2024-04-07 18:35:19,644:INFO:Declaring custom model
2024-04-07 18:35:19,645:INFO:Logistic Regression Imported successfully
2024-04-07 18:35:19,645:INFO:Cross validation set to False
2024-04-07 18:35:19,646:INFO:Fitting Model
2024-04-07 18:35:19,671:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7569, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:35:19,671:INFO:create_model() successfully completed......................................
2024-04-07 18:35:19,809:INFO:_master_model_container: 2
2024-04-07 18:35:19,809:INFO:_display_container: 2
2024-04-07 18:35:19,809:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7569, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7569, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:35:19,810:INFO:compare_models() successfully completed......................................
2024-04-07 18:35:19,810:INFO:Initializing plot_model()
2024-04-07 18:35:19,810:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C020C24D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7569, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:35:19,810:INFO:Checking exceptions
2024-04-07 18:35:19,814:INFO:Preloading libraries
2024-04-07 18:35:19,815:INFO:Copying training dataset
2024-04-07 18:35:19,815:INFO:Plot type: vc
2024-04-07 18:35:19,815:INFO:Determining param_name
2024-04-07 18:35:19,815:INFO:param_name: max_depth
2024-04-07 18:35:19,900:INFO:Fitting Model
2024-04-07 18:35:20,372:INFO:Saving 'Validation Curve.png'
2024-04-07 18:35:20,570:INFO:Visual Rendered Successfully
2024-04-07 18:35:20,690:INFO:plot_model() successfully completed......................................
2024-04-07 18:35:20,691:INFO:Initializing predict_model()
2024-04-07 18:35:20,691:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C020C24D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7569, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C042EC220>)
2024-04-07 18:35:20,691:INFO:Checking exceptions
2024-04-07 18:35:20,691:INFO:Preloading libraries
2024-04-07 18:36:09,995:INFO:PyCaret ClassificationExperiment
2024-04-07 18:36:09,995:INFO:Logging name: clf-default-name
2024-04-07 18:36:09,995:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:36:09,995:INFO:version 3.2.0
2024-04-07 18:36:09,995:INFO:Initializing setup()
2024-04-07 18:36:09,995:INFO:self.USI: 6796
2024-04-07 18:36:09,995:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:36:09,995:INFO:Checking environment
2024-04-07 18:36:09,995:INFO:python_version: 3.11.7
2024-04-07 18:36:09,995:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:36:09,995:INFO:machine: AMD64
2024-04-07 18:36:09,995:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:36:09,995:INFO:Memory: svmem(total=10575405056, available=867688448, percent=91.8, used=9707716608, free=867688448)
2024-04-07 18:36:09,996:INFO:Physical Core: 8
2024-04-07 18:36:09,996:INFO:Logical Core: 16
2024-04-07 18:36:09,996:INFO:Checking libraries
2024-04-07 18:36:09,996:INFO:System:
2024-04-07 18:36:09,996:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:36:09,996:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:36:09,996:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:36:09,996:INFO:PyCaret required dependencies:
2024-04-07 18:36:09,996:INFO:                 pip: 23.3.1
2024-04-07 18:36:09,996:INFO:          setuptools: 68.2.2
2024-04-07 18:36:09,996:INFO:             pycaret: 3.2.0
2024-04-07 18:36:09,996:INFO:             IPython: 8.20.0
2024-04-07 18:36:09,996:INFO:          ipywidgets: 7.6.5
2024-04-07 18:36:09,996:INFO:                tqdm: 4.65.0
2024-04-07 18:36:09,996:INFO:               numpy: 1.25.2
2024-04-07 18:36:09,996:INFO:              pandas: 1.5.3
2024-04-07 18:36:09,996:INFO:              jinja2: 3.1.3
2024-04-07 18:36:09,996:INFO:               scipy: 1.10.1
2024-04-07 18:36:09,996:INFO:              joblib: 1.2.0
2024-04-07 18:36:09,996:INFO:             sklearn: 1.2.2
2024-04-07 18:36:09,996:INFO:                pyod: 1.1.3
2024-04-07 18:36:09,996:INFO:            imblearn: 0.11.0
2024-04-07 18:36:09,997:INFO:   category_encoders: 2.6.3
2024-04-07 18:36:09,997:INFO:            lightgbm: 4.3.0
2024-04-07 18:36:09,997:INFO:               numba: 0.59.0
2024-04-07 18:36:09,997:INFO:            requests: 2.31.0
2024-04-07 18:36:09,997:INFO:          matplotlib: 3.6.0
2024-04-07 18:36:09,997:INFO:          scikitplot: 0.3.7
2024-04-07 18:36:09,997:INFO:         yellowbrick: 1.5
2024-04-07 18:36:09,997:INFO:              plotly: 5.9.0
2024-04-07 18:36:09,997:INFO:    plotly-resampler: Not installed
2024-04-07 18:36:09,997:INFO:             kaleido: 0.2.1
2024-04-07 18:36:09,997:INFO:           schemdraw: 0.15
2024-04-07 18:36:09,997:INFO:         statsmodels: 0.14.0
2024-04-07 18:36:09,997:INFO:              sktime: 0.21.1
2024-04-07 18:36:09,997:INFO:               tbats: 1.1.3
2024-04-07 18:36:09,997:INFO:            pmdarima: 2.0.4
2024-04-07 18:36:09,997:INFO:              psutil: 5.9.0
2024-04-07 18:36:09,997:INFO:          markupsafe: 2.1.3
2024-04-07 18:36:09,997:INFO:             pickle5: Not installed
2024-04-07 18:36:09,997:INFO:         cloudpickle: 2.2.1
2024-04-07 18:36:09,997:INFO:         deprecation: 2.1.0
2024-04-07 18:36:09,997:INFO:              xxhash: 3.4.1
2024-04-07 18:36:09,997:INFO:           wurlitzer: Not installed
2024-04-07 18:36:09,997:INFO:PyCaret optional dependencies:
2024-04-07 18:36:09,997:INFO:                shap: 0.44.0
2024-04-07 18:36:09,997:INFO:           interpret: Not installed
2024-04-07 18:36:09,997:INFO:                umap: Not installed
2024-04-07 18:36:09,998:INFO:     ydata_profiling: Not installed
2024-04-07 18:36:09,998:INFO:  explainerdashboard: Not installed
2024-04-07 18:36:09,998:INFO:             autoviz: Not installed
2024-04-07 18:36:09,998:INFO:           fairlearn: Not installed
2024-04-07 18:36:09,998:INFO:          deepchecks: Not installed
2024-04-07 18:36:09,998:INFO:             xgboost: Not installed
2024-04-07 18:36:09,998:INFO:            catboost: 1.2.3
2024-04-07 18:36:09,998:INFO:              kmodes: 0.12.2
2024-04-07 18:36:09,998:INFO:             mlxtend: 0.23.1
2024-04-07 18:36:09,998:INFO:       statsforecast: 1.5.0
2024-04-07 18:36:09,998:INFO:        tune_sklearn: Not installed
2024-04-07 18:36:09,998:INFO:                 ray: Not installed
2024-04-07 18:36:09,998:INFO:            hyperopt: Not installed
2024-04-07 18:36:09,998:INFO:              optuna: Not installed
2024-04-07 18:36:09,998:INFO:               skopt: Not installed
2024-04-07 18:36:09,998:INFO:              mlflow: 2.9.0
2024-04-07 18:36:09,998:INFO:              gradio: Not installed
2024-04-07 18:36:09,998:INFO:             fastapi: Not installed
2024-04-07 18:36:09,998:INFO:             uvicorn: Not installed
2024-04-07 18:36:09,998:INFO:              m2cgen: Not installed
2024-04-07 18:36:09,998:INFO:           evidently: Not installed
2024-04-07 18:36:09,998:INFO:               fugue: 0.8.7
2024-04-07 18:36:09,998:INFO:           streamlit: 1.28.0
2024-04-07 18:36:09,998:INFO:             prophet: Not installed
2024-04-07 18:36:09,998:INFO:None
2024-04-07 18:36:09,998:INFO:Set up data.
2024-04-07 18:36:10,007:INFO:Set up folding strategy.
2024-04-07 18:36:10,007:INFO:Set up train/test split.
2024-04-07 18:36:10,007:INFO:Set up data.
2024-04-07 18:36:10,012:INFO:Set up index.
2024-04-07 18:36:10,012:INFO:Assigning column types.
2024-04-07 18:36:10,017:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:36:10,063:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:36:10,063:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:10,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:10,092:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:10,138:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:36:10,139:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:10,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:10,167:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:10,168:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:36:10,214:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:10,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:10,242:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:10,288:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:10,316:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:10,316:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:10,317:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:36:10,392:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:10,393:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:10,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:10,466:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:10,467:INFO:Preparing preprocessing pipeline...
2024-04-07 18:36:10,469:INFO:Set up simple imputation.
2024-04-07 18:36:10,469:INFO:Set up feature normalization.
2024-04-07 18:36:10,489:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:36:10,498:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:36:10,498:INFO:Creating final display dataframe.
2024-04-07 18:36:10,574:INFO:Setup _display_container:                     Description             Value
0                    Session id              5574
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6796
2024-04-07 18:36:10,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:10,658:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:10,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:10,735:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:10,736:INFO:setup() successfully completed in 0.74s...............
2024-04-07 18:36:10,737:INFO:Initializing compare_models()
2024-04-07 18:36:10,737:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01F27DD0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01F27DD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:36:10,737:INFO:Checking exceptions
2024-04-07 18:36:10,741:INFO:Preparing display monitor
2024-04-07 18:36:10,764:INFO:Initializing Logistic Regression
2024-04-07 18:36:10,764:INFO:Total runtime is 0.0 minutes
2024-04-07 18:36:10,768:INFO:SubProcess create_model() called ==================================
2024-04-07 18:36:10,768:INFO:Initializing create_model()
2024-04-07 18:36:10,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01F27DD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C7CEEAC90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:10,769:INFO:Checking exceptions
2024-04-07 18:36:10,769:INFO:Importing libraries
2024-04-07 18:36:10,769:INFO:Copying training dataset
2024-04-07 18:36:10,775:INFO:Defining folds
2024-04-07 18:36:10,775:INFO:Declaring metric variables
2024-04-07 18:36:10,778:INFO:Importing untrained model
2024-04-07 18:36:10,782:INFO:Logistic Regression Imported successfully
2024-04-07 18:36:10,789:INFO:Starting cross validation
2024-04-07 18:36:10,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:36:10,909:INFO:Calculating mean and std
2024-04-07 18:36:10,909:INFO:Creating metrics dataframe
2024-04-07 18:36:10,912:INFO:Uploading results into container
2024-04-07 18:36:10,913:INFO:Uploading model into container now
2024-04-07 18:36:10,913:INFO:_master_model_container: 1
2024-04-07 18:36:10,913:INFO:_display_container: 2
2024-04-07 18:36:10,914:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5574, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:36:10,914:INFO:create_model() successfully completed......................................
2024-04-07 18:36:11,045:INFO:SubProcess create_model() end ==================================
2024-04-07 18:36:11,045:INFO:Creating metrics dataframe
2024-04-07 18:36:11,052:INFO:Initializing Decision Tree Classifier
2024-04-07 18:36:11,052:INFO:Total runtime is 0.004801241556803385 minutes
2024-04-07 18:36:11,055:INFO:SubProcess create_model() called ==================================
2024-04-07 18:36:11,056:INFO:Initializing create_model()
2024-04-07 18:36:11,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01F27DD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C7CEEAC90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:11,056:INFO:Checking exceptions
2024-04-07 18:36:11,056:INFO:Importing libraries
2024-04-07 18:36:11,056:INFO:Copying training dataset
2024-04-07 18:36:11,062:INFO:Defining folds
2024-04-07 18:36:11,062:INFO:Declaring metric variables
2024-04-07 18:36:11,066:INFO:Importing untrained model
2024-04-07 18:36:11,070:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:36:11,078:INFO:Starting cross validation
2024-04-07 18:36:11,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:36:11,235:INFO:Calculating mean and std
2024-04-07 18:36:11,235:INFO:Creating metrics dataframe
2024-04-07 18:36:11,238:INFO:Uploading results into container
2024-04-07 18:36:11,238:INFO:Uploading model into container now
2024-04-07 18:36:11,238:INFO:_master_model_container: 2
2024-04-07 18:36:11,239:INFO:_display_container: 2
2024-04-07 18:36:11,239:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5574, splitter='best')
2024-04-07 18:36:11,239:INFO:create_model() successfully completed......................................
2024-04-07 18:36:11,369:INFO:SubProcess create_model() end ==================================
2024-04-07 18:36:11,369:INFO:Creating metrics dataframe
2024-04-07 18:36:11,387:INFO:Initializing create_model()
2024-04-07 18:36:11,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01F27DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5574, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:11,388:INFO:Checking exceptions
2024-04-07 18:36:11,390:INFO:Importing libraries
2024-04-07 18:36:11,390:INFO:Copying training dataset
2024-04-07 18:36:11,395:INFO:Defining folds
2024-04-07 18:36:11,395:INFO:Declaring metric variables
2024-04-07 18:36:11,396:INFO:Importing untrained model
2024-04-07 18:36:11,396:INFO:Declaring custom model
2024-04-07 18:36:11,396:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:36:11,397:INFO:Cross validation set to False
2024-04-07 18:36:11,397:INFO:Fitting Model
2024-04-07 18:36:11,454:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5574, splitter='best')
2024-04-07 18:36:11,454:INFO:create_model() successfully completed......................................
2024-04-07 18:36:11,598:INFO:Initializing create_model()
2024-04-07 18:36:11,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01F27DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5574, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:11,599:INFO:Checking exceptions
2024-04-07 18:36:11,601:INFO:Importing libraries
2024-04-07 18:36:11,601:INFO:Copying training dataset
2024-04-07 18:36:11,607:INFO:Defining folds
2024-04-07 18:36:11,607:INFO:Declaring metric variables
2024-04-07 18:36:11,608:INFO:Importing untrained model
2024-04-07 18:36:11,608:INFO:Declaring custom model
2024-04-07 18:36:11,608:INFO:Logistic Regression Imported successfully
2024-04-07 18:36:11,609:INFO:Cross validation set to False
2024-04-07 18:36:11,609:INFO:Fitting Model
2024-04-07 18:36:11,637:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5574, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:36:11,637:INFO:create_model() successfully completed......................................
2024-04-07 18:36:11,791:INFO:_master_model_container: 2
2024-04-07 18:36:11,791:INFO:_display_container: 2
2024-04-07 18:36:11,792:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5574, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5574, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:36:11,793:INFO:compare_models() successfully completed......................................
2024-04-07 18:36:11,793:INFO:Initializing plot_model()
2024-04-07 18:36:11,794:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01F27DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5574, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:36:11,794:INFO:Checking exceptions
2024-04-07 18:36:11,797:INFO:Preloading libraries
2024-04-07 18:36:11,798:INFO:Copying training dataset
2024-04-07 18:36:11,799:INFO:Plot type: vc
2024-04-07 18:36:11,799:INFO:Determining param_name
2024-04-07 18:36:11,799:INFO:param_name: max_depth
2024-04-07 18:36:11,878:INFO:Fitting Model
2024-04-07 18:36:12,326:INFO:Saving 'Validation Curve.png'
2024-04-07 18:36:12,494:INFO:Visual Rendered Successfully
2024-04-07 18:36:12,624:INFO:plot_model() successfully completed......................................
2024-04-07 18:36:12,625:INFO:Initializing predict_model()
2024-04-07 18:36:12,625:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01F27DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5574, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C01D57740>)
2024-04-07 18:36:12,625:INFO:Checking exceptions
2024-04-07 18:36:12,625:INFO:Preloading libraries
2024-04-07 18:36:16,595:INFO:PyCaret ClassificationExperiment
2024-04-07 18:36:16,596:INFO:Logging name: clf-default-name
2024-04-07 18:36:16,596:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:36:16,596:INFO:version 3.2.0
2024-04-07 18:36:16,596:INFO:Initializing setup()
2024-04-07 18:36:16,596:INFO:self.USI: ae47
2024-04-07 18:36:16,596:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:36:16,596:INFO:Checking environment
2024-04-07 18:36:16,596:INFO:python_version: 3.11.7
2024-04-07 18:36:16,596:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:36:16,596:INFO:machine: AMD64
2024-04-07 18:36:16,596:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:36:16,596:INFO:Memory: svmem(total=10575405056, available=840003584, percent=92.1, used=9735401472, free=840003584)
2024-04-07 18:36:16,596:INFO:Physical Core: 8
2024-04-07 18:36:16,596:INFO:Logical Core: 16
2024-04-07 18:36:16,596:INFO:Checking libraries
2024-04-07 18:36:16,596:INFO:System:
2024-04-07 18:36:16,596:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:36:16,596:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:36:16,596:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:36:16,596:INFO:PyCaret required dependencies:
2024-04-07 18:36:16,597:INFO:                 pip: 23.3.1
2024-04-07 18:36:16,597:INFO:          setuptools: 68.2.2
2024-04-07 18:36:16,597:INFO:             pycaret: 3.2.0
2024-04-07 18:36:16,597:INFO:             IPython: 8.20.0
2024-04-07 18:36:16,597:INFO:          ipywidgets: 7.6.5
2024-04-07 18:36:16,597:INFO:                tqdm: 4.65.0
2024-04-07 18:36:16,597:INFO:               numpy: 1.25.2
2024-04-07 18:36:16,597:INFO:              pandas: 1.5.3
2024-04-07 18:36:16,597:INFO:              jinja2: 3.1.3
2024-04-07 18:36:16,597:INFO:               scipy: 1.10.1
2024-04-07 18:36:16,597:INFO:              joblib: 1.2.0
2024-04-07 18:36:16,597:INFO:             sklearn: 1.2.2
2024-04-07 18:36:16,597:INFO:                pyod: 1.1.3
2024-04-07 18:36:16,597:INFO:            imblearn: 0.11.0
2024-04-07 18:36:16,597:INFO:   category_encoders: 2.6.3
2024-04-07 18:36:16,597:INFO:            lightgbm: 4.3.0
2024-04-07 18:36:16,597:INFO:               numba: 0.59.0
2024-04-07 18:36:16,597:INFO:            requests: 2.31.0
2024-04-07 18:36:16,597:INFO:          matplotlib: 3.6.0
2024-04-07 18:36:16,597:INFO:          scikitplot: 0.3.7
2024-04-07 18:36:16,597:INFO:         yellowbrick: 1.5
2024-04-07 18:36:16,597:INFO:              plotly: 5.9.0
2024-04-07 18:36:16,597:INFO:    plotly-resampler: Not installed
2024-04-07 18:36:16,597:INFO:             kaleido: 0.2.1
2024-04-07 18:36:16,597:INFO:           schemdraw: 0.15
2024-04-07 18:36:16,597:INFO:         statsmodels: 0.14.0
2024-04-07 18:36:16,597:INFO:              sktime: 0.21.1
2024-04-07 18:36:16,598:INFO:               tbats: 1.1.3
2024-04-07 18:36:16,598:INFO:            pmdarima: 2.0.4
2024-04-07 18:36:16,598:INFO:              psutil: 5.9.0
2024-04-07 18:36:16,598:INFO:          markupsafe: 2.1.3
2024-04-07 18:36:16,598:INFO:             pickle5: Not installed
2024-04-07 18:36:16,598:INFO:         cloudpickle: 2.2.1
2024-04-07 18:36:16,598:INFO:         deprecation: 2.1.0
2024-04-07 18:36:16,598:INFO:              xxhash: 3.4.1
2024-04-07 18:36:16,598:INFO:           wurlitzer: Not installed
2024-04-07 18:36:16,598:INFO:PyCaret optional dependencies:
2024-04-07 18:36:16,599:INFO:                shap: 0.44.0
2024-04-07 18:36:16,599:INFO:           interpret: Not installed
2024-04-07 18:36:16,599:INFO:                umap: Not installed
2024-04-07 18:36:16,599:INFO:     ydata_profiling: Not installed
2024-04-07 18:36:16,599:INFO:  explainerdashboard: Not installed
2024-04-07 18:36:16,599:INFO:             autoviz: Not installed
2024-04-07 18:36:16,599:INFO:           fairlearn: Not installed
2024-04-07 18:36:16,599:INFO:          deepchecks: Not installed
2024-04-07 18:36:16,599:INFO:             xgboost: Not installed
2024-04-07 18:36:16,599:INFO:            catboost: 1.2.3
2024-04-07 18:36:16,599:INFO:              kmodes: 0.12.2
2024-04-07 18:36:16,599:INFO:             mlxtend: 0.23.1
2024-04-07 18:36:16,599:INFO:       statsforecast: 1.5.0
2024-04-07 18:36:16,599:INFO:        tune_sklearn: Not installed
2024-04-07 18:36:16,599:INFO:                 ray: Not installed
2024-04-07 18:36:16,599:INFO:            hyperopt: Not installed
2024-04-07 18:36:16,599:INFO:              optuna: Not installed
2024-04-07 18:36:16,599:INFO:               skopt: Not installed
2024-04-07 18:36:16,599:INFO:              mlflow: 2.9.0
2024-04-07 18:36:16,599:INFO:              gradio: Not installed
2024-04-07 18:36:16,599:INFO:             fastapi: Not installed
2024-04-07 18:36:16,599:INFO:             uvicorn: Not installed
2024-04-07 18:36:16,599:INFO:              m2cgen: Not installed
2024-04-07 18:36:16,599:INFO:           evidently: Not installed
2024-04-07 18:36:16,599:INFO:               fugue: 0.8.7
2024-04-07 18:36:16,599:INFO:           streamlit: 1.28.0
2024-04-07 18:36:16,599:INFO:             prophet: Not installed
2024-04-07 18:36:16,599:INFO:None
2024-04-07 18:36:16,599:INFO:Set up data.
2024-04-07 18:36:16,607:INFO:Set up folding strategy.
2024-04-07 18:36:16,607:INFO:Set up train/test split.
2024-04-07 18:36:16,607:INFO:Set up data.
2024-04-07 18:36:16,612:INFO:Set up index.
2024-04-07 18:36:16,613:INFO:Assigning column types.
2024-04-07 18:36:16,617:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:36:16,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:36:16,668:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:16,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:16,697:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:16,744:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:36:16,745:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:16,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:16,774:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:16,775:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:36:16,821:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:16,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:16,850:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:16,896:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:16,925:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:16,925:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:16,925:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:36:17,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:17,001:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:17,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:17,076:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:17,077:INFO:Preparing preprocessing pipeline...
2024-04-07 18:36:17,078:INFO:Set up simple imputation.
2024-04-07 18:36:17,078:INFO:Set up feature normalization.
2024-04-07 18:36:17,105:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:36:17,109:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:36:17,109:INFO:Creating final display dataframe.
2024-04-07 18:36:17,192:INFO:Setup _display_container:                     Description             Value
0                    Session id               651
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              ae47
2024-04-07 18:36:17,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:17,275:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:17,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:17,349:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:17,352:INFO:setup() successfully completed in 0.76s...............
2024-04-07 18:36:17,354:INFO:Initializing compare_models()
2024-04-07 18:36:17,354:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C7F78F790>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C7F78F790>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:36:17,354:INFO:Checking exceptions
2024-04-07 18:36:17,357:INFO:Preparing display monitor
2024-04-07 18:36:17,382:INFO:Initializing Logistic Regression
2024-04-07 18:36:17,382:INFO:Total runtime is 0.0 minutes
2024-04-07 18:36:17,386:INFO:SubProcess create_model() called ==================================
2024-04-07 18:36:17,387:INFO:Initializing create_model()
2024-04-07 18:36:17,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C7F78F790>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C08557DD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:17,387:INFO:Checking exceptions
2024-04-07 18:36:17,387:INFO:Importing libraries
2024-04-07 18:36:17,387:INFO:Copying training dataset
2024-04-07 18:36:17,394:INFO:Defining folds
2024-04-07 18:36:17,394:INFO:Declaring metric variables
2024-04-07 18:36:17,397:INFO:Importing untrained model
2024-04-07 18:36:17,400:INFO:Logistic Regression Imported successfully
2024-04-07 18:36:17,408:INFO:Starting cross validation
2024-04-07 18:36:17,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:36:17,517:INFO:Calculating mean and std
2024-04-07 18:36:17,518:INFO:Creating metrics dataframe
2024-04-07 18:36:17,520:INFO:Uploading results into container
2024-04-07 18:36:17,521:INFO:Uploading model into container now
2024-04-07 18:36:17,521:INFO:_master_model_container: 1
2024-04-07 18:36:17,521:INFO:_display_container: 2
2024-04-07 18:36:17,521:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=651, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:36:17,521:INFO:create_model() successfully completed......................................
2024-04-07 18:36:17,678:INFO:SubProcess create_model() end ==================================
2024-04-07 18:36:17,678:INFO:Creating metrics dataframe
2024-04-07 18:36:17,686:INFO:Initializing Decision Tree Classifier
2024-04-07 18:36:17,686:INFO:Total runtime is 0.005062417189280192 minutes
2024-04-07 18:36:17,690:INFO:SubProcess create_model() called ==================================
2024-04-07 18:36:17,690:INFO:Initializing create_model()
2024-04-07 18:36:17,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C7F78F790>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C08557DD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:17,691:INFO:Checking exceptions
2024-04-07 18:36:17,691:INFO:Importing libraries
2024-04-07 18:36:17,691:INFO:Copying training dataset
2024-04-07 18:36:17,696:INFO:Defining folds
2024-04-07 18:36:17,696:INFO:Declaring metric variables
2024-04-07 18:36:17,700:INFO:Importing untrained model
2024-04-07 18:36:17,704:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:36:17,710:INFO:Starting cross validation
2024-04-07 18:36:17,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:36:17,873:INFO:Calculating mean and std
2024-04-07 18:36:17,873:INFO:Creating metrics dataframe
2024-04-07 18:36:17,876:INFO:Uploading results into container
2024-04-07 18:36:17,876:INFO:Uploading model into container now
2024-04-07 18:36:17,877:INFO:_master_model_container: 2
2024-04-07 18:36:17,877:INFO:_display_container: 2
2024-04-07 18:36:17,877:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=651, splitter='best')
2024-04-07 18:36:17,877:INFO:create_model() successfully completed......................................
2024-04-07 18:36:18,011:INFO:SubProcess create_model() end ==================================
2024-04-07 18:36:18,011:INFO:Creating metrics dataframe
2024-04-07 18:36:18,027:INFO:Initializing create_model()
2024-04-07 18:36:18,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C7F78F790>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=651, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:18,028:INFO:Checking exceptions
2024-04-07 18:36:18,030:INFO:Importing libraries
2024-04-07 18:36:18,030:INFO:Copying training dataset
2024-04-07 18:36:18,035:INFO:Defining folds
2024-04-07 18:36:18,035:INFO:Declaring metric variables
2024-04-07 18:36:18,035:INFO:Importing untrained model
2024-04-07 18:36:18,035:INFO:Declaring custom model
2024-04-07 18:36:18,035:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:36:18,036:INFO:Cross validation set to False
2024-04-07 18:36:18,036:INFO:Fitting Model
2024-04-07 18:36:18,092:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=651, splitter='best')
2024-04-07 18:36:18,092:INFO:create_model() successfully completed......................................
2024-04-07 18:36:18,232:INFO:Initializing create_model()
2024-04-07 18:36:18,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C7F78F790>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=651, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:18,232:INFO:Checking exceptions
2024-04-07 18:36:18,233:INFO:Importing libraries
2024-04-07 18:36:18,234:INFO:Copying training dataset
2024-04-07 18:36:18,243:INFO:Defining folds
2024-04-07 18:36:18,244:INFO:Declaring metric variables
2024-04-07 18:36:18,244:INFO:Importing untrained model
2024-04-07 18:36:18,244:INFO:Declaring custom model
2024-04-07 18:36:18,245:INFO:Logistic Regression Imported successfully
2024-04-07 18:36:18,246:INFO:Cross validation set to False
2024-04-07 18:36:18,246:INFO:Fitting Model
2024-04-07 18:36:18,275:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=651, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:36:18,275:INFO:create_model() successfully completed......................................
2024-04-07 18:36:18,426:INFO:_master_model_container: 2
2024-04-07 18:36:18,426:INFO:_display_container: 2
2024-04-07 18:36:18,427:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=651, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=651, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:36:18,427:INFO:compare_models() successfully completed......................................
2024-04-07 18:36:18,427:INFO:Initializing plot_model()
2024-04-07 18:36:18,428:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C7F78F790>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=651, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:36:18,428:INFO:Checking exceptions
2024-04-07 18:36:18,432:INFO:Preloading libraries
2024-04-07 18:36:18,432:INFO:Copying training dataset
2024-04-07 18:36:18,433:INFO:Plot type: vc
2024-04-07 18:36:18,434:INFO:Determining param_name
2024-04-07 18:36:18,434:INFO:param_name: max_depth
2024-04-07 18:36:18,508:INFO:Fitting Model
2024-04-07 18:36:18,952:INFO:Saving 'Validation Curve.png'
2024-04-07 18:36:19,119:INFO:Visual Rendered Successfully
2024-04-07 18:36:19,248:INFO:plot_model() successfully completed......................................
2024-04-07 18:36:19,249:INFO:Initializing predict_model()
2024-04-07 18:36:19,249:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C7F78F790>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=651, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C02049800>)
2024-04-07 18:36:19,249:INFO:Checking exceptions
2024-04-07 18:36:19,249:INFO:Preloading libraries
2024-04-07 18:36:50,626:INFO:PyCaret ClassificationExperiment
2024-04-07 18:36:50,626:INFO:Logging name: clf-default-name
2024-04-07 18:36:50,626:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:36:50,627:INFO:version 3.2.0
2024-04-07 18:36:50,627:INFO:Initializing setup()
2024-04-07 18:36:50,627:INFO:self.USI: e236
2024-04-07 18:36:50,627:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:36:50,627:INFO:Checking environment
2024-04-07 18:36:50,627:INFO:python_version: 3.11.7
2024-04-07 18:36:50,627:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:36:50,627:INFO:machine: AMD64
2024-04-07 18:36:50,627:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:36:50,627:INFO:Memory: svmem(total=10575405056, available=911622144, percent=91.4, used=9663782912, free=911622144)
2024-04-07 18:36:50,627:INFO:Physical Core: 8
2024-04-07 18:36:50,627:INFO:Logical Core: 16
2024-04-07 18:36:50,627:INFO:Checking libraries
2024-04-07 18:36:50,627:INFO:System:
2024-04-07 18:36:50,628:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:36:50,628:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:36:50,628:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:36:50,628:INFO:PyCaret required dependencies:
2024-04-07 18:36:50,628:INFO:                 pip: 23.3.1
2024-04-07 18:36:50,628:INFO:          setuptools: 68.2.2
2024-04-07 18:36:50,628:INFO:             pycaret: 3.2.0
2024-04-07 18:36:50,628:INFO:             IPython: 8.20.0
2024-04-07 18:36:50,628:INFO:          ipywidgets: 7.6.5
2024-04-07 18:36:50,628:INFO:                tqdm: 4.65.0
2024-04-07 18:36:50,628:INFO:               numpy: 1.25.2
2024-04-07 18:36:50,628:INFO:              pandas: 1.5.3
2024-04-07 18:36:50,628:INFO:              jinja2: 3.1.3
2024-04-07 18:36:50,628:INFO:               scipy: 1.10.1
2024-04-07 18:36:50,628:INFO:              joblib: 1.2.0
2024-04-07 18:36:50,628:INFO:             sklearn: 1.2.2
2024-04-07 18:36:50,629:INFO:                pyod: 1.1.3
2024-04-07 18:36:50,629:INFO:            imblearn: 0.11.0
2024-04-07 18:36:50,629:INFO:   category_encoders: 2.6.3
2024-04-07 18:36:50,629:INFO:            lightgbm: 4.3.0
2024-04-07 18:36:50,629:INFO:               numba: 0.59.0
2024-04-07 18:36:50,629:INFO:            requests: 2.31.0
2024-04-07 18:36:50,629:INFO:          matplotlib: 3.6.0
2024-04-07 18:36:50,629:INFO:          scikitplot: 0.3.7
2024-04-07 18:36:50,629:INFO:         yellowbrick: 1.5
2024-04-07 18:36:50,629:INFO:              plotly: 5.9.0
2024-04-07 18:36:50,629:INFO:    plotly-resampler: Not installed
2024-04-07 18:36:50,629:INFO:             kaleido: 0.2.1
2024-04-07 18:36:50,629:INFO:           schemdraw: 0.15
2024-04-07 18:36:50,629:INFO:         statsmodels: 0.14.0
2024-04-07 18:36:50,629:INFO:              sktime: 0.21.1
2024-04-07 18:36:50,629:INFO:               tbats: 1.1.3
2024-04-07 18:36:50,629:INFO:            pmdarima: 2.0.4
2024-04-07 18:36:50,629:INFO:              psutil: 5.9.0
2024-04-07 18:36:50,630:INFO:          markupsafe: 2.1.3
2024-04-07 18:36:50,630:INFO:             pickle5: Not installed
2024-04-07 18:36:50,630:INFO:         cloudpickle: 2.2.1
2024-04-07 18:36:50,630:INFO:         deprecation: 2.1.0
2024-04-07 18:36:50,630:INFO:              xxhash: 3.4.1
2024-04-07 18:36:50,630:INFO:           wurlitzer: Not installed
2024-04-07 18:36:50,630:INFO:PyCaret optional dependencies:
2024-04-07 18:36:50,630:INFO:                shap: 0.44.0
2024-04-07 18:36:50,630:INFO:           interpret: Not installed
2024-04-07 18:36:50,630:INFO:                umap: Not installed
2024-04-07 18:36:50,630:INFO:     ydata_profiling: Not installed
2024-04-07 18:36:50,630:INFO:  explainerdashboard: Not installed
2024-04-07 18:36:50,630:INFO:             autoviz: Not installed
2024-04-07 18:36:50,630:INFO:           fairlearn: Not installed
2024-04-07 18:36:50,630:INFO:          deepchecks: Not installed
2024-04-07 18:36:50,630:INFO:             xgboost: Not installed
2024-04-07 18:36:50,630:INFO:            catboost: 1.2.3
2024-04-07 18:36:50,630:INFO:              kmodes: 0.12.2
2024-04-07 18:36:50,630:INFO:             mlxtend: 0.23.1
2024-04-07 18:36:50,631:INFO:       statsforecast: 1.5.0
2024-04-07 18:36:50,631:INFO:        tune_sklearn: Not installed
2024-04-07 18:36:50,631:INFO:                 ray: Not installed
2024-04-07 18:36:50,631:INFO:            hyperopt: Not installed
2024-04-07 18:36:50,631:INFO:              optuna: Not installed
2024-04-07 18:36:50,631:INFO:               skopt: Not installed
2024-04-07 18:36:50,631:INFO:              mlflow: 2.9.0
2024-04-07 18:36:50,631:INFO:              gradio: Not installed
2024-04-07 18:36:50,631:INFO:             fastapi: Not installed
2024-04-07 18:36:50,631:INFO:             uvicorn: Not installed
2024-04-07 18:36:50,631:INFO:              m2cgen: Not installed
2024-04-07 18:36:50,631:INFO:           evidently: Not installed
2024-04-07 18:36:50,631:INFO:               fugue: 0.8.7
2024-04-07 18:36:50,631:INFO:           streamlit: 1.28.0
2024-04-07 18:36:50,631:INFO:             prophet: Not installed
2024-04-07 18:36:50,631:INFO:None
2024-04-07 18:36:50,631:INFO:Set up data.
2024-04-07 18:36:50,638:INFO:Set up folding strategy.
2024-04-07 18:36:50,638:INFO:Set up train/test split.
2024-04-07 18:36:50,640:INFO:Set up data.
2024-04-07 18:36:50,644:INFO:Set up index.
2024-04-07 18:36:50,645:INFO:Assigning column types.
2024-04-07 18:36:50,648:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:36:50,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:36:50,696:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:50,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:50,724:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:50,769:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:36:50,769:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:50,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:50,798:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:50,799:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:36:50,844:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:50,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:50,873:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:50,919:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:36:50,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:50,948:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:50,948:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:36:51,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:51,021:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:51,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:51,098:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:51,099:INFO:Preparing preprocessing pipeline...
2024-04-07 18:36:51,100:INFO:Set up simple imputation.
2024-04-07 18:36:51,100:INFO:Set up feature normalization.
2024-04-07 18:36:51,125:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:36:51,129:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:36:51,129:INFO:Creating final display dataframe.
2024-04-07 18:36:51,205:INFO:Setup _display_container:                     Description             Value
0                    Session id              5419
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              e236
2024-04-07 18:36:51,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:51,288:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:51,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:36:51,359:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:36:51,359:INFO:setup() successfully completed in 0.74s...............
2024-04-07 18:36:51,359:INFO:Initializing compare_models()
2024-04-07 18:36:51,359:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C041DA4D0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C041DA4D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:36:51,359:INFO:Checking exceptions
2024-04-07 18:36:51,359:INFO:Preparing display monitor
2024-04-07 18:36:51,392:INFO:Initializing Logistic Regression
2024-04-07 18:36:51,393:INFO:Total runtime is 1.660585403442383e-05 minutes
2024-04-07 18:36:51,396:INFO:SubProcess create_model() called ==================================
2024-04-07 18:36:51,396:INFO:Initializing create_model()
2024-04-07 18:36:51,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C041DA4D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C01DA1510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:51,397:INFO:Checking exceptions
2024-04-07 18:36:51,397:INFO:Importing libraries
2024-04-07 18:36:51,397:INFO:Copying training dataset
2024-04-07 18:36:51,402:INFO:Defining folds
2024-04-07 18:36:51,402:INFO:Declaring metric variables
2024-04-07 18:36:51,405:INFO:Importing untrained model
2024-04-07 18:36:51,408:INFO:Logistic Regression Imported successfully
2024-04-07 18:36:51,416:INFO:Starting cross validation
2024-04-07 18:36:51,417:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:36:51,537:INFO:Calculating mean and std
2024-04-07 18:36:51,537:INFO:Creating metrics dataframe
2024-04-07 18:36:51,540:INFO:Uploading results into container
2024-04-07 18:36:51,540:INFO:Uploading model into container now
2024-04-07 18:36:51,541:INFO:_master_model_container: 1
2024-04-07 18:36:51,541:INFO:_display_container: 2
2024-04-07 18:36:51,541:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5419, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:36:51,541:INFO:create_model() successfully completed......................................
2024-04-07 18:36:51,682:INFO:SubProcess create_model() end ==================================
2024-04-07 18:36:51,682:INFO:Creating metrics dataframe
2024-04-07 18:36:51,690:INFO:Initializing Decision Tree Classifier
2024-04-07 18:36:51,690:INFO:Total runtime is 0.004960115750630697 minutes
2024-04-07 18:36:51,693:INFO:SubProcess create_model() called ==================================
2024-04-07 18:36:51,694:INFO:Initializing create_model()
2024-04-07 18:36:51,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C041DA4D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C01DA1510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:51,695:INFO:Checking exceptions
2024-04-07 18:36:51,695:INFO:Importing libraries
2024-04-07 18:36:51,695:INFO:Copying training dataset
2024-04-07 18:36:51,700:INFO:Defining folds
2024-04-07 18:36:51,700:INFO:Declaring metric variables
2024-04-07 18:36:51,704:INFO:Importing untrained model
2024-04-07 18:36:51,707:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:36:51,714:INFO:Starting cross validation
2024-04-07 18:36:51,715:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:36:51,878:INFO:Calculating mean and std
2024-04-07 18:36:51,879:INFO:Creating metrics dataframe
2024-04-07 18:36:51,882:INFO:Uploading results into container
2024-04-07 18:36:51,883:INFO:Uploading model into container now
2024-04-07 18:36:51,883:INFO:_master_model_container: 2
2024-04-07 18:36:51,883:INFO:_display_container: 2
2024-04-07 18:36:51,883:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5419, splitter='best')
2024-04-07 18:36:51,883:INFO:create_model() successfully completed......................................
2024-04-07 18:36:52,011:INFO:SubProcess create_model() end ==================================
2024-04-07 18:36:52,011:INFO:Creating metrics dataframe
2024-04-07 18:36:52,029:INFO:Initializing create_model()
2024-04-07 18:36:52,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C041DA4D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5419, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:52,030:INFO:Checking exceptions
2024-04-07 18:36:52,033:INFO:Importing libraries
2024-04-07 18:36:52,033:INFO:Copying training dataset
2024-04-07 18:36:52,039:INFO:Defining folds
2024-04-07 18:36:52,039:INFO:Declaring metric variables
2024-04-07 18:36:52,039:INFO:Importing untrained model
2024-04-07 18:36:52,039:INFO:Declaring custom model
2024-04-07 18:36:52,039:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:36:52,040:INFO:Cross validation set to False
2024-04-07 18:36:52,040:INFO:Fitting Model
2024-04-07 18:36:52,096:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5419, splitter='best')
2024-04-07 18:36:52,097:INFO:create_model() successfully completed......................................
2024-04-07 18:36:52,230:INFO:Initializing create_model()
2024-04-07 18:36:52,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C041DA4D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5419, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:36:52,230:INFO:Checking exceptions
2024-04-07 18:36:52,233:INFO:Importing libraries
2024-04-07 18:36:52,233:INFO:Copying training dataset
2024-04-07 18:36:52,239:INFO:Defining folds
2024-04-07 18:36:52,239:INFO:Declaring metric variables
2024-04-07 18:36:52,239:INFO:Importing untrained model
2024-04-07 18:36:52,240:INFO:Declaring custom model
2024-04-07 18:36:52,240:INFO:Logistic Regression Imported successfully
2024-04-07 18:36:52,241:INFO:Cross validation set to False
2024-04-07 18:36:52,241:INFO:Fitting Model
2024-04-07 18:36:52,263:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5419, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:36:52,263:INFO:create_model() successfully completed......................................
2024-04-07 18:36:52,411:INFO:_master_model_container: 2
2024-04-07 18:36:52,412:INFO:_display_container: 2
2024-04-07 18:36:52,412:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5419, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5419, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:36:52,412:INFO:compare_models() successfully completed......................................
2024-04-07 18:36:52,413:INFO:Initializing plot_model()
2024-04-07 18:36:52,413:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C041DA4D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5419, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:36:52,413:INFO:Checking exceptions
2024-04-07 18:36:52,417:INFO:Preloading libraries
2024-04-07 18:36:52,418:INFO:Copying training dataset
2024-04-07 18:36:52,420:INFO:Plot type: vc
2024-04-07 18:36:52,420:INFO:Determining param_name
2024-04-07 18:36:52,420:INFO:param_name: max_depth
2024-04-07 18:36:52,493:INFO:Fitting Model
2024-04-07 18:36:52,930:INFO:Saving 'Validation Curve.png'
2024-04-07 18:36:53,093:INFO:Visual Rendered Successfully
2024-04-07 18:36:53,221:INFO:plot_model() successfully completed......................................
2024-04-07 18:36:53,222:INFO:Initializing predict_model()
2024-04-07 18:36:53,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C041DA4D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5419, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C7CAF6160>)
2024-04-07 18:36:53,222:INFO:Checking exceptions
2024-04-07 18:36:53,222:INFO:Preloading libraries
2024-04-07 18:37:01,854:INFO:PyCaret ClassificationExperiment
2024-04-07 18:37:01,854:INFO:Logging name: clf-default-name
2024-04-07 18:37:01,854:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:37:01,854:INFO:version 3.2.0
2024-04-07 18:37:01,854:INFO:Initializing setup()
2024-04-07 18:37:01,854:INFO:self.USI: d6f2
2024-04-07 18:37:01,854:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:37:01,854:INFO:Checking environment
2024-04-07 18:37:01,854:INFO:python_version: 3.11.7
2024-04-07 18:37:01,854:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:37:01,854:INFO:machine: AMD64
2024-04-07 18:37:01,854:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:37:01,854:INFO:Memory: svmem(total=10575405056, available=865370112, percent=91.8, used=9710034944, free=865370112)
2024-04-07 18:37:01,855:INFO:Physical Core: 8
2024-04-07 18:37:01,855:INFO:Logical Core: 16
2024-04-07 18:37:01,855:INFO:Checking libraries
2024-04-07 18:37:01,855:INFO:System:
2024-04-07 18:37:01,855:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:37:01,855:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:37:01,855:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:37:01,855:INFO:PyCaret required dependencies:
2024-04-07 18:37:01,855:INFO:                 pip: 23.3.1
2024-04-07 18:37:01,855:INFO:          setuptools: 68.2.2
2024-04-07 18:37:01,855:INFO:             pycaret: 3.2.0
2024-04-07 18:37:01,855:INFO:             IPython: 8.20.0
2024-04-07 18:37:01,855:INFO:          ipywidgets: 7.6.5
2024-04-07 18:37:01,855:INFO:                tqdm: 4.65.0
2024-04-07 18:37:01,855:INFO:               numpy: 1.25.2
2024-04-07 18:37:01,855:INFO:              pandas: 1.5.3
2024-04-07 18:37:01,855:INFO:              jinja2: 3.1.3
2024-04-07 18:37:01,855:INFO:               scipy: 1.10.1
2024-04-07 18:37:01,855:INFO:              joblib: 1.2.0
2024-04-07 18:37:01,855:INFO:             sklearn: 1.2.2
2024-04-07 18:37:01,855:INFO:                pyod: 1.1.3
2024-04-07 18:37:01,855:INFO:            imblearn: 0.11.0
2024-04-07 18:37:01,855:INFO:   category_encoders: 2.6.3
2024-04-07 18:37:01,855:INFO:            lightgbm: 4.3.0
2024-04-07 18:37:01,856:INFO:               numba: 0.59.0
2024-04-07 18:37:01,856:INFO:            requests: 2.31.0
2024-04-07 18:37:01,856:INFO:          matplotlib: 3.6.0
2024-04-07 18:37:01,856:INFO:          scikitplot: 0.3.7
2024-04-07 18:37:01,856:INFO:         yellowbrick: 1.5
2024-04-07 18:37:01,856:INFO:              plotly: 5.9.0
2024-04-07 18:37:01,856:INFO:    plotly-resampler: Not installed
2024-04-07 18:37:01,856:INFO:             kaleido: 0.2.1
2024-04-07 18:37:01,856:INFO:           schemdraw: 0.15
2024-04-07 18:37:01,856:INFO:         statsmodels: 0.14.0
2024-04-07 18:37:01,856:INFO:              sktime: 0.21.1
2024-04-07 18:37:01,856:INFO:               tbats: 1.1.3
2024-04-07 18:37:01,856:INFO:            pmdarima: 2.0.4
2024-04-07 18:37:01,856:INFO:              psutil: 5.9.0
2024-04-07 18:37:01,856:INFO:          markupsafe: 2.1.3
2024-04-07 18:37:01,856:INFO:             pickle5: Not installed
2024-04-07 18:37:01,856:INFO:         cloudpickle: 2.2.1
2024-04-07 18:37:01,856:INFO:         deprecation: 2.1.0
2024-04-07 18:37:01,856:INFO:              xxhash: 3.4.1
2024-04-07 18:37:01,856:INFO:           wurlitzer: Not installed
2024-04-07 18:37:01,856:INFO:PyCaret optional dependencies:
2024-04-07 18:37:01,856:INFO:                shap: 0.44.0
2024-04-07 18:37:01,856:INFO:           interpret: Not installed
2024-04-07 18:37:01,856:INFO:                umap: Not installed
2024-04-07 18:37:01,856:INFO:     ydata_profiling: Not installed
2024-04-07 18:37:01,856:INFO:  explainerdashboard: Not installed
2024-04-07 18:37:01,857:INFO:             autoviz: Not installed
2024-04-07 18:37:01,857:INFO:           fairlearn: Not installed
2024-04-07 18:37:01,857:INFO:          deepchecks: Not installed
2024-04-07 18:37:01,857:INFO:             xgboost: Not installed
2024-04-07 18:37:01,857:INFO:            catboost: 1.2.3
2024-04-07 18:37:01,857:INFO:              kmodes: 0.12.2
2024-04-07 18:37:01,857:INFO:             mlxtend: 0.23.1
2024-04-07 18:37:01,857:INFO:       statsforecast: 1.5.0
2024-04-07 18:37:01,857:INFO:        tune_sklearn: Not installed
2024-04-07 18:37:01,857:INFO:                 ray: Not installed
2024-04-07 18:37:01,857:INFO:            hyperopt: Not installed
2024-04-07 18:37:01,857:INFO:              optuna: Not installed
2024-04-07 18:37:01,857:INFO:               skopt: Not installed
2024-04-07 18:37:01,857:INFO:              mlflow: 2.9.0
2024-04-07 18:37:01,857:INFO:              gradio: Not installed
2024-04-07 18:37:01,857:INFO:             fastapi: Not installed
2024-04-07 18:37:01,857:INFO:             uvicorn: Not installed
2024-04-07 18:37:01,857:INFO:              m2cgen: Not installed
2024-04-07 18:37:01,857:INFO:           evidently: Not installed
2024-04-07 18:37:01,858:INFO:               fugue: 0.8.7
2024-04-07 18:37:01,858:INFO:           streamlit: 1.28.0
2024-04-07 18:37:01,858:INFO:             prophet: Not installed
2024-04-07 18:37:01,858:INFO:None
2024-04-07 18:37:01,858:INFO:Set up data.
2024-04-07 18:37:01,865:INFO:Set up folding strategy.
2024-04-07 18:37:01,865:INFO:Set up train/test split.
2024-04-07 18:37:01,865:INFO:Set up data.
2024-04-07 18:37:01,870:INFO:Set up index.
2024-04-07 18:37:01,871:INFO:Assigning column types.
2024-04-07 18:37:01,875:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:37:01,920:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:37:01,921:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:37:01,950:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:01,950:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:01,996:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:37:01,997:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:37:02,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:02,025:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:02,025:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:37:02,057:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:37:02,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:02,099:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:02,145:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:37:02,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:02,173:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:02,174:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:37:02,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:02,248:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:02,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:02,322:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:02,323:INFO:Preparing preprocessing pipeline...
2024-04-07 18:37:02,324:INFO:Set up simple imputation.
2024-04-07 18:37:02,324:INFO:Set up feature normalization.
2024-04-07 18:37:02,347:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:37:02,351:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:37:02,351:INFO:Creating final display dataframe.
2024-04-07 18:37:02,426:INFO:Setup _display_container:                     Description             Value
0                    Session id              6849
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              d6f2
2024-04-07 18:37:02,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:02,509:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:02,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:02,583:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:02,587:INFO:setup() successfully completed in 0.73s...............
2024-04-07 18:37:02,589:INFO:Initializing compare_models()
2024-04-07 18:37:02,589:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01D8E890>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01D8E890>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:37:02,589:INFO:Checking exceptions
2024-04-07 18:37:02,591:INFO:Preparing display monitor
2024-04-07 18:37:02,618:INFO:Initializing Logistic Regression
2024-04-07 18:37:02,618:INFO:Total runtime is 0.0 minutes
2024-04-07 18:37:02,622:INFO:SubProcess create_model() called ==================================
2024-04-07 18:37:02,622:INFO:Initializing create_model()
2024-04-07 18:37:02,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01D8E890>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C084DDC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:37:02,622:INFO:Checking exceptions
2024-04-07 18:37:02,622:INFO:Importing libraries
2024-04-07 18:37:02,622:INFO:Copying training dataset
2024-04-07 18:37:02,629:INFO:Defining folds
2024-04-07 18:37:02,629:INFO:Declaring metric variables
2024-04-07 18:37:02,632:INFO:Importing untrained model
2024-04-07 18:37:02,636:INFO:Logistic Regression Imported successfully
2024-04-07 18:37:02,644:INFO:Starting cross validation
2024-04-07 18:37:02,645:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:37:02,753:INFO:Calculating mean and std
2024-04-07 18:37:02,754:INFO:Creating metrics dataframe
2024-04-07 18:37:02,757:INFO:Uploading results into container
2024-04-07 18:37:02,757:INFO:Uploading model into container now
2024-04-07 18:37:02,757:INFO:_master_model_container: 1
2024-04-07 18:37:02,757:INFO:_display_container: 2
2024-04-07 18:37:02,757:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6849, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:37:02,757:INFO:create_model() successfully completed......................................
2024-04-07 18:37:02,890:INFO:SubProcess create_model() end ==================================
2024-04-07 18:37:02,890:INFO:Creating metrics dataframe
2024-04-07 18:37:02,898:INFO:Initializing Decision Tree Classifier
2024-04-07 18:37:02,898:INFO:Total runtime is 0.004660201072692871 minutes
2024-04-07 18:37:02,901:INFO:SubProcess create_model() called ==================================
2024-04-07 18:37:02,901:INFO:Initializing create_model()
2024-04-07 18:37:02,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01D8E890>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C084DDC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:37:02,902:INFO:Checking exceptions
2024-04-07 18:37:02,902:INFO:Importing libraries
2024-04-07 18:37:02,902:INFO:Copying training dataset
2024-04-07 18:37:02,909:INFO:Defining folds
2024-04-07 18:37:02,909:INFO:Declaring metric variables
2024-04-07 18:37:02,912:INFO:Importing untrained model
2024-04-07 18:37:02,917:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:37:02,924:INFO:Starting cross validation
2024-04-07 18:37:02,926:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:37:03,096:INFO:Calculating mean and std
2024-04-07 18:37:03,096:INFO:Creating metrics dataframe
2024-04-07 18:37:03,099:INFO:Uploading results into container
2024-04-07 18:37:03,099:INFO:Uploading model into container now
2024-04-07 18:37:03,100:INFO:_master_model_container: 2
2024-04-07 18:37:03,100:INFO:_display_container: 2
2024-04-07 18:37:03,100:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6849, splitter='best')
2024-04-07 18:37:03,100:INFO:create_model() successfully completed......................................
2024-04-07 18:37:03,231:INFO:SubProcess create_model() end ==================================
2024-04-07 18:37:03,231:INFO:Creating metrics dataframe
2024-04-07 18:37:03,248:INFO:Initializing create_model()
2024-04-07 18:37:03,248:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01D8E890>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6849, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:37:03,248:INFO:Checking exceptions
2024-04-07 18:37:03,250:INFO:Importing libraries
2024-04-07 18:37:03,250:INFO:Copying training dataset
2024-04-07 18:37:03,256:INFO:Defining folds
2024-04-07 18:37:03,257:INFO:Declaring metric variables
2024-04-07 18:37:03,257:INFO:Importing untrained model
2024-04-07 18:37:03,257:INFO:Declaring custom model
2024-04-07 18:37:03,257:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:37:03,257:INFO:Cross validation set to False
2024-04-07 18:37:03,257:INFO:Fitting Model
2024-04-07 18:37:03,314:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6849, splitter='best')
2024-04-07 18:37:03,314:INFO:create_model() successfully completed......................................
2024-04-07 18:37:03,450:INFO:Initializing create_model()
2024-04-07 18:37:03,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01D8E890>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6849, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:37:03,450:INFO:Checking exceptions
2024-04-07 18:37:03,452:INFO:Importing libraries
2024-04-07 18:37:03,452:INFO:Copying training dataset
2024-04-07 18:37:03,457:INFO:Defining folds
2024-04-07 18:37:03,457:INFO:Declaring metric variables
2024-04-07 18:37:03,457:INFO:Importing untrained model
2024-04-07 18:37:03,457:INFO:Declaring custom model
2024-04-07 18:37:03,458:INFO:Logistic Regression Imported successfully
2024-04-07 18:37:03,458:INFO:Cross validation set to False
2024-04-07 18:37:03,458:INFO:Fitting Model
2024-04-07 18:37:03,481:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6849, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:37:03,481:INFO:create_model() successfully completed......................................
2024-04-07 18:37:03,637:INFO:_master_model_container: 2
2024-04-07 18:37:03,637:INFO:_display_container: 2
2024-04-07 18:37:03,637:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6849, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6849, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:37:03,638:INFO:compare_models() successfully completed......................................
2024-04-07 18:37:03,638:INFO:Initializing plot_model()
2024-04-07 18:37:03,638:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01D8E890>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6849, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:37:03,638:INFO:Checking exceptions
2024-04-07 18:37:03,644:INFO:Preloading libraries
2024-04-07 18:37:03,645:INFO:Copying training dataset
2024-04-07 18:37:03,645:INFO:Plot type: vc
2024-04-07 18:37:03,646:INFO:Determining param_name
2024-04-07 18:37:03,647:INFO:param_name: max_depth
2024-04-07 18:37:03,723:INFO:Fitting Model
2024-04-07 18:37:04,199:INFO:Saving 'Validation Curve.png'
2024-04-07 18:37:04,382:INFO:Visual Rendered Successfully
2024-04-07 18:37:04,531:INFO:plot_model() successfully completed......................................
2024-04-07 18:37:04,532:INFO:Initializing predict_model()
2024-04-07 18:37:04,532:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C01D8E890>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6849, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C3A10BA60>)
2024-04-07 18:37:04,532:INFO:Checking exceptions
2024-04-07 18:37:04,532:INFO:Preloading libraries
2024-04-07 18:37:45,850:INFO:PyCaret ClassificationExperiment
2024-04-07 18:37:45,850:INFO:Logging name: clf-default-name
2024-04-07 18:37:45,850:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:37:45,850:INFO:version 3.2.0
2024-04-07 18:37:45,850:INFO:Initializing setup()
2024-04-07 18:37:45,850:INFO:self.USI: 78c2
2024-04-07 18:37:45,850:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:37:45,851:INFO:Checking environment
2024-04-07 18:37:45,851:INFO:python_version: 3.11.7
2024-04-07 18:37:45,851:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:37:45,851:INFO:machine: AMD64
2024-04-07 18:37:45,851:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:37:45,851:INFO:Memory: svmem(total=10575405056, available=879263744, percent=91.7, used=9696141312, free=879263744)
2024-04-07 18:37:45,851:INFO:Physical Core: 8
2024-04-07 18:37:45,851:INFO:Logical Core: 16
2024-04-07 18:37:45,851:INFO:Checking libraries
2024-04-07 18:37:45,851:INFO:System:
2024-04-07 18:37:45,851:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:37:45,851:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:37:45,851:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:37:45,851:INFO:PyCaret required dependencies:
2024-04-07 18:37:45,851:INFO:                 pip: 23.3.1
2024-04-07 18:37:45,851:INFO:          setuptools: 68.2.2
2024-04-07 18:37:45,851:INFO:             pycaret: 3.2.0
2024-04-07 18:37:45,851:INFO:             IPython: 8.20.0
2024-04-07 18:37:45,851:INFO:          ipywidgets: 7.6.5
2024-04-07 18:37:45,851:INFO:                tqdm: 4.65.0
2024-04-07 18:37:45,851:INFO:               numpy: 1.25.2
2024-04-07 18:37:45,852:INFO:              pandas: 1.5.3
2024-04-07 18:37:45,852:INFO:              jinja2: 3.1.3
2024-04-07 18:37:45,852:INFO:               scipy: 1.10.1
2024-04-07 18:37:45,852:INFO:              joblib: 1.2.0
2024-04-07 18:37:45,852:INFO:             sklearn: 1.2.2
2024-04-07 18:37:45,852:INFO:                pyod: 1.1.3
2024-04-07 18:37:45,852:INFO:            imblearn: 0.11.0
2024-04-07 18:37:45,852:INFO:   category_encoders: 2.6.3
2024-04-07 18:37:45,852:INFO:            lightgbm: 4.3.0
2024-04-07 18:37:45,852:INFO:               numba: 0.59.0
2024-04-07 18:37:45,852:INFO:            requests: 2.31.0
2024-04-07 18:37:45,852:INFO:          matplotlib: 3.6.0
2024-04-07 18:37:45,852:INFO:          scikitplot: 0.3.7
2024-04-07 18:37:45,852:INFO:         yellowbrick: 1.5
2024-04-07 18:37:45,852:INFO:              plotly: 5.9.0
2024-04-07 18:37:45,852:INFO:    plotly-resampler: Not installed
2024-04-07 18:37:45,852:INFO:             kaleido: 0.2.1
2024-04-07 18:37:45,852:INFO:           schemdraw: 0.15
2024-04-07 18:37:45,852:INFO:         statsmodels: 0.14.0
2024-04-07 18:37:45,852:INFO:              sktime: 0.21.1
2024-04-07 18:37:45,852:INFO:               tbats: 1.1.3
2024-04-07 18:37:45,852:INFO:            pmdarima: 2.0.4
2024-04-07 18:37:45,852:INFO:              psutil: 5.9.0
2024-04-07 18:37:45,852:INFO:          markupsafe: 2.1.3
2024-04-07 18:37:45,852:INFO:             pickle5: Not installed
2024-04-07 18:37:45,852:INFO:         cloudpickle: 2.2.1
2024-04-07 18:37:45,852:INFO:         deprecation: 2.1.0
2024-04-07 18:37:45,853:INFO:              xxhash: 3.4.1
2024-04-07 18:37:45,853:INFO:           wurlitzer: Not installed
2024-04-07 18:37:45,853:INFO:PyCaret optional dependencies:
2024-04-07 18:37:45,853:INFO:                shap: 0.44.0
2024-04-07 18:37:45,853:INFO:           interpret: Not installed
2024-04-07 18:37:45,853:INFO:                umap: Not installed
2024-04-07 18:37:45,853:INFO:     ydata_profiling: Not installed
2024-04-07 18:37:45,853:INFO:  explainerdashboard: Not installed
2024-04-07 18:37:45,853:INFO:             autoviz: Not installed
2024-04-07 18:37:45,853:INFO:           fairlearn: Not installed
2024-04-07 18:37:45,853:INFO:          deepchecks: Not installed
2024-04-07 18:37:45,853:INFO:             xgboost: Not installed
2024-04-07 18:37:45,853:INFO:            catboost: 1.2.3
2024-04-07 18:37:45,853:INFO:              kmodes: 0.12.2
2024-04-07 18:37:45,853:INFO:             mlxtend: 0.23.1
2024-04-07 18:37:45,853:INFO:       statsforecast: 1.5.0
2024-04-07 18:37:45,853:INFO:        tune_sklearn: Not installed
2024-04-07 18:37:45,853:INFO:                 ray: Not installed
2024-04-07 18:37:45,853:INFO:            hyperopt: Not installed
2024-04-07 18:37:45,853:INFO:              optuna: Not installed
2024-04-07 18:37:45,853:INFO:               skopt: Not installed
2024-04-07 18:37:45,853:INFO:              mlflow: 2.9.0
2024-04-07 18:37:45,853:INFO:              gradio: Not installed
2024-04-07 18:37:45,853:INFO:             fastapi: Not installed
2024-04-07 18:37:45,853:INFO:             uvicorn: Not installed
2024-04-07 18:37:45,854:INFO:              m2cgen: Not installed
2024-04-07 18:37:45,854:INFO:           evidently: Not installed
2024-04-07 18:37:45,854:INFO:               fugue: 0.8.7
2024-04-07 18:37:45,854:INFO:           streamlit: 1.28.0
2024-04-07 18:37:45,854:INFO:             prophet: Not installed
2024-04-07 18:37:45,854:INFO:None
2024-04-07 18:37:45,854:INFO:Set up data.
2024-04-07 18:37:45,859:INFO:Set up folding strategy.
2024-04-07 18:37:45,859:INFO:Set up train/test split.
2024-04-07 18:37:45,859:INFO:Set up data.
2024-04-07 18:37:45,865:INFO:Set up index.
2024-04-07 18:37:45,865:INFO:Assigning column types.
2024-04-07 18:37:45,871:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:37:45,916:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:37:45,917:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:37:45,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:45,946:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:45,992:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:37:45,993:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:37:46,020:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:46,021:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:46,021:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:37:46,067:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:37:46,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:46,095:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:46,140:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:37:46,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:46,156:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:46,156:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:37:46,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:46,243:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:46,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:46,317:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:46,319:INFO:Preparing preprocessing pipeline...
2024-04-07 18:37:46,320:INFO:Set up simple imputation.
2024-04-07 18:37:46,320:INFO:Set up feature normalization.
2024-04-07 18:37:46,348:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:37:46,352:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:37:46,352:INFO:Creating final display dataframe.
2024-04-07 18:37:46,427:INFO:Setup _display_container:                     Description             Value
0                    Session id              4523
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              78c2
2024-04-07 18:37:46,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:46,514:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:46,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:37:46,588:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:37:46,589:INFO:setup() successfully completed in 0.74s...............
2024-04-07 18:37:46,590:INFO:Initializing compare_models()
2024-04-07 18:37:46,590:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03DE7C90>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03DE7C90>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:37:46,590:INFO:Checking exceptions
2024-04-07 18:37:46,593:INFO:Preparing display monitor
2024-04-07 18:37:46,620:INFO:Initializing Logistic Regression
2024-04-07 18:37:46,620:INFO:Total runtime is 0.0 minutes
2024-04-07 18:37:46,624:INFO:SubProcess create_model() called ==================================
2024-04-07 18:37:46,624:INFO:Initializing create_model()
2024-04-07 18:37:46,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03DE7C90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C040BF110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:37:46,625:INFO:Checking exceptions
2024-04-07 18:37:46,625:INFO:Importing libraries
2024-04-07 18:37:46,625:INFO:Copying training dataset
2024-04-07 18:37:46,630:INFO:Defining folds
2024-04-07 18:37:46,630:INFO:Declaring metric variables
2024-04-07 18:37:46,632:INFO:Importing untrained model
2024-04-07 18:37:46,635:INFO:Logistic Regression Imported successfully
2024-04-07 18:37:46,645:INFO:Starting cross validation
2024-04-07 18:37:46,647:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:37:46,756:INFO:Calculating mean and std
2024-04-07 18:37:46,756:INFO:Creating metrics dataframe
2024-04-07 18:37:46,768:INFO:Uploading results into container
2024-04-07 18:37:46,769:INFO:Uploading model into container now
2024-04-07 18:37:46,769:INFO:_master_model_container: 1
2024-04-07 18:37:46,769:INFO:_display_container: 2
2024-04-07 18:37:46,769:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4523, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:37:46,770:INFO:create_model() successfully completed......................................
2024-04-07 18:37:46,910:INFO:SubProcess create_model() end ==================================
2024-04-07 18:37:46,910:INFO:Creating metrics dataframe
2024-04-07 18:37:46,917:INFO:Initializing Decision Tree Classifier
2024-04-07 18:37:46,918:INFO:Total runtime is 0.004970272382100423 minutes
2024-04-07 18:37:46,921:INFO:SubProcess create_model() called ==================================
2024-04-07 18:37:46,921:INFO:Initializing create_model()
2024-04-07 18:37:46,921:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03DE7C90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C040BF110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:37:46,922:INFO:Checking exceptions
2024-04-07 18:37:46,922:INFO:Importing libraries
2024-04-07 18:37:46,922:INFO:Copying training dataset
2024-04-07 18:37:46,927:INFO:Defining folds
2024-04-07 18:37:46,927:INFO:Declaring metric variables
2024-04-07 18:37:46,930:INFO:Importing untrained model
2024-04-07 18:37:46,934:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:37:46,941:INFO:Starting cross validation
2024-04-07 18:37:46,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:37:47,108:INFO:Calculating mean and std
2024-04-07 18:37:47,109:INFO:Creating metrics dataframe
2024-04-07 18:37:47,111:INFO:Uploading results into container
2024-04-07 18:37:47,111:INFO:Uploading model into container now
2024-04-07 18:37:47,112:INFO:_master_model_container: 2
2024-04-07 18:37:47,112:INFO:_display_container: 2
2024-04-07 18:37:47,112:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4523, splitter='best')
2024-04-07 18:37:47,112:INFO:create_model() successfully completed......................................
2024-04-07 18:37:47,247:INFO:SubProcess create_model() end ==================================
2024-04-07 18:37:47,247:INFO:Creating metrics dataframe
2024-04-07 18:37:47,264:INFO:Initializing create_model()
2024-04-07 18:37:47,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03DE7C90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4523, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:37:47,265:INFO:Checking exceptions
2024-04-07 18:37:47,267:INFO:Importing libraries
2024-04-07 18:37:47,267:INFO:Copying training dataset
2024-04-07 18:37:47,272:INFO:Defining folds
2024-04-07 18:37:47,272:INFO:Declaring metric variables
2024-04-07 18:37:47,272:INFO:Importing untrained model
2024-04-07 18:37:47,273:INFO:Declaring custom model
2024-04-07 18:37:47,273:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:37:47,274:INFO:Cross validation set to False
2024-04-07 18:37:47,274:INFO:Fitting Model
2024-04-07 18:37:47,330:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4523, splitter='best')
2024-04-07 18:37:47,331:INFO:create_model() successfully completed......................................
2024-04-07 18:37:47,468:INFO:Initializing create_model()
2024-04-07 18:37:47,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03DE7C90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4523, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:37:47,468:INFO:Checking exceptions
2024-04-07 18:37:47,473:INFO:Importing libraries
2024-04-07 18:37:47,473:INFO:Copying training dataset
2024-04-07 18:37:47,477:INFO:Defining folds
2024-04-07 18:37:47,477:INFO:Declaring metric variables
2024-04-07 18:37:47,477:INFO:Importing untrained model
2024-04-07 18:37:47,477:INFO:Declaring custom model
2024-04-07 18:37:47,477:INFO:Logistic Regression Imported successfully
2024-04-07 18:37:47,478:INFO:Cross validation set to False
2024-04-07 18:37:47,478:INFO:Fitting Model
2024-04-07 18:37:47,501:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4523, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:37:47,502:INFO:create_model() successfully completed......................................
2024-04-07 18:37:47,668:INFO:_master_model_container: 2
2024-04-07 18:37:47,668:INFO:_display_container: 2
2024-04-07 18:37:47,669:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4523, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4523, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:37:47,669:INFO:compare_models() successfully completed......................................
2024-04-07 18:37:47,670:INFO:Initializing plot_model()
2024-04-07 18:37:47,670:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03DE7C90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4523, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:37:47,670:INFO:Checking exceptions
2024-04-07 18:37:47,674:INFO:Preloading libraries
2024-04-07 18:37:47,675:INFO:Copying training dataset
2024-04-07 18:37:47,675:INFO:Plot type: vc
2024-04-07 18:37:47,675:INFO:Determining param_name
2024-04-07 18:37:47,675:INFO:param_name: max_depth
2024-04-07 18:37:47,748:INFO:Fitting Model
2024-04-07 18:37:48,209:INFO:Saving 'Validation Curve.png'
2024-04-07 18:37:48,376:INFO:Visual Rendered Successfully
2024-04-07 18:37:48,506:INFO:plot_model() successfully completed......................................
2024-04-07 18:37:48,507:INFO:Initializing predict_model()
2024-04-07 18:37:48,507:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03DE7C90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4523, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C03D7AB60>)
2024-04-07 18:37:48,507:INFO:Checking exceptions
2024-04-07 18:37:48,507:INFO:Preloading libraries
2024-04-07 18:39:11,372:INFO:PyCaret ClassificationExperiment
2024-04-07 18:39:11,372:INFO:Logging name: clf-default-name
2024-04-07 18:39:11,372:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:39:11,372:INFO:version 3.2.0
2024-04-07 18:39:11,372:INFO:Initializing setup()
2024-04-07 18:39:11,372:INFO:self.USI: 19be
2024-04-07 18:39:11,373:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:39:11,373:INFO:Checking environment
2024-04-07 18:39:11,373:INFO:python_version: 3.11.7
2024-04-07 18:39:11,373:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:39:11,373:INFO:machine: AMD64
2024-04-07 18:39:11,373:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:39:11,373:INFO:Memory: svmem(total=10575405056, available=3417022464, percent=67.7, used=7158382592, free=3417022464)
2024-04-07 18:39:11,373:INFO:Physical Core: 8
2024-04-07 18:39:11,373:INFO:Logical Core: 16
2024-04-07 18:39:11,373:INFO:Checking libraries
2024-04-07 18:39:11,373:INFO:System:
2024-04-07 18:39:11,373:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:39:11,373:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:39:11,373:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:39:11,373:INFO:PyCaret required dependencies:
2024-04-07 18:39:11,373:INFO:                 pip: 23.3.1
2024-04-07 18:39:11,373:INFO:          setuptools: 68.2.2
2024-04-07 18:39:11,373:INFO:             pycaret: 3.2.0
2024-04-07 18:39:11,373:INFO:             IPython: 8.20.0
2024-04-07 18:39:11,373:INFO:          ipywidgets: 7.6.5
2024-04-07 18:39:11,374:INFO:                tqdm: 4.65.0
2024-04-07 18:39:11,374:INFO:               numpy: 1.25.2
2024-04-07 18:39:11,374:INFO:              pandas: 1.5.3
2024-04-07 18:39:11,374:INFO:              jinja2: 3.1.3
2024-04-07 18:39:11,374:INFO:               scipy: 1.10.1
2024-04-07 18:39:11,374:INFO:              joblib: 1.2.0
2024-04-07 18:39:11,374:INFO:             sklearn: 1.2.2
2024-04-07 18:39:11,374:INFO:                pyod: 1.1.3
2024-04-07 18:39:11,374:INFO:            imblearn: 0.11.0
2024-04-07 18:39:11,374:INFO:   category_encoders: 2.6.3
2024-04-07 18:39:11,374:INFO:            lightgbm: 4.3.0
2024-04-07 18:39:11,374:INFO:               numba: 0.59.0
2024-04-07 18:39:11,374:INFO:            requests: 2.31.0
2024-04-07 18:39:11,374:INFO:          matplotlib: 3.6.0
2024-04-07 18:39:11,374:INFO:          scikitplot: 0.3.7
2024-04-07 18:39:11,374:INFO:         yellowbrick: 1.5
2024-04-07 18:39:11,374:INFO:              plotly: 5.9.0
2024-04-07 18:39:11,374:INFO:    plotly-resampler: Not installed
2024-04-07 18:39:11,374:INFO:             kaleido: 0.2.1
2024-04-07 18:39:11,374:INFO:           schemdraw: 0.15
2024-04-07 18:39:11,374:INFO:         statsmodels: 0.14.0
2024-04-07 18:39:11,375:INFO:              sktime: 0.21.1
2024-04-07 18:39:11,375:INFO:               tbats: 1.1.3
2024-04-07 18:39:11,375:INFO:            pmdarima: 2.0.4
2024-04-07 18:39:11,375:INFO:              psutil: 5.9.0
2024-04-07 18:39:11,375:INFO:          markupsafe: 2.1.3
2024-04-07 18:39:11,375:INFO:             pickle5: Not installed
2024-04-07 18:39:11,375:INFO:         cloudpickle: 2.2.1
2024-04-07 18:39:11,375:INFO:         deprecation: 2.1.0
2024-04-07 18:39:11,375:INFO:              xxhash: 3.4.1
2024-04-07 18:39:11,375:INFO:           wurlitzer: Not installed
2024-04-07 18:39:11,375:INFO:PyCaret optional dependencies:
2024-04-07 18:39:11,375:INFO:                shap: 0.44.0
2024-04-07 18:39:11,375:INFO:           interpret: Not installed
2024-04-07 18:39:11,375:INFO:                umap: Not installed
2024-04-07 18:39:11,375:INFO:     ydata_profiling: Not installed
2024-04-07 18:39:11,375:INFO:  explainerdashboard: Not installed
2024-04-07 18:39:11,375:INFO:             autoviz: Not installed
2024-04-07 18:39:11,375:INFO:           fairlearn: Not installed
2024-04-07 18:39:11,375:INFO:          deepchecks: Not installed
2024-04-07 18:39:11,375:INFO:             xgboost: Not installed
2024-04-07 18:39:11,375:INFO:            catboost: 1.2.3
2024-04-07 18:39:11,375:INFO:              kmodes: 0.12.2
2024-04-07 18:39:11,376:INFO:             mlxtend: 0.23.1
2024-04-07 18:39:11,376:INFO:       statsforecast: 1.5.0
2024-04-07 18:39:11,376:INFO:        tune_sklearn: Not installed
2024-04-07 18:39:11,376:INFO:                 ray: Not installed
2024-04-07 18:39:11,376:INFO:            hyperopt: Not installed
2024-04-07 18:39:11,376:INFO:              optuna: Not installed
2024-04-07 18:39:11,376:INFO:               skopt: Not installed
2024-04-07 18:39:11,376:INFO:              mlflow: 2.9.0
2024-04-07 18:39:11,376:INFO:              gradio: Not installed
2024-04-07 18:39:11,376:INFO:             fastapi: Not installed
2024-04-07 18:39:11,376:INFO:             uvicorn: Not installed
2024-04-07 18:39:11,376:INFO:              m2cgen: Not installed
2024-04-07 18:39:11,376:INFO:           evidently: Not installed
2024-04-07 18:39:11,376:INFO:               fugue: 0.8.7
2024-04-07 18:39:11,376:INFO:           streamlit: 1.28.0
2024-04-07 18:39:11,376:INFO:             prophet: Not installed
2024-04-07 18:39:11,376:INFO:None
2024-04-07 18:39:11,376:INFO:Set up data.
2024-04-07 18:39:11,384:INFO:Set up folding strategy.
2024-04-07 18:39:11,384:INFO:Set up train/test split.
2024-04-07 18:39:11,384:INFO:Set up data.
2024-04-07 18:39:11,391:INFO:Set up index.
2024-04-07 18:39:11,391:INFO:Assigning column types.
2024-04-07 18:39:11,396:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:39:11,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:39:11,442:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:39:11,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:39:11,456:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:39:11,519:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:39:11,520:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:39:11,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:39:11,550:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:39:11,550:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:39:11,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:39:11,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:39:11,634:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:39:11,686:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:39:11,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:39:11,714:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:39:11,715:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:39:11,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:39:11,793:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:39:11,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:39:11,856:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:39:11,856:INFO:Preparing preprocessing pipeline...
2024-04-07 18:39:11,856:INFO:Set up simple imputation.
2024-04-07 18:39:11,856:INFO:Set up feature normalization.
2024-04-07 18:39:11,898:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:39:11,903:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:39:11,903:INFO:Creating final display dataframe.
2024-04-07 18:39:11,983:INFO:Setup _display_container:                     Description             Value
0                    Session id              3556
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              19be
2024-04-07 18:39:12,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:39:12,056:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:39:12,141:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:39:12,142:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:39:12,143:INFO:setup() successfully completed in 0.77s...............
2024-04-07 18:39:12,144:INFO:Initializing compare_models()
2024-04-07 18:39:12,144:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C04409710>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C04409710>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:39:12,144:INFO:Checking exceptions
2024-04-07 18:39:12,147:INFO:Preparing display monitor
2024-04-07 18:39:12,174:INFO:Initializing Logistic Regression
2024-04-07 18:39:12,174:INFO:Total runtime is 0.0 minutes
2024-04-07 18:39:12,178:INFO:SubProcess create_model() called ==================================
2024-04-07 18:39:12,178:INFO:Initializing create_model()
2024-04-07 18:39:12,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C04409710>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C03DF0250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:39:12,179:INFO:Checking exceptions
2024-04-07 18:39:12,179:INFO:Importing libraries
2024-04-07 18:39:12,179:INFO:Copying training dataset
2024-04-07 18:39:12,185:INFO:Defining folds
2024-04-07 18:39:12,185:INFO:Declaring metric variables
2024-04-07 18:39:12,190:INFO:Importing untrained model
2024-04-07 18:39:12,193:INFO:Logistic Regression Imported successfully
2024-04-07 18:39:12,202:INFO:Starting cross validation
2024-04-07 18:39:12,203:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:39:19,814:INFO:Calculating mean and std
2024-04-07 18:39:19,816:INFO:Creating metrics dataframe
2024-04-07 18:39:19,821:INFO:Uploading results into container
2024-04-07 18:39:19,823:INFO:Uploading model into container now
2024-04-07 18:39:19,823:INFO:_master_model_container: 1
2024-04-07 18:39:19,824:INFO:_display_container: 2
2024-04-07 18:39:19,824:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3556, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:39:19,825:INFO:create_model() successfully completed......................................
2024-04-07 18:39:20,015:INFO:SubProcess create_model() end ==================================
2024-04-07 18:39:20,015:INFO:Creating metrics dataframe
2024-04-07 18:39:20,023:INFO:Initializing Decision Tree Classifier
2024-04-07 18:39:20,023:INFO:Total runtime is 0.13081601063410442 minutes
2024-04-07 18:39:20,027:INFO:SubProcess create_model() called ==================================
2024-04-07 18:39:20,028:INFO:Initializing create_model()
2024-04-07 18:39:20,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C04409710>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C03DF0250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:39:20,028:INFO:Checking exceptions
2024-04-07 18:39:20,028:INFO:Importing libraries
2024-04-07 18:39:20,028:INFO:Copying training dataset
2024-04-07 18:39:20,034:INFO:Defining folds
2024-04-07 18:39:20,034:INFO:Declaring metric variables
2024-04-07 18:39:20,038:INFO:Importing untrained model
2024-04-07 18:39:20,042:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:39:20,050:INFO:Starting cross validation
2024-04-07 18:39:20,051:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:39:25,844:INFO:Calculating mean and std
2024-04-07 18:39:25,846:INFO:Creating metrics dataframe
2024-04-07 18:39:25,851:INFO:Uploading results into container
2024-04-07 18:39:25,852:INFO:Uploading model into container now
2024-04-07 18:39:25,852:INFO:_master_model_container: 2
2024-04-07 18:39:25,853:INFO:_display_container: 2
2024-04-07 18:39:25,853:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3556, splitter='best')
2024-04-07 18:39:25,853:INFO:create_model() successfully completed......................................
2024-04-07 18:39:26,042:INFO:SubProcess create_model() end ==================================
2024-04-07 18:39:26,043:INFO:Creating metrics dataframe
2024-04-07 18:39:26,060:INFO:Initializing create_model()
2024-04-07 18:39:26,061:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C04409710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3556, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:39:26,061:INFO:Checking exceptions
2024-04-07 18:39:26,062:INFO:Importing libraries
2024-04-07 18:39:26,062:INFO:Copying training dataset
2024-04-07 18:39:26,068:INFO:Defining folds
2024-04-07 18:39:26,068:INFO:Declaring metric variables
2024-04-07 18:39:26,068:INFO:Importing untrained model
2024-04-07 18:39:26,068:INFO:Declaring custom model
2024-04-07 18:39:26,068:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:39:26,069:INFO:Cross validation set to False
2024-04-07 18:39:26,069:INFO:Fitting Model
2024-04-07 18:39:26,126:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3556, splitter='best')
2024-04-07 18:39:26,126:INFO:create_model() successfully completed......................................
2024-04-07 18:39:26,256:INFO:Initializing create_model()
2024-04-07 18:39:26,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C04409710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3556, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:39:26,256:INFO:Checking exceptions
2024-04-07 18:39:26,273:INFO:Importing libraries
2024-04-07 18:39:26,273:INFO:Copying training dataset
2024-04-07 18:39:26,277:INFO:Defining folds
2024-04-07 18:39:26,277:INFO:Declaring metric variables
2024-04-07 18:39:26,278:INFO:Importing untrained model
2024-04-07 18:39:26,278:INFO:Declaring custom model
2024-04-07 18:39:26,278:INFO:Logistic Regression Imported successfully
2024-04-07 18:39:26,280:INFO:Cross validation set to False
2024-04-07 18:39:26,280:INFO:Fitting Model
2024-04-07 18:39:26,301:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3556, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:39:26,302:INFO:create_model() successfully completed......................................
2024-04-07 18:39:26,459:INFO:_master_model_container: 2
2024-04-07 18:39:26,459:INFO:_display_container: 2
2024-04-07 18:39:26,459:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3556, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3556, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:39:26,459:INFO:compare_models() successfully completed......................................
2024-04-07 18:39:26,461:INFO:Initializing plot_model()
2024-04-07 18:39:26,461:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C04409710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3556, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:39:26,461:INFO:Checking exceptions
2024-04-07 18:39:26,465:INFO:Preloading libraries
2024-04-07 18:39:26,466:INFO:Copying training dataset
2024-04-07 18:39:26,466:INFO:Plot type: vc
2024-04-07 18:39:26,467:INFO:Determining param_name
2024-04-07 18:39:26,467:INFO:param_name: max_depth
2024-04-07 18:39:26,538:INFO:Fitting Model
2024-04-07 18:39:26,983:INFO:Saving 'Validation Curve.png'
2024-04-07 18:39:27,141:INFO:Visual Rendered Successfully
2024-04-07 18:39:27,282:INFO:plot_model() successfully completed......................................
2024-04-07 18:39:27,282:INFO:Initializing predict_model()
2024-04-07 18:39:27,283:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C04409710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3556, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C01C86A20>)
2024-04-07 18:39:27,283:INFO:Checking exceptions
2024-04-07 18:39:27,283:INFO:Preloading libraries
2024-04-07 18:42:02,852:INFO:PyCaret ClassificationExperiment
2024-04-07 18:42:02,852:INFO:Logging name: clf-default-name
2024-04-07 18:42:02,852:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:42:02,852:INFO:version 3.2.0
2024-04-07 18:42:02,852:INFO:Initializing setup()
2024-04-07 18:42:02,852:INFO:self.USI: c233
2024-04-07 18:42:02,852:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:42:02,852:INFO:Checking environment
2024-04-07 18:42:02,852:INFO:python_version: 3.11.7
2024-04-07 18:42:02,852:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:42:02,852:INFO:machine: AMD64
2024-04-07 18:42:02,852:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:42:02,852:INFO:Memory: svmem(total=10575405056, available=3399593984, percent=67.9, used=7175811072, free=3399593984)
2024-04-07 18:42:02,852:INFO:Physical Core: 8
2024-04-07 18:42:02,852:INFO:Logical Core: 16
2024-04-07 18:42:02,852:INFO:Checking libraries
2024-04-07 18:42:02,852:INFO:System:
2024-04-07 18:42:02,852:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:42:02,852:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:42:02,852:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:42:02,852:INFO:PyCaret required dependencies:
2024-04-07 18:42:02,852:INFO:                 pip: 23.3.1
2024-04-07 18:42:02,852:INFO:          setuptools: 68.2.2
2024-04-07 18:42:02,852:INFO:             pycaret: 3.2.0
2024-04-07 18:42:02,852:INFO:             IPython: 8.20.0
2024-04-07 18:42:02,852:INFO:          ipywidgets: 7.6.5
2024-04-07 18:42:02,852:INFO:                tqdm: 4.65.0
2024-04-07 18:42:02,852:INFO:               numpy: 1.25.2
2024-04-07 18:42:02,852:INFO:              pandas: 1.5.3
2024-04-07 18:42:02,864:INFO:              jinja2: 3.1.3
2024-04-07 18:42:02,864:INFO:               scipy: 1.10.1
2024-04-07 18:42:02,864:INFO:              joblib: 1.2.0
2024-04-07 18:42:02,864:INFO:             sklearn: 1.2.2
2024-04-07 18:42:02,864:INFO:                pyod: 1.1.3
2024-04-07 18:42:02,864:INFO:            imblearn: 0.11.0
2024-04-07 18:42:02,864:INFO:   category_encoders: 2.6.3
2024-04-07 18:42:02,864:INFO:            lightgbm: 4.3.0
2024-04-07 18:42:02,864:INFO:               numba: 0.59.0
2024-04-07 18:42:02,864:INFO:            requests: 2.31.0
2024-04-07 18:42:02,864:INFO:          matplotlib: 3.6.0
2024-04-07 18:42:02,864:INFO:          scikitplot: 0.3.7
2024-04-07 18:42:02,864:INFO:         yellowbrick: 1.5
2024-04-07 18:42:02,864:INFO:              plotly: 5.9.0
2024-04-07 18:42:02,864:INFO:    plotly-resampler: Not installed
2024-04-07 18:42:02,864:INFO:             kaleido: 0.2.1
2024-04-07 18:42:02,864:INFO:           schemdraw: 0.15
2024-04-07 18:42:02,864:INFO:         statsmodels: 0.14.0
2024-04-07 18:42:02,864:INFO:              sktime: 0.21.1
2024-04-07 18:42:02,864:INFO:               tbats: 1.1.3
2024-04-07 18:42:02,864:INFO:            pmdarima: 2.0.4
2024-04-07 18:42:02,864:INFO:              psutil: 5.9.0
2024-04-07 18:42:02,864:INFO:          markupsafe: 2.1.3
2024-04-07 18:42:02,864:INFO:             pickle5: Not installed
2024-04-07 18:42:02,864:INFO:         cloudpickle: 2.2.1
2024-04-07 18:42:02,864:INFO:         deprecation: 2.1.0
2024-04-07 18:42:02,865:INFO:              xxhash: 3.4.1
2024-04-07 18:42:02,865:INFO:           wurlitzer: Not installed
2024-04-07 18:42:02,865:INFO:PyCaret optional dependencies:
2024-04-07 18:42:02,865:INFO:                shap: 0.44.0
2024-04-07 18:42:02,865:INFO:           interpret: Not installed
2024-04-07 18:42:02,865:INFO:                umap: Not installed
2024-04-07 18:42:02,865:INFO:     ydata_profiling: Not installed
2024-04-07 18:42:02,865:INFO:  explainerdashboard: Not installed
2024-04-07 18:42:02,865:INFO:             autoviz: Not installed
2024-04-07 18:42:02,865:INFO:           fairlearn: Not installed
2024-04-07 18:42:02,865:INFO:          deepchecks: Not installed
2024-04-07 18:42:02,865:INFO:             xgboost: Not installed
2024-04-07 18:42:02,865:INFO:            catboost: 1.2.3
2024-04-07 18:42:02,865:INFO:              kmodes: 0.12.2
2024-04-07 18:42:02,865:INFO:             mlxtend: 0.23.1
2024-04-07 18:42:02,865:INFO:       statsforecast: 1.5.0
2024-04-07 18:42:02,865:INFO:        tune_sklearn: Not installed
2024-04-07 18:42:02,865:INFO:                 ray: Not installed
2024-04-07 18:42:02,865:INFO:            hyperopt: Not installed
2024-04-07 18:42:02,865:INFO:              optuna: Not installed
2024-04-07 18:42:02,865:INFO:               skopt: Not installed
2024-04-07 18:42:02,865:INFO:              mlflow: 2.9.0
2024-04-07 18:42:02,865:INFO:              gradio: Not installed
2024-04-07 18:42:02,865:INFO:             fastapi: Not installed
2024-04-07 18:42:02,865:INFO:             uvicorn: Not installed
2024-04-07 18:42:02,865:INFO:              m2cgen: Not installed
2024-04-07 18:42:02,865:INFO:           evidently: Not installed
2024-04-07 18:42:02,866:INFO:               fugue: 0.8.7
2024-04-07 18:42:02,866:INFO:           streamlit: 1.28.0
2024-04-07 18:42:02,866:INFO:             prophet: Not installed
2024-04-07 18:42:02,866:INFO:None
2024-04-07 18:42:02,866:INFO:Set up data.
2024-04-07 18:42:02,871:INFO:Set up folding strategy.
2024-04-07 18:42:02,871:INFO:Set up train/test split.
2024-04-07 18:42:02,871:INFO:Set up data.
2024-04-07 18:42:02,871:INFO:Set up index.
2024-04-07 18:42:02,871:INFO:Assigning column types.
2024-04-07 18:42:02,881:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:42:02,927:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:42:02,928:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:42:02,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:02,944:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:02,992:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:42:02,992:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:42:03,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:03,025:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:03,025:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:42:03,076:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:42:03,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:03,096:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:03,141:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:42:03,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:03,173:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:03,173:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:42:03,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:03,242:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:03,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:03,321:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:03,321:INFO:Preparing preprocessing pipeline...
2024-04-07 18:42:03,321:INFO:Set up simple imputation.
2024-04-07 18:42:03,321:INFO:Set up feature normalization.
2024-04-07 18:42:03,352:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:42:03,352:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:42:03,352:INFO:Creating final display dataframe.
2024-04-07 18:42:03,431:INFO:Setup _display_container:                     Description             Value
0                    Session id              1988
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              c233
2024-04-07 18:42:03,512:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:03,512:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:03,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:03,590:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:03,591:INFO:setup() successfully completed in 0.74s...............
2024-04-07 18:42:03,592:INFO:Initializing compare_models()
2024-04-07 18:42:03,592:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C090DAA50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C090DAA50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:42:03,592:INFO:Checking exceptions
2024-04-07 18:42:03,593:INFO:Preparing display monitor
2024-04-07 18:42:03,623:INFO:Initializing Logistic Regression
2024-04-07 18:42:03,623:INFO:Total runtime is 0.0 minutes
2024-04-07 18:42:03,630:INFO:SubProcess create_model() called ==================================
2024-04-07 18:42:03,630:INFO:Initializing create_model()
2024-04-07 18:42:03,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C090DAA50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C03DE5FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:42:03,630:INFO:Checking exceptions
2024-04-07 18:42:03,631:INFO:Importing libraries
2024-04-07 18:42:03,631:INFO:Copying training dataset
2024-04-07 18:42:03,638:INFO:Defining folds
2024-04-07 18:42:03,638:INFO:Declaring metric variables
2024-04-07 18:42:03,638:INFO:Importing untrained model
2024-04-07 18:42:03,647:INFO:Logistic Regression Imported successfully
2024-04-07 18:42:03,660:INFO:Starting cross validation
2024-04-07 18:42:03,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:42:11,254:INFO:Calculating mean and std
2024-04-07 18:42:11,254:INFO:Creating metrics dataframe
2024-04-07 18:42:11,254:INFO:Uploading results into container
2024-04-07 18:42:11,270:INFO:Uploading model into container now
2024-04-07 18:42:11,270:INFO:_master_model_container: 1
2024-04-07 18:42:11,270:INFO:_display_container: 2
2024-04-07 18:42:11,270:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1988, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:42:11,270:INFO:create_model() successfully completed......................................
2024-04-07 18:42:11,458:INFO:SubProcess create_model() end ==================================
2024-04-07 18:42:11,458:INFO:Creating metrics dataframe
2024-04-07 18:42:11,475:INFO:Initializing Decision Tree Classifier
2024-04-07 18:42:11,475:INFO:Total runtime is 0.13086357116699218 minutes
2024-04-07 18:42:11,480:INFO:SubProcess create_model() called ==================================
2024-04-07 18:42:11,481:INFO:Initializing create_model()
2024-04-07 18:42:11,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C090DAA50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C03DE5FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:42:11,481:INFO:Checking exceptions
2024-04-07 18:42:11,481:INFO:Importing libraries
2024-04-07 18:42:11,481:INFO:Copying training dataset
2024-04-07 18:42:11,486:INFO:Defining folds
2024-04-07 18:42:11,486:INFO:Declaring metric variables
2024-04-07 18:42:11,488:INFO:Importing untrained model
2024-04-07 18:42:11,497:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:42:11,504:INFO:Starting cross validation
2024-04-07 18:42:11,504:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:42:17,051:INFO:Calculating mean and std
2024-04-07 18:42:17,051:INFO:Creating metrics dataframe
2024-04-07 18:42:17,051:INFO:Uploading results into container
2024-04-07 18:42:17,066:INFO:Uploading model into container now
2024-04-07 18:42:17,066:INFO:_master_model_container: 2
2024-04-07 18:42:17,066:INFO:_display_container: 2
2024-04-07 18:42:17,066:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1988, splitter='best')
2024-04-07 18:42:17,066:INFO:create_model() successfully completed......................................
2024-04-07 18:42:17,264:INFO:SubProcess create_model() end ==================================
2024-04-07 18:42:17,264:INFO:Creating metrics dataframe
2024-04-07 18:42:17,287:INFO:Initializing create_model()
2024-04-07 18:42:17,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C090DAA50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1988, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:42:17,288:INFO:Checking exceptions
2024-04-07 18:42:17,290:INFO:Importing libraries
2024-04-07 18:42:17,290:INFO:Copying training dataset
2024-04-07 18:42:17,300:INFO:Defining folds
2024-04-07 18:42:17,300:INFO:Declaring metric variables
2024-04-07 18:42:17,300:INFO:Importing untrained model
2024-04-07 18:42:17,300:INFO:Declaring custom model
2024-04-07 18:42:17,300:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:42:17,303:INFO:Cross validation set to False
2024-04-07 18:42:17,303:INFO:Fitting Model
2024-04-07 18:42:17,360:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1988, splitter='best')
2024-04-07 18:42:17,360:INFO:create_model() successfully completed......................................
2024-04-07 18:42:17,502:INFO:Initializing create_model()
2024-04-07 18:42:17,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C090DAA50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1988, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:42:17,502:INFO:Checking exceptions
2024-04-07 18:42:17,502:INFO:Importing libraries
2024-04-07 18:42:17,502:INFO:Copying training dataset
2024-04-07 18:42:17,521:INFO:Defining folds
2024-04-07 18:42:17,521:INFO:Declaring metric variables
2024-04-07 18:42:17,522:INFO:Importing untrained model
2024-04-07 18:42:17,522:INFO:Declaring custom model
2024-04-07 18:42:17,522:INFO:Logistic Regression Imported successfully
2024-04-07 18:42:17,523:INFO:Cross validation set to False
2024-04-07 18:42:17,523:INFO:Fitting Model
2024-04-07 18:42:17,548:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1988, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:42:17,548:INFO:create_model() successfully completed......................................
2024-04-07 18:42:17,711:INFO:_master_model_container: 2
2024-04-07 18:42:17,711:INFO:_display_container: 2
2024-04-07 18:42:17,711:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1988, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1988, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:42:17,711:INFO:compare_models() successfully completed......................................
2024-04-07 18:42:17,711:INFO:Initializing plot_model()
2024-04-07 18:42:17,711:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C090DAA50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1988, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:42:17,711:INFO:Checking exceptions
2024-04-07 18:42:17,711:INFO:Preloading libraries
2024-04-07 18:42:17,711:INFO:Copying training dataset
2024-04-07 18:42:17,711:INFO:Plot type: vc
2024-04-07 18:42:17,711:INFO:Determining param_name
2024-04-07 18:42:17,711:INFO:param_name: max_depth
2024-04-07 18:42:17,793:INFO:Fitting Model
2024-04-07 18:42:18,222:INFO:Saving 'Validation Curve.png'
2024-04-07 18:42:18,380:INFO:Visual Rendered Successfully
2024-04-07 18:42:18,545:INFO:plot_model() successfully completed......................................
2024-04-07 18:42:18,546:INFO:Initializing predict_model()
2024-04-07 18:42:18,547:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C090DAA50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1988, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C020484A0>)
2024-04-07 18:42:18,547:INFO:Checking exceptions
2024-04-07 18:42:18,547:INFO:Preloading libraries
2024-04-07 18:42:43,151:INFO:PyCaret ClassificationExperiment
2024-04-07 18:42:43,151:INFO:Logging name: clf-default-name
2024-04-07 18:42:43,151:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:42:43,151:INFO:version 3.2.0
2024-04-07 18:42:43,151:INFO:Initializing setup()
2024-04-07 18:42:43,151:INFO:self.USI: a7d7
2024-04-07 18:42:43,151:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:42:43,151:INFO:Checking environment
2024-04-07 18:42:43,152:INFO:python_version: 3.11.7
2024-04-07 18:42:43,152:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:42:43,152:INFO:machine: AMD64
2024-04-07 18:42:43,152:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:42:43,152:INFO:Memory: svmem(total=10575405056, available=854405120, percent=91.9, used=9720999936, free=854405120)
2024-04-07 18:42:43,152:INFO:Physical Core: 8
2024-04-07 18:42:43,152:INFO:Logical Core: 16
2024-04-07 18:42:43,152:INFO:Checking libraries
2024-04-07 18:42:43,152:INFO:System:
2024-04-07 18:42:43,152:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:42:43,152:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:42:43,152:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:42:43,152:INFO:PyCaret required dependencies:
2024-04-07 18:42:43,152:INFO:                 pip: 23.3.1
2024-04-07 18:42:43,152:INFO:          setuptools: 68.2.2
2024-04-07 18:42:43,152:INFO:             pycaret: 3.2.0
2024-04-07 18:42:43,152:INFO:             IPython: 8.20.0
2024-04-07 18:42:43,152:INFO:          ipywidgets: 7.6.5
2024-04-07 18:42:43,152:INFO:                tqdm: 4.65.0
2024-04-07 18:42:43,152:INFO:               numpy: 1.25.2
2024-04-07 18:42:43,152:INFO:              pandas: 1.5.3
2024-04-07 18:42:43,152:INFO:              jinja2: 3.1.3
2024-04-07 18:42:43,152:INFO:               scipy: 1.10.1
2024-04-07 18:42:43,152:INFO:              joblib: 1.2.0
2024-04-07 18:42:43,152:INFO:             sklearn: 1.2.2
2024-04-07 18:42:43,152:INFO:                pyod: 1.1.3
2024-04-07 18:42:43,152:INFO:            imblearn: 0.11.0
2024-04-07 18:42:43,152:INFO:   category_encoders: 2.6.3
2024-04-07 18:42:43,152:INFO:            lightgbm: 4.3.0
2024-04-07 18:42:43,152:INFO:               numba: 0.59.0
2024-04-07 18:42:43,152:INFO:            requests: 2.31.0
2024-04-07 18:42:43,152:INFO:          matplotlib: 3.6.0
2024-04-07 18:42:43,152:INFO:          scikitplot: 0.3.7
2024-04-07 18:42:43,152:INFO:         yellowbrick: 1.5
2024-04-07 18:42:43,152:INFO:              plotly: 5.9.0
2024-04-07 18:42:43,152:INFO:    plotly-resampler: Not installed
2024-04-07 18:42:43,152:INFO:             kaleido: 0.2.1
2024-04-07 18:42:43,152:INFO:           schemdraw: 0.15
2024-04-07 18:42:43,152:INFO:         statsmodels: 0.14.0
2024-04-07 18:42:43,152:INFO:              sktime: 0.21.1
2024-04-07 18:42:43,152:INFO:               tbats: 1.1.3
2024-04-07 18:42:43,152:INFO:            pmdarima: 2.0.4
2024-04-07 18:42:43,152:INFO:              psutil: 5.9.0
2024-04-07 18:42:43,152:INFO:          markupsafe: 2.1.3
2024-04-07 18:42:43,152:INFO:             pickle5: Not installed
2024-04-07 18:42:43,152:INFO:         cloudpickle: 2.2.1
2024-04-07 18:42:43,152:INFO:         deprecation: 2.1.0
2024-04-07 18:42:43,152:INFO:              xxhash: 3.4.1
2024-04-07 18:42:43,152:INFO:           wurlitzer: Not installed
2024-04-07 18:42:43,152:INFO:PyCaret optional dependencies:
2024-04-07 18:42:43,155:INFO:                shap: 0.44.0
2024-04-07 18:42:43,155:INFO:           interpret: Not installed
2024-04-07 18:42:43,155:INFO:                umap: Not installed
2024-04-07 18:42:43,155:INFO:     ydata_profiling: Not installed
2024-04-07 18:42:43,155:INFO:  explainerdashboard: Not installed
2024-04-07 18:42:43,155:INFO:             autoviz: Not installed
2024-04-07 18:42:43,155:INFO:           fairlearn: Not installed
2024-04-07 18:42:43,155:INFO:          deepchecks: Not installed
2024-04-07 18:42:43,155:INFO:             xgboost: Not installed
2024-04-07 18:42:43,155:INFO:            catboost: 1.2.3
2024-04-07 18:42:43,155:INFO:              kmodes: 0.12.2
2024-04-07 18:42:43,155:INFO:             mlxtend: 0.23.1
2024-04-07 18:42:43,155:INFO:       statsforecast: 1.5.0
2024-04-07 18:42:43,155:INFO:        tune_sklearn: Not installed
2024-04-07 18:42:43,155:INFO:                 ray: Not installed
2024-04-07 18:42:43,155:INFO:            hyperopt: Not installed
2024-04-07 18:42:43,155:INFO:              optuna: Not installed
2024-04-07 18:42:43,155:INFO:               skopt: Not installed
2024-04-07 18:42:43,155:INFO:              mlflow: 2.9.0
2024-04-07 18:42:43,155:INFO:              gradio: Not installed
2024-04-07 18:42:43,155:INFO:             fastapi: Not installed
2024-04-07 18:42:43,155:INFO:             uvicorn: Not installed
2024-04-07 18:42:43,155:INFO:              m2cgen: Not installed
2024-04-07 18:42:43,155:INFO:           evidently: Not installed
2024-04-07 18:42:43,155:INFO:               fugue: 0.8.7
2024-04-07 18:42:43,155:INFO:           streamlit: 1.28.0
2024-04-07 18:42:43,155:INFO:             prophet: Not installed
2024-04-07 18:42:43,155:INFO:None
2024-04-07 18:42:43,155:INFO:Set up data.
2024-04-07 18:42:43,161:INFO:Set up folding strategy.
2024-04-07 18:42:43,161:INFO:Set up train/test split.
2024-04-07 18:42:43,161:INFO:Set up data.
2024-04-07 18:42:43,168:INFO:Set up index.
2024-04-07 18:42:43,168:INFO:Assigning column types.
2024-04-07 18:42:43,170:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:42:43,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:42:43,218:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:42:43,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:43,248:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:43,292:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:42:43,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:42:43,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:43,322:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:43,322:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:42:43,370:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:42:43,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:43,396:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:43,441:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:42:43,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:43,473:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:43,473:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:42:43,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:43,546:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:43,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:43,624:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:43,626:INFO:Preparing preprocessing pipeline...
2024-04-07 18:42:43,626:INFO:Set up simple imputation.
2024-04-07 18:42:43,626:INFO:Set up feature normalization.
2024-04-07 18:42:43,655:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:42:43,660:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:42:43,660:INFO:Creating final display dataframe.
2024-04-07 18:42:43,743:INFO:Setup _display_container:                     Description             Value
0                    Session id              3055
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a7d7
2024-04-07 18:42:43,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:43,826:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:43,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:42:43,901:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:42:43,902:INFO:setup() successfully completed in 0.75s...............
2024-04-07 18:42:43,903:INFO:Initializing compare_models()
2024-04-07 18:42:43,903:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C08F0E590>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C08F0E590>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:42:43,903:INFO:Checking exceptions
2024-04-07 18:42:43,906:INFO:Preparing display monitor
2024-04-07 18:42:43,931:INFO:Initializing Logistic Regression
2024-04-07 18:42:43,933:INFO:Total runtime is 3.4932295481363935e-05 minutes
2024-04-07 18:42:43,935:INFO:SubProcess create_model() called ==================================
2024-04-07 18:42:43,935:INFO:Initializing create_model()
2024-04-07 18:42:43,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C08F0E590>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C0919C5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:42:43,935:INFO:Checking exceptions
2024-04-07 18:42:43,935:INFO:Importing libraries
2024-04-07 18:42:43,935:INFO:Copying training dataset
2024-04-07 18:42:43,943:INFO:Defining folds
2024-04-07 18:42:43,944:INFO:Declaring metric variables
2024-04-07 18:42:43,948:INFO:Importing untrained model
2024-04-07 18:42:43,948:INFO:Logistic Regression Imported successfully
2024-04-07 18:42:43,960:INFO:Starting cross validation
2024-04-07 18:42:43,961:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:42:44,083:INFO:Calculating mean and std
2024-04-07 18:42:44,083:INFO:Creating metrics dataframe
2024-04-07 18:42:44,083:INFO:Uploading results into container
2024-04-07 18:42:44,083:INFO:Uploading model into container now
2024-04-07 18:42:44,083:INFO:_master_model_container: 1
2024-04-07 18:42:44,083:INFO:_display_container: 2
2024-04-07 18:42:44,083:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3055, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:42:44,083:INFO:create_model() successfully completed......................................
2024-04-07 18:42:44,247:INFO:SubProcess create_model() end ==================================
2024-04-07 18:42:44,247:INFO:Creating metrics dataframe
2024-04-07 18:42:44,247:INFO:Initializing Decision Tree Classifier
2024-04-07 18:42:44,247:INFO:Total runtime is 0.005263125896453858 minutes
2024-04-07 18:42:44,261:INFO:SubProcess create_model() called ==================================
2024-04-07 18:42:44,262:INFO:Initializing create_model()
2024-04-07 18:42:44,262:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C08F0E590>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C0919C5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:42:44,262:INFO:Checking exceptions
2024-04-07 18:42:44,262:INFO:Importing libraries
2024-04-07 18:42:44,262:INFO:Copying training dataset
2024-04-07 18:42:44,263:INFO:Defining folds
2024-04-07 18:42:44,263:INFO:Declaring metric variables
2024-04-07 18:42:44,263:INFO:Importing untrained model
2024-04-07 18:42:44,263:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:42:44,281:INFO:Starting cross validation
2024-04-07 18:42:44,282:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:42:44,429:INFO:Calculating mean and std
2024-04-07 18:42:44,429:INFO:Creating metrics dataframe
2024-04-07 18:42:44,429:INFO:Uploading results into container
2024-04-07 18:42:44,429:INFO:Uploading model into container now
2024-04-07 18:42:44,429:INFO:_master_model_container: 2
2024-04-07 18:42:44,429:INFO:_display_container: 2
2024-04-07 18:42:44,429:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3055, splitter='best')
2024-04-07 18:42:44,429:INFO:create_model() successfully completed......................................
2024-04-07 18:42:44,583:INFO:SubProcess create_model() end ==================================
2024-04-07 18:42:44,583:INFO:Creating metrics dataframe
2024-04-07 18:42:44,596:INFO:Initializing create_model()
2024-04-07 18:42:44,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C08F0E590>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3055, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:42:44,610:INFO:Checking exceptions
2024-04-07 18:42:44,611:INFO:Importing libraries
2024-04-07 18:42:44,611:INFO:Copying training dataset
2024-04-07 18:42:44,617:INFO:Defining folds
2024-04-07 18:42:44,617:INFO:Declaring metric variables
2024-04-07 18:42:44,617:INFO:Importing untrained model
2024-04-07 18:42:44,617:INFO:Declaring custom model
2024-04-07 18:42:44,619:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:42:44,619:INFO:Cross validation set to False
2024-04-07 18:42:44,619:INFO:Fitting Model
2024-04-07 18:42:44,674:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3055, splitter='best')
2024-04-07 18:42:44,674:INFO:create_model() successfully completed......................................
2024-04-07 18:42:44,826:INFO:Initializing create_model()
2024-04-07 18:42:44,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C08F0E590>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3055, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:42:44,828:INFO:Checking exceptions
2024-04-07 18:42:44,829:INFO:Importing libraries
2024-04-07 18:42:44,829:INFO:Copying training dataset
2024-04-07 18:42:44,829:INFO:Defining folds
2024-04-07 18:42:44,829:INFO:Declaring metric variables
2024-04-07 18:42:44,829:INFO:Importing untrained model
2024-04-07 18:42:44,829:INFO:Declaring custom model
2024-04-07 18:42:44,829:INFO:Logistic Regression Imported successfully
2024-04-07 18:42:44,829:INFO:Cross validation set to False
2024-04-07 18:42:44,829:INFO:Fitting Model
2024-04-07 18:42:44,860:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3055, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:42:44,860:INFO:create_model() successfully completed......................................
2024-04-07 18:42:45,018:INFO:_master_model_container: 2
2024-04-07 18:42:45,026:INFO:_display_container: 2
2024-04-07 18:42:45,026:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3055, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3055, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:42:45,026:INFO:compare_models() successfully completed......................................
2024-04-07 18:42:45,027:INFO:Initializing plot_model()
2024-04-07 18:42:45,027:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C08F0E590>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3055, splitter='best'), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-07 18:42:45,027:INFO:Checking exceptions
2024-04-07 18:42:45,032:INFO:Preloading libraries
2024-04-07 18:42:45,032:INFO:Copying training dataset
2024-04-07 18:42:45,032:INFO:Plot type: vc
2024-04-07 18:42:45,032:INFO:Determining param_name
2024-04-07 18:42:45,032:INFO:param_name: max_depth
2024-04-07 18:42:45,096:INFO:Fitting Model
2024-04-07 18:42:45,546:INFO:Saving 'Validation Curve.png'
2024-04-07 18:42:45,711:INFO:Visual Rendered Successfully
2024-04-07 18:42:45,855:INFO:plot_model() successfully completed......................................
2024-04-07 18:42:45,859:INFO:Initializing predict_model()
2024-04-07 18:42:45,859:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C08F0E590>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3055, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C02073740>)
2024-04-07 18:42:45,859:INFO:Checking exceptions
2024-04-07 18:42:45,859:INFO:Preloading libraries
2024-04-07 18:43:28,213:INFO:PyCaret ClassificationExperiment
2024-04-07 18:43:28,213:INFO:Logging name: clf-default-name
2024-04-07 18:43:28,213:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:43:28,213:INFO:version 3.2.0
2024-04-07 18:43:28,213:INFO:Initializing setup()
2024-04-07 18:43:28,213:INFO:self.USI: 1eec
2024-04-07 18:43:28,213:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:43:28,213:INFO:Checking environment
2024-04-07 18:43:28,213:INFO:python_version: 3.11.7
2024-04-07 18:43:28,213:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:43:28,217:INFO:machine: AMD64
2024-04-07 18:43:28,217:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:43:28,217:INFO:Memory: svmem(total=10575405056, available=3389771776, percent=67.9, used=7185633280, free=3389771776)
2024-04-07 18:43:28,217:INFO:Physical Core: 8
2024-04-07 18:43:28,217:INFO:Logical Core: 16
2024-04-07 18:43:28,217:INFO:Checking libraries
2024-04-07 18:43:28,217:INFO:System:
2024-04-07 18:43:28,217:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:43:28,217:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:43:28,217:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:43:28,217:INFO:PyCaret required dependencies:
2024-04-07 18:43:28,217:INFO:                 pip: 23.3.1
2024-04-07 18:43:28,217:INFO:          setuptools: 68.2.2
2024-04-07 18:43:28,217:INFO:             pycaret: 3.2.0
2024-04-07 18:43:28,217:INFO:             IPython: 8.20.0
2024-04-07 18:43:28,217:INFO:          ipywidgets: 7.6.5
2024-04-07 18:43:28,217:INFO:                tqdm: 4.65.0
2024-04-07 18:43:28,217:INFO:               numpy: 1.25.2
2024-04-07 18:43:28,217:INFO:              pandas: 1.5.3
2024-04-07 18:43:28,217:INFO:              jinja2: 3.1.3
2024-04-07 18:43:28,217:INFO:               scipy: 1.10.1
2024-04-07 18:43:28,217:INFO:              joblib: 1.2.0
2024-04-07 18:43:28,217:INFO:             sklearn: 1.2.2
2024-04-07 18:43:28,217:INFO:                pyod: 1.1.3
2024-04-07 18:43:28,217:INFO:            imblearn: 0.11.0
2024-04-07 18:43:28,217:INFO:   category_encoders: 2.6.3
2024-04-07 18:43:28,217:INFO:            lightgbm: 4.3.0
2024-04-07 18:43:28,217:INFO:               numba: 0.59.0
2024-04-07 18:43:28,217:INFO:            requests: 2.31.0
2024-04-07 18:43:28,217:INFO:          matplotlib: 3.6.0
2024-04-07 18:43:28,217:INFO:          scikitplot: 0.3.7
2024-04-07 18:43:28,217:INFO:         yellowbrick: 1.5
2024-04-07 18:43:28,217:INFO:              plotly: 5.9.0
2024-04-07 18:43:28,217:INFO:    plotly-resampler: Not installed
2024-04-07 18:43:28,217:INFO:             kaleido: 0.2.1
2024-04-07 18:43:28,217:INFO:           schemdraw: 0.15
2024-04-07 18:43:28,217:INFO:         statsmodels: 0.14.0
2024-04-07 18:43:28,217:INFO:              sktime: 0.21.1
2024-04-07 18:43:28,217:INFO:               tbats: 1.1.3
2024-04-07 18:43:28,217:INFO:            pmdarima: 2.0.4
2024-04-07 18:43:28,217:INFO:              psutil: 5.9.0
2024-04-07 18:43:28,217:INFO:          markupsafe: 2.1.3
2024-04-07 18:43:28,217:INFO:             pickle5: Not installed
2024-04-07 18:43:28,217:INFO:         cloudpickle: 2.2.1
2024-04-07 18:43:28,217:INFO:         deprecation: 2.1.0
2024-04-07 18:43:28,217:INFO:              xxhash: 3.4.1
2024-04-07 18:43:28,217:INFO:           wurlitzer: Not installed
2024-04-07 18:43:28,217:INFO:PyCaret optional dependencies:
2024-04-07 18:43:28,217:INFO:                shap: 0.44.0
2024-04-07 18:43:28,217:INFO:           interpret: Not installed
2024-04-07 18:43:28,217:INFO:                umap: Not installed
2024-04-07 18:43:28,217:INFO:     ydata_profiling: Not installed
2024-04-07 18:43:28,220:INFO:  explainerdashboard: Not installed
2024-04-07 18:43:28,220:INFO:             autoviz: Not installed
2024-04-07 18:43:28,220:INFO:           fairlearn: Not installed
2024-04-07 18:43:28,220:INFO:          deepchecks: Not installed
2024-04-07 18:43:28,220:INFO:             xgboost: Not installed
2024-04-07 18:43:28,220:INFO:            catboost: 1.2.3
2024-04-07 18:43:28,220:INFO:              kmodes: 0.12.2
2024-04-07 18:43:28,220:INFO:             mlxtend: 0.23.1
2024-04-07 18:43:28,220:INFO:       statsforecast: 1.5.0
2024-04-07 18:43:28,220:INFO:        tune_sklearn: Not installed
2024-04-07 18:43:28,220:INFO:                 ray: Not installed
2024-04-07 18:43:28,220:INFO:            hyperopt: Not installed
2024-04-07 18:43:28,220:INFO:              optuna: Not installed
2024-04-07 18:43:28,220:INFO:               skopt: Not installed
2024-04-07 18:43:28,220:INFO:              mlflow: 2.9.0
2024-04-07 18:43:28,220:INFO:              gradio: Not installed
2024-04-07 18:43:28,220:INFO:             fastapi: Not installed
2024-04-07 18:43:28,220:INFO:             uvicorn: Not installed
2024-04-07 18:43:28,220:INFO:              m2cgen: Not installed
2024-04-07 18:43:28,220:INFO:           evidently: Not installed
2024-04-07 18:43:28,220:INFO:               fugue: 0.8.7
2024-04-07 18:43:28,220:INFO:           streamlit: 1.28.0
2024-04-07 18:43:28,220:INFO:             prophet: Not installed
2024-04-07 18:43:28,220:INFO:None
2024-04-07 18:43:28,220:INFO:Set up data.
2024-04-07 18:43:28,228:INFO:Set up folding strategy.
2024-04-07 18:43:28,228:INFO:Set up train/test split.
2024-04-07 18:43:28,228:INFO:Set up data.
2024-04-07 18:43:28,229:INFO:Set up index.
2024-04-07 18:43:28,229:INFO:Assigning column types.
2024-04-07 18:43:28,238:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:43:28,288:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:43:28,289:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:43:28,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:43:28,317:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:43:28,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:43:28,360:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:43:28,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:43:28,390:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:43:28,390:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:43:28,443:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:43:28,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:43:28,472:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:43:28,516:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:43:28,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:43:28,547:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:43:28,547:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:43:28,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:43:28,625:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:43:28,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:43:28,697:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:43:28,697:INFO:Preparing preprocessing pipeline...
2024-04-07 18:43:28,697:INFO:Set up simple imputation.
2024-04-07 18:43:28,697:INFO:Set up feature normalization.
2024-04-07 18:43:28,729:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:43:28,733:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:43:28,733:INFO:Creating final display dataframe.
2024-04-07 18:43:28,813:INFO:Setup _display_container:                     Description             Value
0                    Session id               842
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              1eec
2024-04-07 18:43:28,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:43:28,893:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:43:28,974:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:43:28,974:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:43:28,977:INFO:setup() successfully completed in 0.76s...............
2024-04-07 18:43:28,978:INFO:Initializing compare_models()
2024-04-07 18:43:28,978:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03D85790>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03D85790>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:43:28,978:INFO:Checking exceptions
2024-04-07 18:43:28,983:INFO:Preparing display monitor
2024-04-07 18:43:29,012:INFO:Initializing Logistic Regression
2024-04-07 18:43:29,012:INFO:Total runtime is 0.0 minutes
2024-04-07 18:43:29,017:INFO:SubProcess create_model() called ==================================
2024-04-07 18:43:29,017:INFO:Initializing create_model()
2024-04-07 18:43:29,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03D85790>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C04332E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:43:29,017:INFO:Checking exceptions
2024-04-07 18:43:29,017:INFO:Importing libraries
2024-04-07 18:43:29,017:INFO:Copying training dataset
2024-04-07 18:43:29,026:INFO:Defining folds
2024-04-07 18:43:29,026:INFO:Declaring metric variables
2024-04-07 18:43:29,030:INFO:Importing untrained model
2024-04-07 18:43:29,035:INFO:Logistic Regression Imported successfully
2024-04-07 18:43:29,042:INFO:Starting cross validation
2024-04-07 18:43:29,043:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:43:36,558:INFO:Calculating mean and std
2024-04-07 18:43:36,558:INFO:Creating metrics dataframe
2024-04-07 18:43:36,564:INFO:Uploading results into container
2024-04-07 18:43:36,565:INFO:Uploading model into container now
2024-04-07 18:43:36,567:INFO:_master_model_container: 1
2024-04-07 18:43:36,567:INFO:_display_container: 2
2024-04-07 18:43:36,568:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=842, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:43:36,568:INFO:create_model() successfully completed......................................
2024-04-07 18:43:36,773:INFO:SubProcess create_model() end ==================================
2024-04-07 18:43:36,773:INFO:Creating metrics dataframe
2024-04-07 18:43:36,783:INFO:Initializing Decision Tree Classifier
2024-04-07 18:43:36,783:INFO:Total runtime is 0.1295152982076009 minutes
2024-04-07 18:43:36,791:INFO:SubProcess create_model() called ==================================
2024-04-07 18:43:36,792:INFO:Initializing create_model()
2024-04-07 18:43:36,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03D85790>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C04332E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:43:36,792:INFO:Checking exceptions
2024-04-07 18:43:36,793:INFO:Importing libraries
2024-04-07 18:43:36,793:INFO:Copying training dataset
2024-04-07 18:43:36,798:INFO:Defining folds
2024-04-07 18:43:36,798:INFO:Declaring metric variables
2024-04-07 18:43:36,800:INFO:Importing untrained model
2024-04-07 18:43:36,810:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:43:36,818:INFO:Starting cross validation
2024-04-07 18:43:36,820:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:43:42,372:INFO:Calculating mean and std
2024-04-07 18:43:42,372:INFO:Creating metrics dataframe
2024-04-07 18:43:42,372:INFO:Uploading results into container
2024-04-07 18:43:42,372:INFO:Uploading model into container now
2024-04-07 18:43:42,385:INFO:_master_model_container: 2
2024-04-07 18:43:42,385:INFO:_display_container: 2
2024-04-07 18:43:42,387:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=842, splitter='best')
2024-04-07 18:43:42,387:INFO:create_model() successfully completed......................................
2024-04-07 18:43:42,578:INFO:SubProcess create_model() end ==================================
2024-04-07 18:43:42,578:INFO:Creating metrics dataframe
2024-04-07 18:43:42,595:INFO:Initializing create_model()
2024-04-07 18:43:42,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03D85790>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=842, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:43:42,595:INFO:Checking exceptions
2024-04-07 18:43:42,597:INFO:Importing libraries
2024-04-07 18:43:42,598:INFO:Copying training dataset
2024-04-07 18:43:42,604:INFO:Defining folds
2024-04-07 18:43:42,604:INFO:Declaring metric variables
2024-04-07 18:43:42,604:INFO:Importing untrained model
2024-04-07 18:43:42,604:INFO:Declaring custom model
2024-04-07 18:43:42,604:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:43:42,606:INFO:Cross validation set to False
2024-04-07 18:43:42,606:INFO:Fitting Model
2024-04-07 18:43:42,657:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=842, splitter='best')
2024-04-07 18:43:42,657:INFO:create_model() successfully completed......................................
2024-04-07 18:43:42,808:INFO:Initializing create_model()
2024-04-07 18:43:42,808:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03D85790>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=842, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:43:42,809:INFO:Checking exceptions
2024-04-07 18:43:42,810:INFO:Importing libraries
2024-04-07 18:43:42,810:INFO:Copying training dataset
2024-04-07 18:43:42,814:INFO:Defining folds
2024-04-07 18:43:42,814:INFO:Declaring metric variables
2024-04-07 18:43:42,814:INFO:Importing untrained model
2024-04-07 18:43:42,814:INFO:Declaring custom model
2024-04-07 18:43:42,814:INFO:Logistic Regression Imported successfully
2024-04-07 18:43:42,814:INFO:Cross validation set to False
2024-04-07 18:43:42,814:INFO:Fitting Model
2024-04-07 18:43:42,843:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=842, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:43:42,843:INFO:create_model() successfully completed......................................
2024-04-07 18:43:43,011:INFO:_master_model_container: 2
2024-04-07 18:43:43,011:INFO:_display_container: 2
2024-04-07 18:43:43,011:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=842, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=842, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:43:43,011:INFO:compare_models() successfully completed......................................
2024-04-07 18:43:43,011:INFO:Initializing predict_model()
2024-04-07 18:43:43,011:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C03D85790>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=842, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C7FA444A0>)
2024-04-07 18:43:43,011:INFO:Checking exceptions
2024-04-07 18:43:43,011:INFO:Preloading libraries
2024-04-07 18:44:35,409:INFO:PyCaret ClassificationExperiment
2024-04-07 18:44:35,410:INFO:Logging name: clf-default-name
2024-04-07 18:44:35,410:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:44:35,410:INFO:version 3.2.0
2024-04-07 18:44:35,410:INFO:Initializing setup()
2024-04-07 18:44:35,410:INFO:self.USI: 90b2
2024-04-07 18:44:35,410:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:44:35,410:INFO:Checking environment
2024-04-07 18:44:35,410:INFO:python_version: 3.11.7
2024-04-07 18:44:35,410:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:44:35,410:INFO:machine: AMD64
2024-04-07 18:44:35,410:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:44:35,410:INFO:Memory: svmem(total=10575405056, available=3562332160, percent=66.3, used=7013072896, free=3562332160)
2024-04-07 18:44:35,410:INFO:Physical Core: 8
2024-04-07 18:44:35,410:INFO:Logical Core: 16
2024-04-07 18:44:35,411:INFO:Checking libraries
2024-04-07 18:44:35,411:INFO:System:
2024-04-07 18:44:35,411:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:44:35,411:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:44:35,411:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:44:35,411:INFO:PyCaret required dependencies:
2024-04-07 18:44:35,411:INFO:                 pip: 23.3.1
2024-04-07 18:44:35,411:INFO:          setuptools: 68.2.2
2024-04-07 18:44:35,411:INFO:             pycaret: 3.2.0
2024-04-07 18:44:35,411:INFO:             IPython: 8.20.0
2024-04-07 18:44:35,411:INFO:          ipywidgets: 7.6.5
2024-04-07 18:44:35,411:INFO:                tqdm: 4.65.0
2024-04-07 18:44:35,411:INFO:               numpy: 1.25.2
2024-04-07 18:44:35,411:INFO:              pandas: 1.5.3
2024-04-07 18:44:35,411:INFO:              jinja2: 3.1.3
2024-04-07 18:44:35,411:INFO:               scipy: 1.10.1
2024-04-07 18:44:35,411:INFO:              joblib: 1.2.0
2024-04-07 18:44:35,411:INFO:             sklearn: 1.2.2
2024-04-07 18:44:35,411:INFO:                pyod: 1.1.3
2024-04-07 18:44:35,411:INFO:            imblearn: 0.11.0
2024-04-07 18:44:35,412:INFO:   category_encoders: 2.6.3
2024-04-07 18:44:35,412:INFO:            lightgbm: 4.3.0
2024-04-07 18:44:35,412:INFO:               numba: 0.59.0
2024-04-07 18:44:35,412:INFO:            requests: 2.31.0
2024-04-07 18:44:35,412:INFO:          matplotlib: 3.6.0
2024-04-07 18:44:35,412:INFO:          scikitplot: 0.3.7
2024-04-07 18:44:35,412:INFO:         yellowbrick: 1.5
2024-04-07 18:44:35,412:INFO:              plotly: 5.9.0
2024-04-07 18:44:35,412:INFO:    plotly-resampler: Not installed
2024-04-07 18:44:35,412:INFO:             kaleido: 0.2.1
2024-04-07 18:44:35,412:INFO:           schemdraw: 0.15
2024-04-07 18:44:35,412:INFO:         statsmodels: 0.14.0
2024-04-07 18:44:35,412:INFO:              sktime: 0.21.1
2024-04-07 18:44:35,412:INFO:               tbats: 1.1.3
2024-04-07 18:44:35,412:INFO:            pmdarima: 2.0.4
2024-04-07 18:44:35,412:INFO:              psutil: 5.9.0
2024-04-07 18:44:35,412:INFO:          markupsafe: 2.1.3
2024-04-07 18:44:35,412:INFO:             pickle5: Not installed
2024-04-07 18:44:35,413:INFO:         cloudpickle: 2.2.1
2024-04-07 18:44:35,413:INFO:         deprecation: 2.1.0
2024-04-07 18:44:35,413:INFO:              xxhash: 3.4.1
2024-04-07 18:44:35,413:INFO:           wurlitzer: Not installed
2024-04-07 18:44:35,413:INFO:PyCaret optional dependencies:
2024-04-07 18:44:35,413:INFO:                shap: 0.44.0
2024-04-07 18:44:35,413:INFO:           interpret: Not installed
2024-04-07 18:44:35,413:INFO:                umap: Not installed
2024-04-07 18:44:35,413:INFO:     ydata_profiling: Not installed
2024-04-07 18:44:35,413:INFO:  explainerdashboard: Not installed
2024-04-07 18:44:35,413:INFO:             autoviz: Not installed
2024-04-07 18:44:35,413:INFO:           fairlearn: Not installed
2024-04-07 18:44:35,413:INFO:          deepchecks: Not installed
2024-04-07 18:44:35,413:INFO:             xgboost: Not installed
2024-04-07 18:44:35,413:INFO:            catboost: 1.2.3
2024-04-07 18:44:35,413:INFO:              kmodes: 0.12.2
2024-04-07 18:44:35,413:INFO:             mlxtend: 0.23.1
2024-04-07 18:44:35,413:INFO:       statsforecast: 1.5.0
2024-04-07 18:44:35,413:INFO:        tune_sklearn: Not installed
2024-04-07 18:44:35,413:INFO:                 ray: Not installed
2024-04-07 18:44:35,414:INFO:            hyperopt: Not installed
2024-04-07 18:44:35,414:INFO:              optuna: Not installed
2024-04-07 18:44:35,414:INFO:               skopt: Not installed
2024-04-07 18:44:35,414:INFO:              mlflow: 2.9.0
2024-04-07 18:44:35,414:INFO:              gradio: Not installed
2024-04-07 18:44:35,414:INFO:             fastapi: Not installed
2024-04-07 18:44:35,414:INFO:             uvicorn: Not installed
2024-04-07 18:44:35,414:INFO:              m2cgen: Not installed
2024-04-07 18:44:35,414:INFO:           evidently: Not installed
2024-04-07 18:44:35,414:INFO:               fugue: 0.8.7
2024-04-07 18:44:35,414:INFO:           streamlit: 1.28.0
2024-04-07 18:44:35,414:INFO:             prophet: Not installed
2024-04-07 18:44:35,414:INFO:None
2024-04-07 18:44:35,414:INFO:Set up data.
2024-04-07 18:44:35,419:INFO:Set up folding strategy.
2024-04-07 18:44:35,419:INFO:Set up train/test split.
2024-04-07 18:44:35,419:INFO:Set up data.
2024-04-07 18:44:35,426:INFO:Set up index.
2024-04-07 18:44:35,427:INFO:Assigning column types.
2024-04-07 18:44:35,431:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:44:35,479:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:44:35,479:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:44:35,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:44:35,507:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:44:35,541:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:44:35,541:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:44:35,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:44:35,583:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:44:35,584:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:44:35,636:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:44:35,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:44:35,668:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:44:35,711:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:44:35,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:44:35,746:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:44:35,746:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:44:35,824:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:44:35,824:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:44:35,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:44:35,901:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:44:35,902:INFO:Preparing preprocessing pipeline...
2024-04-07 18:44:35,903:INFO:Set up simple imputation.
2024-04-07 18:44:35,903:INFO:Set up feature normalization.
2024-04-07 18:44:35,930:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:44:35,936:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:44:35,936:INFO:Creating final display dataframe.
2024-04-07 18:44:36,014:INFO:Setup _display_container:                     Description             Value
0                    Session id              6116
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              90b2
2024-04-07 18:44:36,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:44:36,100:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:44:36,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:44:36,174:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:44:36,176:INFO:setup() successfully completed in 0.77s...............
2024-04-07 18:44:36,177:INFO:Initializing compare_models()
2024-04-07 18:44:36,177:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C0908A650>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C0908A650>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:44:36,177:INFO:Checking exceptions
2024-04-07 18:44:36,181:INFO:Preparing display monitor
2024-04-07 18:44:36,212:INFO:Initializing Logistic Regression
2024-04-07 18:44:36,212:INFO:Total runtime is 1.1165936787923178e-05 minutes
2024-04-07 18:44:36,217:INFO:SubProcess create_model() called ==================================
2024-04-07 18:44:36,218:INFO:Initializing create_model()
2024-04-07 18:44:36,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C0908A650>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C091B9810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:44:36,219:INFO:Checking exceptions
2024-04-07 18:44:36,219:INFO:Importing libraries
2024-04-07 18:44:36,219:INFO:Copying training dataset
2024-04-07 18:44:36,225:INFO:Defining folds
2024-04-07 18:44:36,225:INFO:Declaring metric variables
2024-04-07 18:44:36,228:INFO:Importing untrained model
2024-04-07 18:44:36,231:INFO:Logistic Regression Imported successfully
2024-04-07 18:44:36,235:INFO:Starting cross validation
2024-04-07 18:44:36,241:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:44:43,765:INFO:Calculating mean and std
2024-04-07 18:44:43,767:INFO:Creating metrics dataframe
2024-04-07 18:44:43,772:INFO:Uploading results into container
2024-04-07 18:44:43,774:INFO:Uploading model into container now
2024-04-07 18:44:43,775:INFO:_master_model_container: 1
2024-04-07 18:44:43,775:INFO:_display_container: 2
2024-04-07 18:44:43,775:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6116, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:44:43,776:INFO:create_model() successfully completed......................................
2024-04-07 18:44:43,986:INFO:SubProcess create_model() end ==================================
2024-04-07 18:44:43,987:INFO:Creating metrics dataframe
2024-04-07 18:44:43,994:INFO:Initializing Decision Tree Classifier
2024-04-07 18:44:43,994:INFO:Total runtime is 0.1297190586725871 minutes
2024-04-07 18:44:43,999:INFO:SubProcess create_model() called ==================================
2024-04-07 18:44:43,999:INFO:Initializing create_model()
2024-04-07 18:44:43,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C0908A650>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C091B9810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:44:43,999:INFO:Checking exceptions
2024-04-07 18:44:43,999:INFO:Importing libraries
2024-04-07 18:44:43,999:INFO:Copying training dataset
2024-04-07 18:44:44,005:INFO:Defining folds
2024-04-07 18:44:44,006:INFO:Declaring metric variables
2024-04-07 18:44:44,009:INFO:Importing untrained model
2024-04-07 18:44:44,014:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:44:44,021:INFO:Starting cross validation
2024-04-07 18:44:44,021:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:44:49,616:INFO:Calculating mean and std
2024-04-07 18:44:49,616:INFO:Creating metrics dataframe
2024-04-07 18:44:49,616:INFO:Uploading results into container
2024-04-07 18:44:49,616:INFO:Uploading model into container now
2024-04-07 18:44:49,616:INFO:_master_model_container: 2
2024-04-07 18:44:49,616:INFO:_display_container: 2
2024-04-07 18:44:49,616:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6116, splitter='best')
2024-04-07 18:44:49,616:INFO:create_model() successfully completed......................................
2024-04-07 18:44:49,820:INFO:SubProcess create_model() end ==================================
2024-04-07 18:44:49,820:INFO:Creating metrics dataframe
2024-04-07 18:44:49,844:INFO:Initializing create_model()
2024-04-07 18:44:49,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C0908A650>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6116, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:44:49,845:INFO:Checking exceptions
2024-04-07 18:44:49,847:INFO:Importing libraries
2024-04-07 18:44:49,847:INFO:Copying training dataset
2024-04-07 18:44:49,847:INFO:Defining folds
2024-04-07 18:44:49,847:INFO:Declaring metric variables
2024-04-07 18:44:49,847:INFO:Importing untrained model
2024-04-07 18:44:49,847:INFO:Declaring custom model
2024-04-07 18:44:49,847:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:44:49,853:INFO:Cross validation set to False
2024-04-07 18:44:49,853:INFO:Fitting Model
2024-04-07 18:44:49,913:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6116, splitter='best')
2024-04-07 18:44:49,913:INFO:create_model() successfully completed......................................
2024-04-07 18:44:50,053:INFO:Initializing create_model()
2024-04-07 18:44:50,053:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C0908A650>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6116, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:44:50,053:INFO:Checking exceptions
2024-04-07 18:44:50,053:INFO:Importing libraries
2024-04-07 18:44:50,053:INFO:Copying training dataset
2024-04-07 18:44:50,066:INFO:Defining folds
2024-04-07 18:44:50,066:INFO:Declaring metric variables
2024-04-07 18:44:50,066:INFO:Importing untrained model
2024-04-07 18:44:50,066:INFO:Declaring custom model
2024-04-07 18:44:50,067:INFO:Logistic Regression Imported successfully
2024-04-07 18:44:50,068:INFO:Cross validation set to False
2024-04-07 18:44:50,068:INFO:Fitting Model
2024-04-07 18:44:50,090:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6116, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:44:50,090:INFO:create_model() successfully completed......................................
2024-04-07 18:44:50,244:INFO:_master_model_container: 2
2024-04-07 18:44:50,244:INFO:_display_container: 2
2024-04-07 18:44:50,244:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6116, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6116, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:44:50,244:INFO:compare_models() successfully completed......................................
2024-04-07 18:44:50,244:INFO:Initializing predict_model()
2024-04-07 18:44:50,244:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C0908A650>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6116, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C03CB0720>)
2024-04-07 18:44:50,244:INFO:Checking exceptions
2024-04-07 18:44:50,244:INFO:Preloading libraries
2024-04-07 18:46:52,094:INFO:PyCaret ClassificationExperiment
2024-04-07 18:46:52,094:INFO:Logging name: clf-default-name
2024-04-07 18:46:52,096:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 18:46:52,096:INFO:version 3.2.0
2024-04-07 18:46:52,096:INFO:Initializing setup()
2024-04-07 18:46:52,096:INFO:self.USI: a1a5
2024-04-07 18:46:52,096:INFO:self._variable_keys: {'idx', '_ml_usecase', 'logging_param', 'fix_imbalance', 'exp_name_log', 'X_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'html_param', 'y', 'seed', 'y_test', 'data', 'gpu_n_jobs_param', 'X_train', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'exp_id', 'fold_generator', 'USI', 'X', 'log_plots_param', 'pipeline'}
2024-04-07 18:46:52,096:INFO:Checking environment
2024-04-07 18:46:52,096:INFO:python_version: 3.11.7
2024-04-07 18:46:52,096:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 18:46:52,096:INFO:machine: AMD64
2024-04-07 18:46:52,096:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 18:46:52,096:INFO:Memory: svmem(total=10575405056, available=3574136832, percent=66.2, used=7001268224, free=3574136832)
2024-04-07 18:46:52,096:INFO:Physical Core: 8
2024-04-07 18:46:52,096:INFO:Logical Core: 16
2024-04-07 18:46:52,096:INFO:Checking libraries
2024-04-07 18:46:52,096:INFO:System:
2024-04-07 18:46:52,096:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 18:46:52,096:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 18:46:52,097:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 18:46:52,097:INFO:PyCaret required dependencies:
2024-04-07 18:46:52,097:INFO:                 pip: 23.3.1
2024-04-07 18:46:52,097:INFO:          setuptools: 68.2.2
2024-04-07 18:46:52,097:INFO:             pycaret: 3.2.0
2024-04-07 18:46:52,097:INFO:             IPython: 8.20.0
2024-04-07 18:46:52,097:INFO:          ipywidgets: 7.6.5
2024-04-07 18:46:52,097:INFO:                tqdm: 4.65.0
2024-04-07 18:46:52,097:INFO:               numpy: 1.25.2
2024-04-07 18:46:52,097:INFO:              pandas: 1.5.3
2024-04-07 18:46:52,097:INFO:              jinja2: 3.1.3
2024-04-07 18:46:52,097:INFO:               scipy: 1.10.1
2024-04-07 18:46:52,097:INFO:              joblib: 1.2.0
2024-04-07 18:46:52,097:INFO:             sklearn: 1.2.2
2024-04-07 18:46:52,097:INFO:                pyod: 1.1.3
2024-04-07 18:46:52,097:INFO:            imblearn: 0.11.0
2024-04-07 18:46:52,098:INFO:   category_encoders: 2.6.3
2024-04-07 18:46:52,098:INFO:            lightgbm: 4.3.0
2024-04-07 18:46:52,098:INFO:               numba: 0.59.0
2024-04-07 18:46:52,098:INFO:            requests: 2.31.0
2024-04-07 18:46:52,098:INFO:          matplotlib: 3.6.0
2024-04-07 18:46:52,098:INFO:          scikitplot: 0.3.7
2024-04-07 18:46:52,098:INFO:         yellowbrick: 1.5
2024-04-07 18:46:52,098:INFO:              plotly: 5.9.0
2024-04-07 18:46:52,098:INFO:    plotly-resampler: Not installed
2024-04-07 18:46:52,098:INFO:             kaleido: 0.2.1
2024-04-07 18:46:52,098:INFO:           schemdraw: 0.15
2024-04-07 18:46:52,098:INFO:         statsmodels: 0.14.0
2024-04-07 18:46:52,098:INFO:              sktime: 0.21.1
2024-04-07 18:46:52,098:INFO:               tbats: 1.1.3
2024-04-07 18:46:52,098:INFO:            pmdarima: 2.0.4
2024-04-07 18:46:52,098:INFO:              psutil: 5.9.0
2024-04-07 18:46:52,098:INFO:          markupsafe: 2.1.3
2024-04-07 18:46:52,098:INFO:             pickle5: Not installed
2024-04-07 18:46:52,098:INFO:         cloudpickle: 2.2.1
2024-04-07 18:46:52,098:INFO:         deprecation: 2.1.0
2024-04-07 18:46:52,098:INFO:              xxhash: 3.4.1
2024-04-07 18:46:52,098:INFO:           wurlitzer: Not installed
2024-04-07 18:46:52,098:INFO:PyCaret optional dependencies:
2024-04-07 18:46:52,098:INFO:                shap: 0.44.0
2024-04-07 18:46:52,098:INFO:           interpret: Not installed
2024-04-07 18:46:52,098:INFO:                umap: Not installed
2024-04-07 18:46:52,098:INFO:     ydata_profiling: Not installed
2024-04-07 18:46:52,098:INFO:  explainerdashboard: Not installed
2024-04-07 18:46:52,098:INFO:             autoviz: Not installed
2024-04-07 18:46:52,098:INFO:           fairlearn: Not installed
2024-04-07 18:46:52,098:INFO:          deepchecks: Not installed
2024-04-07 18:46:52,098:INFO:             xgboost: Not installed
2024-04-07 18:46:52,098:INFO:            catboost: 1.2.3
2024-04-07 18:46:52,098:INFO:              kmodes: 0.12.2
2024-04-07 18:46:52,098:INFO:             mlxtend: 0.23.1
2024-04-07 18:46:52,101:INFO:       statsforecast: 1.5.0
2024-04-07 18:46:52,101:INFO:        tune_sklearn: Not installed
2024-04-07 18:46:52,101:INFO:                 ray: Not installed
2024-04-07 18:46:52,101:INFO:            hyperopt: Not installed
2024-04-07 18:46:52,101:INFO:              optuna: Not installed
2024-04-07 18:46:52,101:INFO:               skopt: Not installed
2024-04-07 18:46:52,101:INFO:              mlflow: 2.9.0
2024-04-07 18:46:52,101:INFO:              gradio: Not installed
2024-04-07 18:46:52,101:INFO:             fastapi: Not installed
2024-04-07 18:46:52,101:INFO:             uvicorn: Not installed
2024-04-07 18:46:52,101:INFO:              m2cgen: Not installed
2024-04-07 18:46:52,101:INFO:           evidently: Not installed
2024-04-07 18:46:52,101:INFO:               fugue: 0.8.7
2024-04-07 18:46:52,101:INFO:           streamlit: 1.28.0
2024-04-07 18:46:52,101:INFO:             prophet: Not installed
2024-04-07 18:46:52,101:INFO:None
2024-04-07 18:46:52,101:INFO:Set up data.
2024-04-07 18:46:52,110:INFO:Set up folding strategy.
2024-04-07 18:46:52,110:INFO:Set up train/test split.
2024-04-07 18:46:52,110:INFO:Set up data.
2024-04-07 18:46:52,122:INFO:Set up index.
2024-04-07 18:46:52,124:INFO:Assigning column types.
2024-04-07 18:46:52,132:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 18:46:52,173:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:46:52,173:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:46:52,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:46:52,206:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:46:52,252:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 18:46:52,256:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:46:52,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:46:52,284:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:46:52,286:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 18:46:52,323:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:46:52,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:46:52,356:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:46:52,403:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 18:46:52,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:46:52,433:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:46:52,433:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 18:46:52,498:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:46:52,498:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:46:52,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:46:52,574:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:46:52,574:INFO:Preparing preprocessing pipeline...
2024-04-07 18:46:52,574:INFO:Set up simple imputation.
2024-04-07 18:46:52,574:INFO:Set up feature normalization.
2024-04-07 18:46:52,606:INFO:Finished creating preprocessing pipeline.
2024-04-07 18:46:52,606:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 18:46:52,606:INFO:Creating final display dataframe.
2024-04-07 18:46:52,685:INFO:Setup _display_container:                     Description             Value
0                    Session id              6542
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a1a5
2024-04-07 18:46:52,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:46:52,772:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:46:52,844:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 18:46:52,844:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-07 18:46:52,844:INFO:setup() successfully completed in 0.75s...............
2024-04-07 18:46:52,844:INFO:Initializing compare_models()
2024-04-07 18:46:52,844:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C093E4690>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025C093E4690>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 18:46:52,844:INFO:Checking exceptions
2024-04-07 18:46:52,855:INFO:Preparing display monitor
2024-04-07 18:46:52,881:INFO:Initializing Logistic Regression
2024-04-07 18:46:52,881:INFO:Total runtime is 0.0 minutes
2024-04-07 18:46:52,886:INFO:SubProcess create_model() called ==================================
2024-04-07 18:46:52,886:INFO:Initializing create_model()
2024-04-07 18:46:52,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C093E4690>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C08289B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:46:52,886:INFO:Checking exceptions
2024-04-07 18:46:52,886:INFO:Importing libraries
2024-04-07 18:46:52,886:INFO:Copying training dataset
2024-04-07 18:46:52,891:INFO:Defining folds
2024-04-07 18:46:52,891:INFO:Declaring metric variables
2024-04-07 18:46:52,895:INFO:Importing untrained model
2024-04-07 18:46:52,898:INFO:Logistic Regression Imported successfully
2024-04-07 18:46:52,906:INFO:Starting cross validation
2024-04-07 18:46:52,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:47:00,374:INFO:Calculating mean and std
2024-04-07 18:47:00,374:INFO:Creating metrics dataframe
2024-04-07 18:47:00,390:INFO:Uploading results into container
2024-04-07 18:47:00,390:INFO:Uploading model into container now
2024-04-07 18:47:00,390:INFO:_master_model_container: 1
2024-04-07 18:47:00,390:INFO:_display_container: 2
2024-04-07 18:47:00,390:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6542, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:47:00,390:INFO:create_model() successfully completed......................................
2024-04-07 18:47:00,588:INFO:SubProcess create_model() end ==================================
2024-04-07 18:47:00,588:INFO:Creating metrics dataframe
2024-04-07 18:47:00,588:INFO:Initializing Decision Tree Classifier
2024-04-07 18:47:00,588:INFO:Total runtime is 0.12845994234085084 minutes
2024-04-07 18:47:00,588:INFO:SubProcess create_model() called ==================================
2024-04-07 18:47:00,604:INFO:Initializing create_model()
2024-04-07 18:47:00,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C093E4690>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025C08289B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:47:00,605:INFO:Checking exceptions
2024-04-07 18:47:00,605:INFO:Importing libraries
2024-04-07 18:47:00,605:INFO:Copying training dataset
2024-04-07 18:47:00,611:INFO:Defining folds
2024-04-07 18:47:00,611:INFO:Declaring metric variables
2024-04-07 18:47:00,615:INFO:Importing untrained model
2024-04-07 18:47:00,618:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:47:00,625:INFO:Starting cross validation
2024-04-07 18:47:00,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 18:47:06,141:INFO:Calculating mean and std
2024-04-07 18:47:06,141:INFO:Creating metrics dataframe
2024-04-07 18:47:06,152:INFO:Uploading results into container
2024-04-07 18:47:06,153:INFO:Uploading model into container now
2024-04-07 18:47:06,153:INFO:_master_model_container: 2
2024-04-07 18:47:06,155:INFO:_display_container: 2
2024-04-07 18:47:06,155:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6542, splitter='best')
2024-04-07 18:47:06,155:INFO:create_model() successfully completed......................................
2024-04-07 18:47:06,314:INFO:SubProcess create_model() end ==================================
2024-04-07 18:47:06,314:INFO:Creating metrics dataframe
2024-04-07 18:47:06,339:INFO:Initializing create_model()
2024-04-07 18:47:06,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C093E4690>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6542, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:47:06,349:INFO:Checking exceptions
2024-04-07 18:47:06,349:INFO:Importing libraries
2024-04-07 18:47:06,349:INFO:Copying training dataset
2024-04-07 18:47:06,356:INFO:Defining folds
2024-04-07 18:47:06,356:INFO:Declaring metric variables
2024-04-07 18:47:06,356:INFO:Importing untrained model
2024-04-07 18:47:06,356:INFO:Declaring custom model
2024-04-07 18:47:06,357:INFO:Decision Tree Classifier Imported successfully
2024-04-07 18:47:06,357:INFO:Cross validation set to False
2024-04-07 18:47:06,357:INFO:Fitting Model
2024-04-07 18:47:06,409:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6542, splitter='best')
2024-04-07 18:47:06,409:INFO:create_model() successfully completed......................................
2024-04-07 18:47:06,547:INFO:Initializing create_model()
2024-04-07 18:47:06,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C093E4690>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6542, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 18:47:06,547:INFO:Checking exceptions
2024-04-07 18:47:06,564:INFO:Importing libraries
2024-04-07 18:47:06,564:INFO:Copying training dataset
2024-04-07 18:47:06,571:INFO:Defining folds
2024-04-07 18:47:06,572:INFO:Declaring metric variables
2024-04-07 18:47:06,572:INFO:Importing untrained model
2024-04-07 18:47:06,572:INFO:Declaring custom model
2024-04-07 18:47:06,572:INFO:Logistic Regression Imported successfully
2024-04-07 18:47:06,572:INFO:Cross validation set to False
2024-04-07 18:47:06,573:INFO:Fitting Model
2024-04-07 18:47:06,590:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6542, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 18:47:06,590:INFO:create_model() successfully completed......................................
2024-04-07 18:47:06,757:INFO:_master_model_container: 2
2024-04-07 18:47:06,757:INFO:_display_container: 2
2024-04-07 18:47:06,758:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6542, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6542, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 18:47:06,758:INFO:compare_models() successfully completed......................................
2024-04-07 18:47:06,758:INFO:Initializing predict_model()
2024-04-07 18:47:06,758:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025C093E4690>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6542, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025C5A1953A0>)
2024-04-07 18:47:06,758:INFO:Checking exceptions
2024-04-07 18:47:06,758:INFO:Preloading libraries
2024-04-10 21:40:38,385:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_48c80d6015194062bada978fffb00a45_fe2669251dbe43f5a057848fd1ff8585
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_560fd70eeb8c4c6787f701da5f09119e_dac21d50360d4cf09f8558e616f0f09b
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_d21a7919ade34346999871c79eaadc92_6b1e5fb581e544c1a70cf51fa988df1b
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_be724a9e1a2b4c77b90af20608690f06_337be6fdfde249fb8f29331befd89f1a
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_cc74b84c3db14bb79c063a43441fb723_55ec3769ad2e4b2684cda761bdc916cb
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_57c86f567a324ea495651d247fec9907_98cabca37c574f7cb47efbe7765d3294
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_bef216b3390c41488c06c8a6102cf789_abb9b5ad9ec741a2864b218bd80379fd
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_212111c8d4484fe7bd5ae0554d6394f3_f830ab784eeb416d91f8e2b81135577b
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_0ca0f50e091b42da8b89d5ad24ccd5fd_e96f9c333648444a97be1f34f6669dee
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_704d4836bbd54185b1bcc2b5eb3b663a_37b1188605ff48b4b3defc2e609312df
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_c2823f36ff2b48ccbeea8f099c5dce65_adcb92cf501446b69f7d0191c1ca6a70
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_59ac565159854935a57f3a0182167895_78e5c26dfd234a1bbbff8baf6112f08a
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_e9ffd8f176a14e5f81e63e34cee553d7_a80ac6419cb843c0aca213dc6f054dec
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,401:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_46959a2a5c0049c3a48a4b6805052c62_b1ab4fc5e73048d98b8ed9b792aab707
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_d232829561eb4b26be47bcce1902bafe_69b6b413ce3d4e659287f4138061fbe1
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_468b6f7f21cd4acfa4f85fc541b26251_89ee4cdf7bfd4c96b840fc0faf12965e
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_ddeeb51713fc449ebec5b12ce5abb756_a8e34b5e3e32464899501e1733d4ba20
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_5b997edf324840619f28d436f00eb776_c0c836fff3c24cb8a64abcfe1ee78d8f
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_72a1f34423bf44bd9896f6410e59d958_e4c66fef28dc4f20b5380377e4a9558e
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_1f248f263da34bba9b0072400c2e2dcd_2b25d59559534a65ae5d9a690ace8229
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_0a82d9939c284ad29ab4a67579f21c42_00289600dbaa42f5a7a06fed294067db
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_e084f130b9a241488d4970ba1fefdbc9_186d28e9d653405c8924b78aa9a5425c
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_8bbf25fed79c4e8ca7d7c74fd19dcb33_06efb332eebd4c39977cf658e3ccac9a
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_01f3e0812f2b44708123cf9a909bcbba_b7e42dd8583a4aa9a94eb307491c4d65
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_31af814c94c644dbb8f5e9c79a91ba30_bd8f940f3bcd4a4a9c4ad977cb1de753
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_955cf18d04c846d681e8b76f50c711e5_ffbcf0cf14a7428ea1c93d7462ed4916
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_fcd5b24b98b140d4ab6bea36183e996a_8b2090430c3742ffba20617b02070c75
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_c46a1fd6da0248fab2458de497f8da38_6337d3af1d5640e6be0ecdf858ff4a20
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_742b7e2d686643f79929fccfbf21226b_8da349f6c3124fe093a08a48782f2040
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_ceb106c4ab4040c89dd7f9dfdb2f93ff_f901400706ab4fdb965b9b6d054938c9
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_217d076115704b9ca5d5f7903f70a1ff_9d35d0ae97f94043b1273e2cd02cd3d0
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_a317c8dd711b4e8da32acbdbab06fe18_60dc174d45594c219f4f60cd0faafa1f
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:40:38,417:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_6664_301a40bf7f404323bbbd1ef105764ddd_687fff89c03345f19e64d1a9999cafe9
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:41:56,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:41:56,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:41:56,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:41:56,980:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:42:01,892:INFO:PyCaret ClassificationExperiment
2024-04-10 21:42:01,892:INFO:Logging name: clf-default-name
2024-04-10 21:42:01,892:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-10 21:42:01,892:INFO:version 3.2.0
2024-04-10 21:42:01,892:INFO:Initializing setup()
2024-04-10 21:42:01,892:INFO:self.USI: 4eac
2024-04-10 21:42:01,892:INFO:self._variable_keys: {'USI', 'exp_name_log', 'fold_groups_param', 'idx', 'y_test', 'is_multiclass', '_available_plots', 'html_param', 'X_test', 'gpu_n_jobs_param', 'pipeline', 'fold_generator', 'n_jobs_param', 'seed', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'log_plots_param', 'X', 'X_train', 'fix_imbalance', 'logging_param', 'gpu_param', 'exp_id', 'target_param', 'memory', 'data'}
2024-04-10 21:42:01,892:INFO:Checking environment
2024-04-10 21:42:01,892:INFO:python_version: 3.11.7
2024-04-10 21:42:01,892:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-10 21:42:01,892:INFO:machine: AMD64
2024-04-10 21:42:01,892:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-10 21:42:01,892:INFO:Memory: svmem(total=10575405056, available=915783680, percent=91.3, used=9659621376, free=915783680)
2024-04-10 21:42:01,892:INFO:Physical Core: 8
2024-04-10 21:42:01,892:INFO:Logical Core: 16
2024-04-10 21:42:01,892:INFO:Checking libraries
2024-04-10 21:42:01,892:INFO:System:
2024-04-10 21:42:01,892:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-10 21:42:01,892:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-10 21:42:01,892:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-10 21:42:01,892:INFO:PyCaret required dependencies:
2024-04-10 21:42:03,540:INFO:                 pip: 23.3.1
2024-04-10 21:42:03,540:INFO:          setuptools: 68.2.2
2024-04-10 21:42:03,540:INFO:             pycaret: 3.2.0
2024-04-10 21:42:03,540:INFO:             IPython: 8.20.0
2024-04-10 21:42:03,540:INFO:          ipywidgets: 7.6.5
2024-04-10 21:42:03,540:INFO:                tqdm: 4.65.0
2024-04-10 21:42:03,540:INFO:               numpy: 1.25.2
2024-04-10 21:42:03,540:INFO:              pandas: 1.5.3
2024-04-10 21:42:03,540:INFO:              jinja2: 3.1.3
2024-04-10 21:42:03,540:INFO:               scipy: 1.10.1
2024-04-10 21:42:03,540:INFO:              joblib: 1.2.0
2024-04-10 21:42:03,540:INFO:             sklearn: 1.2.2
2024-04-10 21:42:03,540:INFO:                pyod: 1.1.3
2024-04-10 21:42:03,540:INFO:            imblearn: 0.11.0
2024-04-10 21:42:03,540:INFO:   category_encoders: 2.6.3
2024-04-10 21:42:03,540:INFO:            lightgbm: 4.3.0
2024-04-10 21:42:03,540:INFO:               numba: 0.59.0
2024-04-10 21:42:03,540:INFO:            requests: 2.31.0
2024-04-10 21:42:03,540:INFO:          matplotlib: 3.6.0
2024-04-10 21:42:03,540:INFO:          scikitplot: 0.3.7
2024-04-10 21:42:03,540:INFO:         yellowbrick: 1.5
2024-04-10 21:42:03,540:INFO:              plotly: 5.9.0
2024-04-10 21:42:03,540:INFO:    plotly-resampler: Not installed
2024-04-10 21:42:03,540:INFO:             kaleido: 0.2.1
2024-04-10 21:42:03,540:INFO:           schemdraw: 0.15
2024-04-10 21:42:03,540:INFO:         statsmodels: 0.14.0
2024-04-10 21:42:03,540:INFO:              sktime: 0.21.1
2024-04-10 21:42:03,540:INFO:               tbats: 1.1.3
2024-04-10 21:42:03,540:INFO:            pmdarima: 2.0.4
2024-04-10 21:42:03,540:INFO:              psutil: 5.9.0
2024-04-10 21:42:03,540:INFO:          markupsafe: 2.1.3
2024-04-10 21:42:03,540:INFO:             pickle5: Not installed
2024-04-10 21:42:03,540:INFO:         cloudpickle: 2.2.1
2024-04-10 21:42:03,540:INFO:         deprecation: 2.1.0
2024-04-10 21:42:03,540:INFO:              xxhash: 3.4.1
2024-04-10 21:42:03,540:INFO:           wurlitzer: Not installed
2024-04-10 21:42:03,540:INFO:PyCaret optional dependencies:
2024-04-10 21:42:03,556:INFO:                shap: 0.44.0
2024-04-10 21:42:03,556:INFO:           interpret: Not installed
2024-04-10 21:42:03,556:INFO:                umap: Not installed
2024-04-10 21:42:03,556:INFO:     ydata_profiling: Not installed
2024-04-10 21:42:03,556:INFO:  explainerdashboard: Not installed
2024-04-10 21:42:03,556:INFO:             autoviz: Not installed
2024-04-10 21:42:03,556:INFO:           fairlearn: Not installed
2024-04-10 21:42:03,556:INFO:          deepchecks: Not installed
2024-04-10 21:42:03,556:INFO:             xgboost: Not installed
2024-04-10 21:42:03,556:INFO:            catboost: 1.2.3
2024-04-10 21:42:03,556:INFO:              kmodes: 0.12.2
2024-04-10 21:42:03,556:INFO:             mlxtend: 0.23.1
2024-04-10 21:42:03,556:INFO:       statsforecast: 1.5.0
2024-04-10 21:42:03,556:INFO:        tune_sklearn: Not installed
2024-04-10 21:42:03,556:INFO:                 ray: Not installed
2024-04-10 21:42:03,556:INFO:            hyperopt: Not installed
2024-04-10 21:42:03,556:INFO:              optuna: Not installed
2024-04-10 21:42:03,556:INFO:               skopt: Not installed
2024-04-10 21:42:03,556:INFO:              mlflow: 2.9.0
2024-04-10 21:42:03,556:INFO:              gradio: Not installed
2024-04-10 21:42:03,556:INFO:             fastapi: Not installed
2024-04-10 21:42:03,556:INFO:             uvicorn: Not installed
2024-04-10 21:42:03,556:INFO:              m2cgen: Not installed
2024-04-10 21:42:03,556:INFO:           evidently: Not installed
2024-04-10 21:42:03,556:INFO:               fugue: 0.8.7
2024-04-10 21:42:03,556:INFO:           streamlit: 1.28.0
2024-04-10 21:42:03,556:INFO:             prophet: Not installed
2024-04-10 21:42:03,556:INFO:None
2024-04-10 21:42:03,556:INFO:Set up data.
2024-04-10 21:42:03,571:INFO:Set up folding strategy.
2024-04-10 21:42:03,571:INFO:Set up train/test split.
2024-04-10 21:42:03,571:INFO:Set up data.
2024-04-10 21:42:03,571:INFO:Set up index.
2024-04-10 21:42:03,571:INFO:Assigning column types.
2024-04-10 21:42:03,587:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-10 21:42:03,650:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-10 21:42:03,650:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:42:03,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:42:03,713:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:42:03,902:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-10 21:42:03,902:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:42:03,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:42:03,933:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:42:03,933:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-10 21:42:03,996:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:42:04,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:42:04,027:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:42:04,106:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:42:04,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:42:04,137:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:42:04,137:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-10 21:42:04,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:42:04,247:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:42:04,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:42:04,342:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:42:04,357:INFO:Preparing preprocessing pipeline...
2024-04-10 21:42:04,357:INFO:Set up simple imputation.
2024-04-10 21:42:04,357:INFO:Set up feature normalization.
2024-04-10 21:42:04,420:INFO:Finished creating preprocessing pipeline.
2024-04-10 21:42:04,420:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-10 21:42:04,420:INFO:Creating final display dataframe.
2024-04-10 21:42:04,546:INFO:Setup _display_container:                     Description             Value
0                    Session id              8070
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              4eac
2024-04-10 21:42:04,671:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:42:04,671:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:42:04,766:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:42:04,766:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:42:04,923:INFO:setup() successfully completed in 3.03s...............
2024-04-10 21:42:04,923:INFO:Initializing compare_models()
2024-04-10 21:42:04,923:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2B4336C50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C2B4336C50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-10 21:42:04,923:INFO:Checking exceptions
2024-04-10 21:42:04,923:INFO:Preparing display monitor
2024-04-10 21:42:04,970:INFO:Initializing Logistic Regression
2024-04-10 21:42:04,970:INFO:Total runtime is 0.0 minutes
2024-04-10 21:42:04,989:INFO:SubProcess create_model() called ==================================
2024-04-10 21:42:04,989:INFO:Initializing create_model()
2024-04-10 21:42:04,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2B4336C50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C2B60A3590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:42:04,989:INFO:Checking exceptions
2024-04-10 21:42:04,989:INFO:Importing libraries
2024-04-10 21:42:04,989:INFO:Copying training dataset
2024-04-10 21:42:05,001:INFO:Defining folds
2024-04-10 21:42:05,001:INFO:Declaring metric variables
2024-04-10 21:42:05,001:INFO:Importing untrained model
2024-04-10 21:42:05,017:INFO:Logistic Regression Imported successfully
2024-04-10 21:42:05,017:INFO:Starting cross validation
2024-04-10 21:42:05,017:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-10 21:42:14,957:INFO:Calculating mean and std
2024-04-10 21:42:14,957:INFO:Creating metrics dataframe
2024-04-10 21:42:14,972:INFO:Uploading results into container
2024-04-10 21:42:14,972:INFO:Uploading model into container now
2024-04-10 21:42:14,972:INFO:_master_model_container: 1
2024-04-10 21:42:14,972:INFO:_display_container: 2
2024-04-10 21:42:14,972:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8070, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-10 21:42:14,972:INFO:create_model() successfully completed......................................
2024-04-10 21:42:15,256:INFO:SubProcess create_model() end ==================================
2024-04-10 21:42:15,256:INFO:Creating metrics dataframe
2024-04-10 21:42:15,271:INFO:Initializing Decision Tree Classifier
2024-04-10 21:42:15,271:INFO:Total runtime is 0.1716930866241455 minutes
2024-04-10 21:42:15,271:INFO:SubProcess create_model() called ==================================
2024-04-10 21:42:15,271:INFO:Initializing create_model()
2024-04-10 21:42:15,271:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2B4336C50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C2B60A3590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:42:15,271:INFO:Checking exceptions
2024-04-10 21:42:15,271:INFO:Importing libraries
2024-04-10 21:42:15,271:INFO:Copying training dataset
2024-04-10 21:42:15,287:INFO:Defining folds
2024-04-10 21:42:15,287:INFO:Declaring metric variables
2024-04-10 21:42:15,301:INFO:Importing untrained model
2024-04-10 21:42:15,303:INFO:Decision Tree Classifier Imported successfully
2024-04-10 21:42:15,303:INFO:Starting cross validation
2024-04-10 21:42:15,303:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-10 21:42:22,312:INFO:Calculating mean and std
2024-04-10 21:42:22,323:INFO:Creating metrics dataframe
2024-04-10 21:42:22,323:INFO:Uploading results into container
2024-04-10 21:42:22,323:INFO:Uploading model into container now
2024-04-10 21:42:22,323:INFO:_master_model_container: 2
2024-04-10 21:42:22,323:INFO:_display_container: 2
2024-04-10 21:42:22,323:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8070, splitter='best')
2024-04-10 21:42:22,323:INFO:create_model() successfully completed......................................
2024-04-10 21:42:22,527:INFO:SubProcess create_model() end ==================================
2024-04-10 21:42:22,527:INFO:Creating metrics dataframe
2024-04-10 21:42:22,543:INFO:Initializing create_model()
2024-04-10 21:42:22,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2B4336C50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8070, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:42:22,543:INFO:Checking exceptions
2024-04-10 21:42:22,559:INFO:Importing libraries
2024-04-10 21:42:22,559:INFO:Copying training dataset
2024-04-10 21:42:22,559:INFO:Defining folds
2024-04-10 21:42:22,559:INFO:Declaring metric variables
2024-04-10 21:42:22,559:INFO:Importing untrained model
2024-04-10 21:42:22,559:INFO:Declaring custom model
2024-04-10 21:42:22,559:INFO:Decision Tree Classifier Imported successfully
2024-04-10 21:42:22,559:INFO:Cross validation set to False
2024-04-10 21:42:22,559:INFO:Fitting Model
2024-04-10 21:42:22,637:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8070, splitter='best')
2024-04-10 21:42:22,637:INFO:create_model() successfully completed......................................
2024-04-10 21:42:22,794:INFO:Initializing create_model()
2024-04-10 21:42:22,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2B4336C50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8070, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:42:22,794:INFO:Checking exceptions
2024-04-10 21:42:22,794:INFO:Importing libraries
2024-04-10 21:42:22,794:INFO:Copying training dataset
2024-04-10 21:42:22,813:INFO:Defining folds
2024-04-10 21:42:22,813:INFO:Declaring metric variables
2024-04-10 21:42:22,813:INFO:Importing untrained model
2024-04-10 21:42:22,813:INFO:Declaring custom model
2024-04-10 21:42:22,813:INFO:Logistic Regression Imported successfully
2024-04-10 21:42:22,813:INFO:Cross validation set to False
2024-04-10 21:42:22,813:INFO:Fitting Model
2024-04-10 21:42:22,857:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8070, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-10 21:42:22,857:INFO:create_model() successfully completed......................................
2024-04-10 21:42:23,029:INFO:_master_model_container: 2
2024-04-10 21:42:23,029:INFO:_display_container: 2
2024-04-10 21:42:23,029:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8070, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8070, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-10 21:42:23,029:INFO:compare_models() successfully completed......................................
2024-04-10 21:42:23,029:INFO:Initializing predict_model()
2024-04-10 21:42:23,029:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2B4336C50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8070, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C2B6226B60>)
2024-04-10 21:42:23,029:INFO:Checking exceptions
2024-04-10 21:42:23,029:INFO:Preloading libraries
2024-04-10 21:50:42,920:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_10736_94eeff12ab4542ab9b88afe49912bb2b_44e8e7cd67f049ff86a184a71d3e7cc1
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:50:42,920:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_10736_50d09c3c1c224c13b2cdc1214685a7b2_7848af815d8e4082b26a7c75dd93a6c6
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 21:54:32,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:54:32,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:54:32,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:54:32,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:54:37,500:INFO:PyCaret ClassificationExperiment
2024-04-10 21:54:37,500:INFO:Logging name: clf-default-name
2024-04-10 21:54:37,500:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-10 21:54:37,500:INFO:version 3.2.0
2024-04-10 21:54:37,500:INFO:Initializing setup()
2024-04-10 21:54:37,500:INFO:self.USI: ce31
2024-04-10 21:54:37,500:INFO:self._variable_keys: {'fix_imbalance', 'logging_param', 'is_multiclass', 'y_train', '_ml_usecase', 'y', '_available_plots', 'n_jobs_param', 'pipeline', 'html_param', 'y_test', 'X_test', 'log_plots_param', 'idx', 'gpu_n_jobs_param', 'X_train', 'fold_shuffle_param', 'X', 'fold_generator', 'memory', 'gpu_param', 'exp_name_log', 'target_param', 'fold_groups_param', 'seed', 'USI', 'exp_id', 'data'}
2024-04-10 21:54:37,500:INFO:Checking environment
2024-04-10 21:54:37,500:INFO:python_version: 3.11.7
2024-04-10 21:54:37,500:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-10 21:54:37,501:INFO:machine: AMD64
2024-04-10 21:54:37,501:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-10 21:54:37,501:INFO:Memory: svmem(total=10575405056, available=1872605184, percent=82.3, used=8702799872, free=1872605184)
2024-04-10 21:54:37,501:INFO:Physical Core: 8
2024-04-10 21:54:37,501:INFO:Logical Core: 16
2024-04-10 21:54:37,501:INFO:Checking libraries
2024-04-10 21:54:37,501:INFO:System:
2024-04-10 21:54:37,501:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-10 21:54:37,501:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-10 21:54:37,501:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-10 21:54:37,501:INFO:PyCaret required dependencies:
2024-04-10 21:54:37,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:54:37,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:54:37,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:54:37,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:54:39,086:INFO:                 pip: 23.3.1
2024-04-10 21:54:39,086:INFO:          setuptools: 68.2.2
2024-04-10 21:54:39,086:INFO:             pycaret: 3.2.0
2024-04-10 21:54:39,086:INFO:             IPython: 8.20.0
2024-04-10 21:54:39,086:INFO:          ipywidgets: 7.6.5
2024-04-10 21:54:39,086:INFO:                tqdm: 4.65.0
2024-04-10 21:54:39,086:INFO:               numpy: 1.25.2
2024-04-10 21:54:39,086:INFO:              pandas: 1.5.3
2024-04-10 21:54:39,086:INFO:              jinja2: 3.1.3
2024-04-10 21:54:39,086:INFO:               scipy: 1.10.1
2024-04-10 21:54:39,086:INFO:              joblib: 1.2.0
2024-04-10 21:54:39,086:INFO:             sklearn: 1.2.2
2024-04-10 21:54:39,086:INFO:                pyod: 1.1.3
2024-04-10 21:54:39,086:INFO:            imblearn: 0.11.0
2024-04-10 21:54:39,086:INFO:   category_encoders: 2.6.3
2024-04-10 21:54:39,086:INFO:            lightgbm: 4.3.0
2024-04-10 21:54:39,086:INFO:               numba: 0.59.0
2024-04-10 21:54:39,086:INFO:            requests: 2.31.0
2024-04-10 21:54:39,086:INFO:          matplotlib: 3.6.0
2024-04-10 21:54:39,086:INFO:          scikitplot: 0.3.7
2024-04-10 21:54:39,086:INFO:         yellowbrick: 1.5
2024-04-10 21:54:39,086:INFO:              plotly: 5.9.0
2024-04-10 21:54:39,086:INFO:    plotly-resampler: Not installed
2024-04-10 21:54:39,086:INFO:             kaleido: 0.2.1
2024-04-10 21:54:39,086:INFO:           schemdraw: 0.15
2024-04-10 21:54:39,086:INFO:         statsmodels: 0.14.0
2024-04-10 21:54:39,086:INFO:              sktime: 0.21.1
2024-04-10 21:54:39,086:INFO:               tbats: 1.1.3
2024-04-10 21:54:39,086:INFO:            pmdarima: 2.0.4
2024-04-10 21:54:39,086:INFO:              psutil: 5.9.0
2024-04-10 21:54:39,086:INFO:          markupsafe: 2.1.3
2024-04-10 21:54:39,086:INFO:             pickle5: Not installed
2024-04-10 21:54:39,086:INFO:         cloudpickle: 2.2.1
2024-04-10 21:54:39,086:INFO:         deprecation: 2.1.0
2024-04-10 21:54:39,086:INFO:              xxhash: 3.4.1
2024-04-10 21:54:39,086:INFO:           wurlitzer: Not installed
2024-04-10 21:54:39,086:INFO:PyCaret optional dependencies:
2024-04-10 21:54:39,102:INFO:                shap: 0.44.0
2024-04-10 21:54:39,102:INFO:           interpret: Not installed
2024-04-10 21:54:39,102:INFO:                umap: Not installed
2024-04-10 21:54:39,102:INFO:     ydata_profiling: Not installed
2024-04-10 21:54:39,102:INFO:  explainerdashboard: Not installed
2024-04-10 21:54:39,102:INFO:             autoviz: Not installed
2024-04-10 21:54:39,102:INFO:           fairlearn: Not installed
2024-04-10 21:54:39,102:INFO:          deepchecks: Not installed
2024-04-10 21:54:39,102:INFO:             xgboost: Not installed
2024-04-10 21:54:39,102:INFO:            catboost: 1.2.3
2024-04-10 21:54:39,102:INFO:              kmodes: 0.12.2
2024-04-10 21:54:39,102:INFO:             mlxtend: 0.23.1
2024-04-10 21:54:39,102:INFO:       statsforecast: 1.5.0
2024-04-10 21:54:39,102:INFO:        tune_sklearn: Not installed
2024-04-10 21:54:39,102:INFO:                 ray: Not installed
2024-04-10 21:54:39,102:INFO:            hyperopt: Not installed
2024-04-10 21:54:39,102:INFO:              optuna: Not installed
2024-04-10 21:54:39,102:INFO:               skopt: Not installed
2024-04-10 21:54:39,102:INFO:              mlflow: 2.9.0
2024-04-10 21:54:39,102:INFO:              gradio: Not installed
2024-04-10 21:54:39,102:INFO:             fastapi: Not installed
2024-04-10 21:54:39,102:INFO:             uvicorn: Not installed
2024-04-10 21:54:39,102:INFO:              m2cgen: Not installed
2024-04-10 21:54:39,102:INFO:           evidently: Not installed
2024-04-10 21:54:39,102:INFO:               fugue: 0.8.7
2024-04-10 21:54:39,102:INFO:           streamlit: 1.28.0
2024-04-10 21:54:39,102:INFO:             prophet: Not installed
2024-04-10 21:54:39,102:INFO:None
2024-04-10 21:54:39,102:INFO:Set up data.
2024-04-10 21:54:39,113:INFO:Set up folding strategy.
2024-04-10 21:54:39,113:INFO:Set up train/test split.
2024-04-10 21:54:39,113:INFO:Set up data.
2024-04-10 21:54:39,117:INFO:Set up index.
2024-04-10 21:54:39,117:INFO:Assigning column types.
2024-04-10 21:54:39,123:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-10 21:54:39,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-10 21:54:39,183:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:54:39,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:54:39,238:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:54:39,340:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-10 21:54:39,342:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:54:39,376:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:54:39,376:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:54:39,376:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-10 21:54:39,442:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:54:39,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:54:39,493:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:54:39,558:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:54:39,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:54:39,594:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:54:39,594:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-10 21:54:39,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:54:39,703:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:54:39,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:54:39,795:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:54:39,812:INFO:Preparing preprocessing pipeline...
2024-04-10 21:54:39,812:INFO:Set up simple imputation.
2024-04-10 21:54:39,812:INFO:Set up feature normalization.
2024-04-10 21:54:39,844:INFO:Finished creating preprocessing pipeline.
2024-04-10 21:54:39,856:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-10 21:54:39,856:INFO:Creating final display dataframe.
2024-04-10 21:54:39,964:INFO:Setup _display_container:                     Description             Value
0                    Session id               865
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              ce31
2024-04-10 21:54:40,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:54:40,077:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:54:40,177:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:54:40,177:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:54:40,182:INFO:setup() successfully completed in 2.69s...............
2024-04-10 21:54:40,182:INFO:Initializing compare_models()
2024-04-10 21:54:40,182:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FB34D19710>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001FB34D19710>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-10 21:54:40,182:INFO:Checking exceptions
2024-04-10 21:54:40,184:INFO:Preparing display monitor
2024-04-10 21:54:40,239:INFO:Initializing Logistic Regression
2024-04-10 21:54:40,239:INFO:Total runtime is 0.0 minutes
2024-04-10 21:54:40,246:INFO:SubProcess create_model() called ==================================
2024-04-10 21:54:40,246:INFO:Initializing create_model()
2024-04-10 21:54:40,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FB34D19710>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FB35F0AC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:54:40,246:INFO:Checking exceptions
2024-04-10 21:54:40,246:INFO:Importing libraries
2024-04-10 21:54:40,246:INFO:Copying training dataset
2024-04-10 21:54:40,259:INFO:Defining folds
2024-04-10 21:54:40,259:INFO:Declaring metric variables
2024-04-10 21:54:40,264:INFO:Importing untrained model
2024-04-10 21:54:40,268:INFO:Logistic Regression Imported successfully
2024-04-10 21:54:40,278:INFO:Starting cross validation
2024-04-10 21:54:40,278:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-10 21:54:49,158:INFO:Calculating mean and std
2024-04-10 21:54:49,161:INFO:Creating metrics dataframe
2024-04-10 21:54:49,165:INFO:Uploading results into container
2024-04-10 21:54:49,173:INFO:Uploading model into container now
2024-04-10 21:54:49,176:INFO:_master_model_container: 1
2024-04-10 21:54:49,176:INFO:_display_container: 2
2024-04-10 21:54:49,176:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=865, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-10 21:54:49,178:INFO:create_model() successfully completed......................................
2024-04-10 21:54:49,402:INFO:SubProcess create_model() end ==================================
2024-04-10 21:54:49,402:INFO:Creating metrics dataframe
2024-04-10 21:54:49,417:INFO:Initializing Decision Tree Classifier
2024-04-10 21:54:49,417:INFO:Total runtime is 0.15295830965042115 minutes
2024-04-10 21:54:49,423:INFO:SubProcess create_model() called ==================================
2024-04-10 21:54:49,424:INFO:Initializing create_model()
2024-04-10 21:54:49,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FB34D19710>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FB35F0AC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:54:49,424:INFO:Checking exceptions
2024-04-10 21:54:49,424:INFO:Importing libraries
2024-04-10 21:54:49,424:INFO:Copying training dataset
2024-04-10 21:54:49,427:INFO:Defining folds
2024-04-10 21:54:49,427:INFO:Declaring metric variables
2024-04-10 21:54:49,435:INFO:Importing untrained model
2024-04-10 21:54:49,441:INFO:Decision Tree Classifier Imported successfully
2024-04-10 21:54:49,452:INFO:Starting cross validation
2024-04-10 21:54:49,454:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-10 21:54:55,983:INFO:Calculating mean and std
2024-04-10 21:54:55,983:INFO:Creating metrics dataframe
2024-04-10 21:54:55,983:INFO:Uploading results into container
2024-04-10 21:54:55,983:INFO:Uploading model into container now
2024-04-10 21:54:55,983:INFO:_master_model_container: 2
2024-04-10 21:54:55,983:INFO:_display_container: 2
2024-04-10 21:54:55,983:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=865, splitter='best')
2024-04-10 21:54:55,983:INFO:create_model() successfully completed......................................
2024-04-10 21:54:56,173:INFO:SubProcess create_model() end ==================================
2024-04-10 21:54:56,173:INFO:Creating metrics dataframe
2024-04-10 21:54:56,201:INFO:Initializing create_model()
2024-04-10 21:54:56,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FB34D19710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=865, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:54:56,201:INFO:Checking exceptions
2024-04-10 21:54:56,204:INFO:Importing libraries
2024-04-10 21:54:56,204:INFO:Copying training dataset
2024-04-10 21:54:56,207:INFO:Defining folds
2024-04-10 21:54:56,207:INFO:Declaring metric variables
2024-04-10 21:54:56,207:INFO:Importing untrained model
2024-04-10 21:54:56,207:INFO:Declaring custom model
2024-04-10 21:54:56,207:INFO:Decision Tree Classifier Imported successfully
2024-04-10 21:54:56,207:INFO:Cross validation set to False
2024-04-10 21:54:56,207:INFO:Fitting Model
2024-04-10 21:54:56,267:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=865, splitter='best')
2024-04-10 21:54:56,267:INFO:create_model() successfully completed......................................
2024-04-10 21:54:56,434:INFO:Initializing create_model()
2024-04-10 21:54:56,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FB34D19710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=865, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:54:56,434:INFO:Checking exceptions
2024-04-10 21:54:56,434:INFO:Importing libraries
2024-04-10 21:54:56,434:INFO:Copying training dataset
2024-04-10 21:54:56,442:INFO:Defining folds
2024-04-10 21:54:56,442:INFO:Declaring metric variables
2024-04-10 21:54:56,442:INFO:Importing untrained model
2024-04-10 21:54:56,442:INFO:Declaring custom model
2024-04-10 21:54:56,442:INFO:Logistic Regression Imported successfully
2024-04-10 21:54:56,442:INFO:Cross validation set to False
2024-04-10 21:54:56,442:INFO:Fitting Model
2024-04-10 21:54:56,466:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=865, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-10 21:54:56,466:INFO:create_model() successfully completed......................................
2024-04-10 21:54:56,619:INFO:_master_model_container: 2
2024-04-10 21:54:56,619:INFO:_display_container: 2
2024-04-10 21:54:56,619:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=865, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=865, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-10 21:54:56,619:INFO:compare_models() successfully completed......................................
2024-04-10 21:54:56,634:INFO:Initializing predict_model()
2024-04-10 21:54:56,634:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FB34D19710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=865, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FB356639C0>)
2024-04-10 21:54:56,634:INFO:Checking exceptions
2024-04-10 21:54:56,634:INFO:Preloading libraries
2024-04-10 21:55:07,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:55:07,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:55:07,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:55:07,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 21:55:11,330:INFO:PyCaret ClassificationExperiment
2024-04-10 21:55:11,330:INFO:Logging name: clf-default-name
2024-04-10 21:55:11,330:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-10 21:55:11,330:INFO:version 3.2.0
2024-04-10 21:55:11,330:INFO:Initializing setup()
2024-04-10 21:55:11,330:INFO:self.USI: 3c31
2024-04-10 21:55:11,330:INFO:self._variable_keys: {'fix_imbalance', 'USI', 'y_train', 'seed', 'log_plots_param', 'X_train', 'data', 'memory', 'is_multiclass', 'logging_param', 'idx', 'target_param', 'pipeline', 'gpu_param', 'y', 'exp_id', 'html_param', 'exp_name_log', 'n_jobs_param', 'fold_shuffle_param', 'X_test', 'y_test', '_available_plots', 'X', 'fold_groups_param', 'gpu_n_jobs_param', '_ml_usecase', 'fold_generator'}
2024-04-10 21:55:11,330:INFO:Checking environment
2024-04-10 21:55:11,330:INFO:python_version: 3.11.7
2024-04-10 21:55:11,330:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-10 21:55:11,330:INFO:machine: AMD64
2024-04-10 21:55:11,330:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-10 21:55:11,330:INFO:Memory: svmem(total=10575405056, available=2623361024, percent=75.2, used=7952044032, free=2623361024)
2024-04-10 21:55:11,330:INFO:Physical Core: 8
2024-04-10 21:55:11,330:INFO:Logical Core: 16
2024-04-10 21:55:11,330:INFO:Checking libraries
2024-04-10 21:55:11,330:INFO:System:
2024-04-10 21:55:11,330:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-10 21:55:11,330:INFO:executable: c:\Users\Michelle\anaconda3\python.exe
2024-04-10 21:55:11,330:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-10 21:55:11,330:INFO:PyCaret required dependencies:
2024-04-10 21:55:12,620:INFO:                 pip: 23.3.1
2024-04-10 21:55:12,620:INFO:          setuptools: 68.2.2
2024-04-10 21:55:12,620:INFO:             pycaret: 3.2.0
2024-04-10 21:55:12,620:INFO:             IPython: 8.20.0
2024-04-10 21:55:12,620:INFO:          ipywidgets: 7.6.5
2024-04-10 21:55:12,620:INFO:                tqdm: 4.65.0
2024-04-10 21:55:12,620:INFO:               numpy: 1.25.2
2024-04-10 21:55:12,620:INFO:              pandas: 1.5.3
2024-04-10 21:55:12,620:INFO:              jinja2: 3.1.3
2024-04-10 21:55:12,620:INFO:               scipy: 1.10.1
2024-04-10 21:55:12,620:INFO:              joblib: 1.2.0
2024-04-10 21:55:12,620:INFO:             sklearn: 1.2.2
2024-04-10 21:55:12,620:INFO:                pyod: 1.1.3
2024-04-10 21:55:12,620:INFO:            imblearn: 0.11.0
2024-04-10 21:55:12,620:INFO:   category_encoders: 2.6.3
2024-04-10 21:55:12,620:INFO:            lightgbm: 4.3.0
2024-04-10 21:55:12,620:INFO:               numba: 0.59.0
2024-04-10 21:55:12,620:INFO:            requests: 2.31.0
2024-04-10 21:55:12,620:INFO:          matplotlib: 3.6.0
2024-04-10 21:55:12,620:INFO:          scikitplot: 0.3.7
2024-04-10 21:55:12,620:INFO:         yellowbrick: 1.5
2024-04-10 21:55:12,620:INFO:              plotly: 5.9.0
2024-04-10 21:55:12,620:INFO:    plotly-resampler: Not installed
2024-04-10 21:55:12,620:INFO:             kaleido: 0.2.1
2024-04-10 21:55:12,620:INFO:           schemdraw: 0.15
2024-04-10 21:55:12,620:INFO:         statsmodels: 0.14.0
2024-04-10 21:55:12,620:INFO:              sktime: 0.21.1
2024-04-10 21:55:12,620:INFO:               tbats: 1.1.3
2024-04-10 21:55:12,620:INFO:            pmdarima: 2.0.4
2024-04-10 21:55:12,620:INFO:              psutil: 5.9.0
2024-04-10 21:55:12,620:INFO:          markupsafe: 2.1.3
2024-04-10 21:55:12,620:INFO:             pickle5: Not installed
2024-04-10 21:55:12,620:INFO:         cloudpickle: 2.2.1
2024-04-10 21:55:12,620:INFO:         deprecation: 2.1.0
2024-04-10 21:55:12,620:INFO:              xxhash: 3.4.1
2024-04-10 21:55:12,620:INFO:           wurlitzer: Not installed
2024-04-10 21:55:12,620:INFO:PyCaret optional dependencies:
2024-04-10 21:55:12,623:INFO:                shap: 0.44.0
2024-04-10 21:55:12,623:INFO:           interpret: Not installed
2024-04-10 21:55:12,623:INFO:                umap: Not installed
2024-04-10 21:55:12,623:INFO:     ydata_profiling: Not installed
2024-04-10 21:55:12,623:INFO:  explainerdashboard: Not installed
2024-04-10 21:55:12,623:INFO:             autoviz: Not installed
2024-04-10 21:55:12,623:INFO:           fairlearn: Not installed
2024-04-10 21:55:12,623:INFO:          deepchecks: Not installed
2024-04-10 21:55:12,623:INFO:             xgboost: Not installed
2024-04-10 21:55:12,623:INFO:            catboost: 1.2.3
2024-04-10 21:55:12,623:INFO:              kmodes: 0.12.2
2024-04-10 21:55:12,623:INFO:             mlxtend: 0.23.1
2024-04-10 21:55:12,623:INFO:       statsforecast: 1.5.0
2024-04-10 21:55:12,623:INFO:        tune_sklearn: Not installed
2024-04-10 21:55:12,623:INFO:                 ray: Not installed
2024-04-10 21:55:12,623:INFO:            hyperopt: Not installed
2024-04-10 21:55:12,623:INFO:              optuna: Not installed
2024-04-10 21:55:12,623:INFO:               skopt: Not installed
2024-04-10 21:55:12,623:INFO:              mlflow: 2.9.0
2024-04-10 21:55:12,623:INFO:              gradio: Not installed
2024-04-10 21:55:12,623:INFO:             fastapi: Not installed
2024-04-10 21:55:12,623:INFO:             uvicorn: Not installed
2024-04-10 21:55:12,623:INFO:              m2cgen: Not installed
2024-04-10 21:55:12,623:INFO:           evidently: Not installed
2024-04-10 21:55:12,623:INFO:               fugue: 0.8.7
2024-04-10 21:55:12,636:INFO:           streamlit: 1.28.0
2024-04-10 21:55:12,636:INFO:             prophet: Not installed
2024-04-10 21:55:12,636:INFO:None
2024-04-10 21:55:12,636:INFO:Set up data.
2024-04-10 21:55:12,636:INFO:Set up folding strategy.
2024-04-10 21:55:12,636:INFO:Set up train/test split.
2024-04-10 21:55:12,636:INFO:Set up data.
2024-04-10 21:55:12,636:INFO:Set up index.
2024-04-10 21:55:12,651:INFO:Assigning column types.
2024-04-10 21:55:12,651:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-10 21:55:12,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-10 21:55:12,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:55:12,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:55:12,772:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:55:12,866:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-10 21:55:12,866:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:55:12,914:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:55:12,914:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:55:12,914:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-10 21:55:12,981:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:55:13,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:55:13,011:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:55:13,075:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 21:55:13,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:55:13,106:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:55:13,106:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-10 21:55:13,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:55:13,216:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:55:13,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:55:13,319:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:55:13,319:INFO:Preparing preprocessing pipeline...
2024-04-10 21:55:13,324:INFO:Set up simple imputation.
2024-04-10 21:55:13,324:INFO:Set up feature normalization.
2024-04-10 21:55:13,351:INFO:Finished creating preprocessing pipeline.
2024-04-10 21:55:13,351:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-10 21:55:13,351:INFO:Creating final display dataframe.
2024-04-10 21:55:13,471:INFO:Setup _display_container:                     Description             Value
0                    Session id              3432
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3c31
2024-04-10 21:55:13,586:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:55:13,586:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:55:13,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 21:55:13,686:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 21:55:13,686:INFO:setup() successfully completed in 2.36s...............
2024-04-10 21:55:13,686:INFO:Initializing compare_models()
2024-04-10 21:55:13,686:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C5CE09B90>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000013C5CE09B90>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-10 21:55:13,686:INFO:Checking exceptions
2024-04-10 21:55:13,686:INFO:Preparing display monitor
2024-04-10 21:55:13,726:INFO:Initializing Logistic Regression
2024-04-10 21:55:13,726:INFO:Total runtime is 0.0 minutes
2024-04-10 21:55:13,726:INFO:SubProcess create_model() called ==================================
2024-04-10 21:55:13,726:INFO:Initializing create_model()
2024-04-10 21:55:13,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C5CE09B90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C5EE1C5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:55:13,726:INFO:Checking exceptions
2024-04-10 21:55:13,726:INFO:Importing libraries
2024-04-10 21:55:13,726:INFO:Copying training dataset
2024-04-10 21:55:13,739:INFO:Defining folds
2024-04-10 21:55:13,739:INFO:Declaring metric variables
2024-04-10 21:55:13,742:INFO:Importing untrained model
2024-04-10 21:55:13,742:INFO:Logistic Regression Imported successfully
2024-04-10 21:55:13,758:INFO:Starting cross validation
2024-04-10 21:55:13,758:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-10 21:55:21,773:INFO:Calculating mean and std
2024-04-10 21:55:21,773:INFO:Creating metrics dataframe
2024-04-10 21:55:21,780:INFO:Uploading results into container
2024-04-10 21:55:21,780:INFO:Uploading model into container now
2024-04-10 21:55:21,780:INFO:_master_model_container: 1
2024-04-10 21:55:21,780:INFO:_display_container: 2
2024-04-10 21:55:21,780:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3432, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-10 21:55:21,780:INFO:create_model() successfully completed......................................
2024-04-10 21:55:22,009:INFO:SubProcess create_model() end ==================================
2024-04-10 21:55:22,009:INFO:Creating metrics dataframe
2024-04-10 21:55:22,021:INFO:Initializing Decision Tree Classifier
2024-04-10 21:55:22,021:INFO:Total runtime is 0.13824153343836468 minutes
2024-04-10 21:55:22,024:INFO:SubProcess create_model() called ==================================
2024-04-10 21:55:22,024:INFO:Initializing create_model()
2024-04-10 21:55:22,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C5CE09B90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C5EE1C5D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:55:22,024:INFO:Checking exceptions
2024-04-10 21:55:22,024:INFO:Importing libraries
2024-04-10 21:55:22,024:INFO:Copying training dataset
2024-04-10 21:55:22,032:INFO:Defining folds
2024-04-10 21:55:22,032:INFO:Declaring metric variables
2024-04-10 21:55:22,039:INFO:Importing untrained model
2024-04-10 21:55:22,044:INFO:Decision Tree Classifier Imported successfully
2024-04-10 21:55:22,052:INFO:Starting cross validation
2024-04-10 21:55:22,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-10 21:55:28,633:INFO:Calculating mean and std
2024-04-10 21:55:28,636:INFO:Creating metrics dataframe
2024-04-10 21:55:28,642:INFO:Uploading results into container
2024-04-10 21:55:28,643:INFO:Uploading model into container now
2024-04-10 21:55:28,643:INFO:_master_model_container: 2
2024-04-10 21:55:28,643:INFO:_display_container: 2
2024-04-10 21:55:28,643:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3432, splitter='best')
2024-04-10 21:55:28,643:INFO:create_model() successfully completed......................................
2024-04-10 21:55:28,835:INFO:SubProcess create_model() end ==================================
2024-04-10 21:55:28,835:INFO:Creating metrics dataframe
2024-04-10 21:55:28,858:INFO:Initializing create_model()
2024-04-10 21:55:28,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C5CE09B90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3432, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:55:28,858:INFO:Checking exceptions
2024-04-10 21:55:28,858:INFO:Importing libraries
2024-04-10 21:55:28,858:INFO:Copying training dataset
2024-04-10 21:55:28,858:INFO:Defining folds
2024-04-10 21:55:28,858:INFO:Declaring metric variables
2024-04-10 21:55:28,858:INFO:Importing untrained model
2024-04-10 21:55:28,858:INFO:Declaring custom model
2024-04-10 21:55:28,858:INFO:Decision Tree Classifier Imported successfully
2024-04-10 21:55:28,868:INFO:Cross validation set to False
2024-04-10 21:55:28,868:INFO:Fitting Model
2024-04-10 21:55:28,943:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3432, splitter='best')
2024-04-10 21:55:28,943:INFO:create_model() successfully completed......................................
2024-04-10 21:55:29,102:INFO:Initializing create_model()
2024-04-10 21:55:29,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C5CE09B90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3432, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 21:55:29,103:INFO:Checking exceptions
2024-04-10 21:55:29,106:INFO:Importing libraries
2024-04-10 21:55:29,106:INFO:Copying training dataset
2024-04-10 21:55:29,109:INFO:Defining folds
2024-04-10 21:55:29,109:INFO:Declaring metric variables
2024-04-10 21:55:29,109:INFO:Importing untrained model
2024-04-10 21:55:29,109:INFO:Declaring custom model
2024-04-10 21:55:29,109:INFO:Logistic Regression Imported successfully
2024-04-10 21:55:29,109:INFO:Cross validation set to False
2024-04-10 21:55:29,115:INFO:Fitting Model
2024-04-10 21:55:29,143:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3432, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-10 21:55:29,143:INFO:create_model() successfully completed......................................
2024-04-10 21:55:29,291:INFO:_master_model_container: 2
2024-04-10 21:55:29,291:INFO:_display_container: 2
2024-04-10 21:55:29,291:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3432, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3432, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-10 21:55:29,291:INFO:compare_models() successfully completed......................................
2024-04-10 21:55:29,291:INFO:Initializing predict_model()
2024-04-10 21:55:29,291:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C5CE09B90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3432, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000013C57EA0180>)
2024-04-10 21:55:29,291:INFO:Checking exceptions
2024-04-10 21:55:29,291:INFO:Preloading libraries
2024-04-10 22:18:08,932:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_14532_4042cc3f11544a71aa1ed5d9e54e3df5_208a45c982bf4c22aea6bf7d5e14dd1f
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 22:18:08,932:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_14532_2ec7b06d5aeb415ca2bf4e56220eb068_d89b4e632e3547d4b700ac02e5ce34b0
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 22:18:43,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 22:18:43,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 22:18:43,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 22:18:43,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 22:18:51,610:INFO:PyCaret ClassificationExperiment
2024-04-10 22:18:51,610:INFO:Logging name: clf-default-name
2024-04-10 22:18:51,610:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-10 22:18:51,610:INFO:version 3.2.0
2024-04-10 22:18:51,610:INFO:Initializing setup()
2024-04-10 22:18:51,610:INFO:self.USI: 3a49
2024-04-10 22:18:51,610:INFO:self._variable_keys: {'seed', 'html_param', 'logging_param', 'memory', 'USI', 'target_param', 'X', 'is_multiclass', 'X_train', 'fold_generator', 'fold_groups_param', 'fold_shuffle_param', 'fix_imbalance', 'X_test', 'exp_name_log', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'y_train', 'idx', 'data', 'y_test', 'gpu_param', '_available_plots', '_ml_usecase', 'y', 'n_jobs_param', 'exp_id'}
2024-04-10 22:18:51,610:INFO:Checking environment
2024-04-10 22:18:51,610:INFO:python_version: 3.11.7
2024-04-10 22:18:51,610:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-10 22:18:51,610:INFO:machine: AMD64
2024-04-10 22:18:51,610:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-10 22:18:51,610:INFO:Memory: svmem(total=10575405056, available=2969587712, percent=71.9, used=7605817344, free=2969587712)
2024-04-10 22:18:51,610:INFO:Physical Core: 8
2024-04-10 22:18:51,610:INFO:Logical Core: 16
2024-04-10 22:18:51,610:INFO:Checking libraries
2024-04-10 22:18:51,610:INFO:System:
2024-04-10 22:18:51,610:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-10 22:18:51,626:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-10 22:18:51,626:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-10 22:18:51,626:INFO:PyCaret required dependencies:
2024-04-10 22:18:54,645:INFO:                 pip: 23.3.1
2024-04-10 22:18:54,645:INFO:          setuptools: 68.2.2
2024-04-10 22:18:54,645:INFO:             pycaret: 3.2.0
2024-04-10 22:18:54,645:INFO:             IPython: 8.20.0
2024-04-10 22:18:54,645:INFO:          ipywidgets: 7.6.5
2024-04-10 22:18:54,645:INFO:                tqdm: 4.65.0
2024-04-10 22:18:54,645:INFO:               numpy: 1.25.2
2024-04-10 22:18:54,645:INFO:              pandas: 1.5.3
2024-04-10 22:18:54,645:INFO:              jinja2: 3.1.3
2024-04-10 22:18:54,645:INFO:               scipy: 1.10.1
2024-04-10 22:18:54,645:INFO:              joblib: 1.2.0
2024-04-10 22:18:54,645:INFO:             sklearn: 1.2.2
2024-04-10 22:18:54,645:INFO:                pyod: 1.1.3
2024-04-10 22:18:54,645:INFO:            imblearn: 0.11.0
2024-04-10 22:18:54,645:INFO:   category_encoders: 2.6.3
2024-04-10 22:18:54,645:INFO:            lightgbm: 4.3.0
2024-04-10 22:18:54,645:INFO:               numba: 0.59.0
2024-04-10 22:18:54,645:INFO:            requests: 2.31.0
2024-04-10 22:18:54,645:INFO:          matplotlib: 3.6.0
2024-04-10 22:18:54,645:INFO:          scikitplot: 0.3.7
2024-04-10 22:18:54,645:INFO:         yellowbrick: 1.5
2024-04-10 22:18:54,645:INFO:              plotly: 5.9.0
2024-04-10 22:18:54,645:INFO:    plotly-resampler: Not installed
2024-04-10 22:18:54,645:INFO:             kaleido: 0.2.1
2024-04-10 22:18:54,645:INFO:           schemdraw: 0.15
2024-04-10 22:18:54,645:INFO:         statsmodels: 0.14.0
2024-04-10 22:18:54,645:INFO:              sktime: 0.21.1
2024-04-10 22:18:54,645:INFO:               tbats: 1.1.3
2024-04-10 22:18:54,645:INFO:            pmdarima: 2.0.4
2024-04-10 22:18:54,645:INFO:              psutil: 5.9.0
2024-04-10 22:18:54,645:INFO:          markupsafe: 2.1.3
2024-04-10 22:18:54,645:INFO:             pickle5: Not installed
2024-04-10 22:18:54,645:INFO:         cloudpickle: 2.2.1
2024-04-10 22:18:54,645:INFO:         deprecation: 2.1.0
2024-04-10 22:18:54,645:INFO:              xxhash: 3.4.1
2024-04-10 22:18:54,645:INFO:           wurlitzer: Not installed
2024-04-10 22:18:54,645:INFO:PyCaret optional dependencies:
2024-04-10 22:18:54,676:INFO:                shap: 0.44.0
2024-04-10 22:18:54,676:INFO:           interpret: Not installed
2024-04-10 22:18:54,676:INFO:                umap: Not installed
2024-04-10 22:18:54,676:INFO:     ydata_profiling: Not installed
2024-04-10 22:18:54,676:INFO:  explainerdashboard: Not installed
2024-04-10 22:18:54,676:INFO:             autoviz: Not installed
2024-04-10 22:18:54,676:INFO:           fairlearn: Not installed
2024-04-10 22:18:54,676:INFO:          deepchecks: Not installed
2024-04-10 22:18:54,676:INFO:             xgboost: Not installed
2024-04-10 22:18:54,676:INFO:            catboost: 1.2.3
2024-04-10 22:18:54,676:INFO:              kmodes: 0.12.2
2024-04-10 22:18:54,676:INFO:             mlxtend: 0.23.1
2024-04-10 22:18:54,676:INFO:       statsforecast: 1.5.0
2024-04-10 22:18:54,676:INFO:        tune_sklearn: Not installed
2024-04-10 22:18:54,676:INFO:                 ray: Not installed
2024-04-10 22:18:54,676:INFO:            hyperopt: Not installed
2024-04-10 22:18:54,676:INFO:              optuna: Not installed
2024-04-10 22:18:54,676:INFO:               skopt: Not installed
2024-04-10 22:18:54,676:INFO:              mlflow: 2.9.0
2024-04-10 22:18:54,692:INFO:              gradio: Not installed
2024-04-10 22:18:54,692:INFO:             fastapi: Not installed
2024-04-10 22:18:54,692:INFO:             uvicorn: Not installed
2024-04-10 22:18:54,692:INFO:              m2cgen: Not installed
2024-04-10 22:18:54,692:INFO:           evidently: Not installed
2024-04-10 22:18:54,692:INFO:               fugue: 0.8.7
2024-04-10 22:18:54,692:INFO:           streamlit: 1.28.0
2024-04-10 22:18:54,692:INFO:             prophet: Not installed
2024-04-10 22:18:54,692:INFO:None
2024-04-10 22:18:54,692:INFO:Set up data.
2024-04-10 22:18:54,708:INFO:Set up folding strategy.
2024-04-10 22:18:54,708:INFO:Set up train/test split.
2024-04-10 22:18:54,708:INFO:Set up data.
2024-04-10 22:18:54,733:INFO:Set up index.
2024-04-10 22:18:54,733:INFO:Assigning column types.
2024-04-10 22:18:54,739:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-10 22:18:54,833:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-10 22:18:54,853:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 22:18:54,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:18:54,934:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:18:55,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-10 22:18:55,099:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 22:18:55,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:18:55,147:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:18:55,162:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-10 22:18:55,241:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 22:18:55,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:18:55,303:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:18:55,398:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 22:18:55,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:18:55,461:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:18:55,461:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-10 22:18:55,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:18:55,602:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:18:55,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:18:55,743:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:18:55,775:INFO:Preparing preprocessing pipeline...
2024-04-10 22:18:55,775:INFO:Set up simple imputation.
2024-04-10 22:18:55,775:INFO:Set up feature normalization.
2024-04-10 22:18:55,885:INFO:Finished creating preprocessing pipeline.
2024-04-10 22:18:55,916:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-10 22:18:55,916:INFO:Creating final display dataframe.
2024-04-10 22:18:56,342:INFO:Setup _display_container:                     Description             Value
0                    Session id              7899
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3a49
2024-04-10 22:18:56,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:18:56,544:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:18:56,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:18:56,701:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:18:56,701:INFO:setup() successfully completed in 5.09s...............
2024-04-10 22:18:56,701:INFO:Initializing compare_models()
2024-04-10 22:18:56,701:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002044FF1A9D0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002044FF1A9D0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-10 22:18:56,701:INFO:Checking exceptions
2024-04-10 22:18:56,701:INFO:Preparing display monitor
2024-04-10 22:18:56,826:INFO:Initializing Logistic Regression
2024-04-10 22:18:56,826:INFO:Total runtime is 0.0 minutes
2024-04-10 22:18:56,842:INFO:SubProcess create_model() called ==================================
2024-04-10 22:18:56,842:INFO:Initializing create_model()
2024-04-10 22:18:56,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002044FF1A9D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204516B99D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 22:18:56,842:INFO:Checking exceptions
2024-04-10 22:18:56,842:INFO:Importing libraries
2024-04-10 22:18:56,842:INFO:Copying training dataset
2024-04-10 22:18:56,865:INFO:Defining folds
2024-04-10 22:18:56,865:INFO:Declaring metric variables
2024-04-10 22:18:56,881:INFO:Importing untrained model
2024-04-10 22:18:56,881:INFO:Logistic Regression Imported successfully
2024-04-10 22:18:56,912:INFO:Starting cross validation
2024-04-10 22:18:56,912:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-10 22:19:12,033:INFO:Calculating mean and std
2024-04-10 22:19:12,033:INFO:Creating metrics dataframe
2024-04-10 22:19:12,052:INFO:Uploading results into container
2024-04-10 22:19:12,052:INFO:Uploading model into container now
2024-04-10 22:19:12,052:INFO:_master_model_container: 1
2024-04-10 22:19:12,052:INFO:_display_container: 2
2024-04-10 22:19:12,066:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7899, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-10 22:19:12,067:INFO:create_model() successfully completed......................................
2024-04-10 22:19:12,239:INFO:SubProcess create_model() end ==================================
2024-04-10 22:19:12,239:INFO:Creating metrics dataframe
2024-04-10 22:19:12,255:INFO:Initializing Decision Tree Classifier
2024-04-10 22:19:12,270:INFO:Total runtime is 0.2571405410766602 minutes
2024-04-10 22:19:12,270:INFO:SubProcess create_model() called ==================================
2024-04-10 22:19:12,270:INFO:Initializing create_model()
2024-04-10 22:19:12,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002044FF1A9D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204516B99D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 22:19:12,270:INFO:Checking exceptions
2024-04-10 22:19:12,270:INFO:Importing libraries
2024-04-10 22:19:12,270:INFO:Copying training dataset
2024-04-10 22:19:12,286:INFO:Defining folds
2024-04-10 22:19:12,286:INFO:Declaring metric variables
2024-04-10 22:19:12,302:INFO:Importing untrained model
2024-04-10 22:19:12,317:INFO:Decision Tree Classifier Imported successfully
2024-04-10 22:19:12,333:INFO:Starting cross validation
2024-04-10 22:19:12,333:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-10 22:19:22,477:INFO:Calculating mean and std
2024-04-10 22:19:22,477:INFO:Creating metrics dataframe
2024-04-10 22:19:22,477:INFO:Uploading results into container
2024-04-10 22:19:22,493:INFO:Uploading model into container now
2024-04-10 22:19:22,493:INFO:_master_model_container: 2
2024-04-10 22:19:22,493:INFO:_display_container: 2
2024-04-10 22:19:22,493:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7899, splitter='best')
2024-04-10 22:19:22,493:INFO:create_model() successfully completed......................................
2024-04-10 22:19:22,698:INFO:SubProcess create_model() end ==================================
2024-04-10 22:19:22,698:INFO:Creating metrics dataframe
2024-04-10 22:19:22,764:INFO:Initializing create_model()
2024-04-10 22:19:22,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002044FF1A9D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7899, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 22:19:22,764:INFO:Checking exceptions
2024-04-10 22:19:22,777:INFO:Importing libraries
2024-04-10 22:19:22,777:INFO:Copying training dataset
2024-04-10 22:19:22,793:INFO:Defining folds
2024-04-10 22:19:22,793:INFO:Declaring metric variables
2024-04-10 22:19:22,793:INFO:Importing untrained model
2024-04-10 22:19:22,793:INFO:Declaring custom model
2024-04-10 22:19:22,795:INFO:Decision Tree Classifier Imported successfully
2024-04-10 22:19:22,798:INFO:Cross validation set to False
2024-04-10 22:19:22,798:INFO:Fitting Model
2024-04-10 22:19:22,880:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7899, splitter='best')
2024-04-10 22:19:22,881:INFO:create_model() successfully completed......................................
2024-04-10 22:19:23,030:INFO:Initializing create_model()
2024-04-10 22:19:23,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002044FF1A9D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7899, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 22:19:23,033:INFO:Checking exceptions
2024-04-10 22:19:23,034:INFO:Importing libraries
2024-04-10 22:19:23,034:INFO:Copying training dataset
2024-04-10 22:19:23,046:INFO:Defining folds
2024-04-10 22:19:23,046:INFO:Declaring metric variables
2024-04-10 22:19:23,046:INFO:Importing untrained model
2024-04-10 22:19:23,046:INFO:Declaring custom model
2024-04-10 22:19:23,046:INFO:Logistic Regression Imported successfully
2024-04-10 22:19:23,052:INFO:Cross validation set to False
2024-04-10 22:19:23,053:INFO:Fitting Model
2024-04-10 22:19:23,094:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7899, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-10 22:19:23,094:INFO:create_model() successfully completed......................................
2024-04-10 22:19:23,282:INFO:_master_model_container: 2
2024-04-10 22:19:23,282:INFO:_display_container: 2
2024-04-10 22:19:23,298:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7899, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7899, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-10 22:19:23,298:INFO:compare_models() successfully completed......................................
2024-04-10 22:19:23,298:INFO:Initializing predict_model()
2024-04-10 22:19:23,298:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002044FF1A9D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7899, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020452339F80>)
2024-04-10 22:19:23,298:INFO:Checking exceptions
2024-04-10 22:19:23,298:INFO:Preloading libraries
2024-04-10 22:34:26,750:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_27124_57edfffabf854ef198bd5332ba601527_774443af2b2e42038e282cc29372b5ca
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 22:34:26,766:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_27124_f1fa370b578c4a98bc1adf7e1b04d03f_bc99e02bac944e5f9eb7fb5aab55a086
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-10 22:34:37,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 22:34:37,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 22:34:37,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 22:34:37,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-10 22:34:42,531:INFO:PyCaret ClassificationExperiment
2024-04-10 22:34:42,531:INFO:Logging name: clf-default-name
2024-04-10 22:34:42,531:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-10 22:34:42,531:INFO:version 3.2.0
2024-04-10 22:34:42,531:INFO:Initializing setup()
2024-04-10 22:34:42,531:INFO:self.USI: ef2e
2024-04-10 22:34:42,531:INFO:self._variable_keys: {'fold_shuffle_param', 'html_param', 'idx', 'memory', '_ml_usecase', 'X', 'seed', '_available_plots', 'gpu_n_jobs_param', 'exp_name_log', 'USI', 'fold_generator', 'fix_imbalance', 'gpu_param', 'data', 'fold_groups_param', 'y_train', 'target_param', 'log_plots_param', 'is_multiclass', 'y_test', 'pipeline', 'y', 'X_train', 'n_jobs_param', 'logging_param', 'X_test', 'exp_id'}
2024-04-10 22:34:42,531:INFO:Checking environment
2024-04-10 22:34:42,531:INFO:python_version: 3.11.7
2024-04-10 22:34:42,531:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-10 22:34:42,531:INFO:machine: AMD64
2024-04-10 22:34:42,531:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-10 22:34:42,531:INFO:Memory: svmem(total=10575405056, available=1452429312, percent=86.3, used=9122975744, free=1452429312)
2024-04-10 22:34:42,531:INFO:Physical Core: 8
2024-04-10 22:34:42,531:INFO:Logical Core: 16
2024-04-10 22:34:42,531:INFO:Checking libraries
2024-04-10 22:34:42,531:INFO:System:
2024-04-10 22:34:42,531:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-10 22:34:42,531:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-10 22:34:42,531:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-10 22:34:42,531:INFO:PyCaret required dependencies:
2024-04-10 22:34:44,292:INFO:                 pip: 23.3.1
2024-04-10 22:34:44,292:INFO:          setuptools: 68.2.2
2024-04-10 22:34:44,292:INFO:             pycaret: 3.2.0
2024-04-10 22:34:44,292:INFO:             IPython: 8.20.0
2024-04-10 22:34:44,292:INFO:          ipywidgets: 7.6.5
2024-04-10 22:34:44,292:INFO:                tqdm: 4.65.0
2024-04-10 22:34:44,292:INFO:               numpy: 1.25.2
2024-04-10 22:34:44,292:INFO:              pandas: 1.5.3
2024-04-10 22:34:44,292:INFO:              jinja2: 3.1.3
2024-04-10 22:34:44,292:INFO:               scipy: 1.10.1
2024-04-10 22:34:44,292:INFO:              joblib: 1.2.0
2024-04-10 22:34:44,292:INFO:             sklearn: 1.2.2
2024-04-10 22:34:44,292:INFO:                pyod: 1.1.3
2024-04-10 22:34:44,292:INFO:            imblearn: 0.11.0
2024-04-10 22:34:44,292:INFO:   category_encoders: 2.6.3
2024-04-10 22:34:44,292:INFO:            lightgbm: 4.3.0
2024-04-10 22:34:44,292:INFO:               numba: 0.59.0
2024-04-10 22:34:44,292:INFO:            requests: 2.31.0
2024-04-10 22:34:44,292:INFO:          matplotlib: 3.6.0
2024-04-10 22:34:44,292:INFO:          scikitplot: 0.3.7
2024-04-10 22:34:44,292:INFO:         yellowbrick: 1.5
2024-04-10 22:34:44,292:INFO:              plotly: 5.9.0
2024-04-10 22:34:44,292:INFO:    plotly-resampler: Not installed
2024-04-10 22:34:44,292:INFO:             kaleido: 0.2.1
2024-04-10 22:34:44,292:INFO:           schemdraw: 0.15
2024-04-10 22:34:44,292:INFO:         statsmodels: 0.14.0
2024-04-10 22:34:44,292:INFO:              sktime: 0.21.1
2024-04-10 22:34:44,292:INFO:               tbats: 1.1.3
2024-04-10 22:34:44,292:INFO:            pmdarima: 2.0.4
2024-04-10 22:34:44,292:INFO:              psutil: 5.9.0
2024-04-10 22:34:44,292:INFO:          markupsafe: 2.1.3
2024-04-10 22:34:44,292:INFO:             pickle5: Not installed
2024-04-10 22:34:44,292:INFO:         cloudpickle: 2.2.1
2024-04-10 22:34:44,292:INFO:         deprecation: 2.1.0
2024-04-10 22:34:44,292:INFO:              xxhash: 3.4.1
2024-04-10 22:34:44,292:INFO:           wurlitzer: Not installed
2024-04-10 22:34:44,292:INFO:PyCaret optional dependencies:
2024-04-10 22:34:44,307:INFO:                shap: 0.44.0
2024-04-10 22:34:44,307:INFO:           interpret: Not installed
2024-04-10 22:34:44,307:INFO:                umap: Not installed
2024-04-10 22:34:44,307:INFO:     ydata_profiling: Not installed
2024-04-10 22:34:44,307:INFO:  explainerdashboard: Not installed
2024-04-10 22:34:44,307:INFO:             autoviz: Not installed
2024-04-10 22:34:44,307:INFO:           fairlearn: Not installed
2024-04-10 22:34:44,307:INFO:          deepchecks: Not installed
2024-04-10 22:34:44,307:INFO:             xgboost: Not installed
2024-04-10 22:34:44,307:INFO:            catboost: 1.2.3
2024-04-10 22:34:44,307:INFO:              kmodes: 0.12.2
2024-04-10 22:34:44,307:INFO:             mlxtend: 0.23.1
2024-04-10 22:34:44,307:INFO:       statsforecast: 1.5.0
2024-04-10 22:34:44,307:INFO:        tune_sklearn: Not installed
2024-04-10 22:34:44,307:INFO:                 ray: Not installed
2024-04-10 22:34:44,307:INFO:            hyperopt: Not installed
2024-04-10 22:34:44,307:INFO:              optuna: Not installed
2024-04-10 22:34:44,307:INFO:               skopt: Not installed
2024-04-10 22:34:44,307:INFO:              mlflow: 2.9.0
2024-04-10 22:34:44,307:INFO:              gradio: Not installed
2024-04-10 22:34:44,307:INFO:             fastapi: Not installed
2024-04-10 22:34:44,307:INFO:             uvicorn: Not installed
2024-04-10 22:34:44,307:INFO:              m2cgen: Not installed
2024-04-10 22:34:44,307:INFO:           evidently: Not installed
2024-04-10 22:34:44,307:INFO:               fugue: 0.8.7
2024-04-10 22:34:44,307:INFO:           streamlit: 1.28.0
2024-04-10 22:34:44,307:INFO:             prophet: Not installed
2024-04-10 22:34:44,307:INFO:None
2024-04-10 22:34:44,307:INFO:Set up data.
2024-04-10 22:34:44,323:INFO:Set up folding strategy.
2024-04-10 22:34:44,323:INFO:Set up train/test split.
2024-04-10 22:34:44,323:INFO:Set up data.
2024-04-10 22:34:44,323:INFO:Set up index.
2024-04-10 22:34:44,323:INFO:Assigning column types.
2024-04-10 22:34:44,323:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-10 22:34:44,449:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-10 22:34:44,449:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 22:34:44,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:34:44,543:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:34:44,684:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-10 22:34:44,684:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 22:34:44,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:34:44,747:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:34:44,747:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-10 22:34:44,826:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 22:34:44,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:34:44,872:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:34:44,967:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-10 22:34:45,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:34:45,014:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:34:45,014:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-10 22:34:45,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:34:45,140:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:34:45,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:34:45,265:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:34:45,281:INFO:Preparing preprocessing pipeline...
2024-04-10 22:34:45,281:INFO:Set up simple imputation.
2024-04-10 22:34:45,281:INFO:Set up feature normalization.
2024-04-10 22:34:45,312:INFO:Finished creating preprocessing pipeline.
2024-04-10 22:34:45,344:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-10 22:34:45,344:INFO:Creating final display dataframe.
2024-04-10 22:34:45,478:INFO:Setup _display_container:                     Description             Value
0                    Session id              2715
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              ef2e
2024-04-10 22:34:45,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:34:45,628:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:34:45,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-10 22:34:45,754:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-10 22:34:45,895:INFO:setup() successfully completed in 3.36s...............
2024-04-10 22:34:45,895:INFO:Initializing compare_models()
2024-04-10 22:34:45,895:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F4302AC50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022F4302AC50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-10 22:34:45,895:INFO:Checking exceptions
2024-04-10 22:34:45,895:INFO:Preparing display monitor
2024-04-10 22:34:45,943:INFO:Initializing Logistic Regression
2024-04-10 22:34:45,943:INFO:Total runtime is 0.0 minutes
2024-04-10 22:34:45,958:INFO:SubProcess create_model() called ==================================
2024-04-10 22:34:45,958:INFO:Initializing create_model()
2024-04-10 22:34:45,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F4302AC50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F44C21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 22:34:45,958:INFO:Checking exceptions
2024-04-10 22:34:45,958:INFO:Importing libraries
2024-04-10 22:34:45,958:INFO:Copying training dataset
2024-04-10 22:34:45,974:INFO:Defining folds
2024-04-10 22:34:45,974:INFO:Declaring metric variables
2024-04-10 22:34:45,974:INFO:Importing untrained model
2024-04-10 22:34:45,974:INFO:Logistic Regression Imported successfully
2024-04-10 22:34:45,989:INFO:Starting cross validation
2024-04-10 22:34:45,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-10 22:34:55,067:INFO:Calculating mean and std
2024-04-10 22:34:55,067:INFO:Creating metrics dataframe
2024-04-10 22:34:55,083:INFO:Uploading results into container
2024-04-10 22:34:55,083:INFO:Uploading model into container now
2024-04-10 22:34:55,083:INFO:_master_model_container: 1
2024-04-10 22:34:55,083:INFO:_display_container: 2
2024-04-10 22:34:55,083:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2715, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-10 22:34:55,083:INFO:create_model() successfully completed......................................
2024-04-10 22:34:55,304:INFO:SubProcess create_model() end ==================================
2024-04-10 22:34:55,304:INFO:Creating metrics dataframe
2024-04-10 22:34:55,304:INFO:Initializing Decision Tree Classifier
2024-04-10 22:34:55,304:INFO:Total runtime is 0.15601894855499268 minutes
2024-04-10 22:34:55,304:INFO:SubProcess create_model() called ==================================
2024-04-10 22:34:55,304:INFO:Initializing create_model()
2024-04-10 22:34:55,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F4302AC50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F44C21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 22:34:55,304:INFO:Checking exceptions
2024-04-10 22:34:55,304:INFO:Importing libraries
2024-04-10 22:34:55,304:INFO:Copying training dataset
2024-04-10 22:34:55,326:INFO:Defining folds
2024-04-10 22:34:55,326:INFO:Declaring metric variables
2024-04-10 22:34:55,332:INFO:Importing untrained model
2024-04-10 22:34:55,336:INFO:Decision Tree Classifier Imported successfully
2024-04-10 22:34:55,344:INFO:Starting cross validation
2024-04-10 22:34:55,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-10 22:35:01,845:INFO:Calculating mean and std
2024-04-10 22:35:01,845:INFO:Creating metrics dataframe
2024-04-10 22:35:01,845:INFO:Uploading results into container
2024-04-10 22:35:01,845:INFO:Uploading model into container now
2024-04-10 22:35:01,845:INFO:_master_model_container: 2
2024-04-10 22:35:01,845:INFO:_display_container: 2
2024-04-10 22:35:01,861:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2715, splitter='best')
2024-04-10 22:35:01,861:INFO:create_model() successfully completed......................................
2024-04-10 22:35:02,018:INFO:SubProcess create_model() end ==================================
2024-04-10 22:35:02,018:INFO:Creating metrics dataframe
2024-04-10 22:35:02,049:INFO:Initializing create_model()
2024-04-10 22:35:02,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F4302AC50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2715, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 22:35:02,049:INFO:Checking exceptions
2024-04-10 22:35:02,049:INFO:Importing libraries
2024-04-10 22:35:02,049:INFO:Copying training dataset
2024-04-10 22:35:02,049:INFO:Defining folds
2024-04-10 22:35:02,049:INFO:Declaring metric variables
2024-04-10 22:35:02,049:INFO:Importing untrained model
2024-04-10 22:35:02,049:INFO:Declaring custom model
2024-04-10 22:35:02,049:INFO:Decision Tree Classifier Imported successfully
2024-04-10 22:35:02,049:INFO:Cross validation set to False
2024-04-10 22:35:02,049:INFO:Fitting Model
2024-04-10 22:35:02,128:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2715, splitter='best')
2024-04-10 22:35:02,128:INFO:create_model() successfully completed......................................
2024-04-10 22:35:02,254:INFO:Initializing create_model()
2024-04-10 22:35:02,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F4302AC50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2715, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-10 22:35:02,254:INFO:Checking exceptions
2024-04-10 22:35:02,270:INFO:Importing libraries
2024-04-10 22:35:02,270:INFO:Copying training dataset
2024-04-10 22:35:02,270:INFO:Defining folds
2024-04-10 22:35:02,270:INFO:Declaring metric variables
2024-04-10 22:35:02,270:INFO:Importing untrained model
2024-04-10 22:35:02,270:INFO:Declaring custom model
2024-04-10 22:35:02,270:INFO:Logistic Regression Imported successfully
2024-04-10 22:35:02,270:INFO:Cross validation set to False
2024-04-10 22:35:02,270:INFO:Fitting Model
2024-04-10 22:35:02,306:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2715, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-10 22:35:02,306:INFO:create_model() successfully completed......................................
2024-04-10 22:35:02,484:INFO:_master_model_container: 2
2024-04-10 22:35:02,484:INFO:_display_container: 2
2024-04-10 22:35:02,484:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2715, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2715, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-10 22:35:02,484:INFO:compare_models() successfully completed......................................
2024-04-10 22:35:02,484:INFO:Initializing predict_model()
2024-04-10 22:35:02,484:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F4302AC50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2715, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F44DA2DE0>)
2024-04-10 22:35:02,484:INFO:Checking exceptions
2024-04-10 22:35:02,484:INFO:Preloading libraries
2024-04-14 15:10:32,381:INFO:PyCaret ClassificationExperiment
2024-04-14 15:10:32,381:INFO:Logging name: clf-default-name
2024-04-14 15:10:32,381:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 15:10:32,381:INFO:version 3.2.0
2024-04-14 15:10:32,381:INFO:Initializing setup()
2024-04-14 15:10:32,381:INFO:self.USI: 197d
2024-04-14 15:10:32,381:INFO:self._variable_keys: {'fold_shuffle_param', 'html_param', 'idx', 'memory', '_ml_usecase', 'X', 'seed', '_available_plots', 'gpu_n_jobs_param', 'exp_name_log', 'USI', 'fold_generator', 'fix_imbalance', 'gpu_param', 'data', 'fold_groups_param', 'y_train', 'target_param', 'log_plots_param', 'is_multiclass', 'y_test', 'pipeline', 'y', 'X_train', 'n_jobs_param', 'logging_param', 'X_test', 'exp_id'}
2024-04-14 15:10:32,381:INFO:Checking environment
2024-04-14 15:10:32,381:INFO:python_version: 3.11.7
2024-04-14 15:10:32,381:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-14 15:10:32,381:INFO:machine: AMD64
2024-04-14 15:10:32,381:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-14 15:10:32,381:INFO:Memory: svmem(total=10575405056, available=2577309696, percent=75.6, used=7998095360, free=2577309696)
2024-04-14 15:10:32,381:INFO:Physical Core: 8
2024-04-14 15:10:32,381:INFO:Logical Core: 16
2024-04-14 15:10:32,381:INFO:Checking libraries
2024-04-14 15:10:32,381:INFO:System:
2024-04-14 15:10:32,381:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-14 15:10:32,381:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-14 15:10:32,381:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-14 15:10:32,381:INFO:PyCaret required dependencies:
2024-04-14 15:10:32,381:INFO:                 pip: 23.3.1
2024-04-14 15:10:32,381:INFO:          setuptools: 68.2.2
2024-04-14 15:10:32,381:INFO:             pycaret: 3.2.0
2024-04-14 15:10:32,381:INFO:             IPython: 8.20.0
2024-04-14 15:10:32,381:INFO:          ipywidgets: 7.6.5
2024-04-14 15:10:32,381:INFO:                tqdm: 4.65.0
2024-04-14 15:10:32,381:INFO:               numpy: 1.25.2
2024-04-14 15:10:32,381:INFO:              pandas: 1.5.3
2024-04-14 15:10:32,381:INFO:              jinja2: 3.1.3
2024-04-14 15:10:32,381:INFO:               scipy: 1.10.1
2024-04-14 15:10:32,381:INFO:              joblib: 1.2.0
2024-04-14 15:10:32,381:INFO:             sklearn: 1.2.2
2024-04-14 15:10:32,381:INFO:                pyod: 1.1.3
2024-04-14 15:10:32,381:INFO:            imblearn: 0.11.0
2024-04-14 15:10:32,381:INFO:   category_encoders: 2.6.3
2024-04-14 15:10:32,381:INFO:            lightgbm: 4.3.0
2024-04-14 15:10:32,381:INFO:               numba: 0.59.0
2024-04-14 15:10:32,381:INFO:            requests: 2.31.0
2024-04-14 15:10:32,381:INFO:          matplotlib: 3.6.0
2024-04-14 15:10:32,381:INFO:          scikitplot: 0.3.7
2024-04-14 15:10:32,381:INFO:         yellowbrick: 1.5
2024-04-14 15:10:32,381:INFO:              plotly: 5.9.0
2024-04-14 15:10:32,381:INFO:    plotly-resampler: Not installed
2024-04-14 15:10:32,381:INFO:             kaleido: 0.2.1
2024-04-14 15:10:32,381:INFO:           schemdraw: 0.15
2024-04-14 15:10:32,381:INFO:         statsmodels: 0.14.0
2024-04-14 15:10:32,381:INFO:              sktime: 0.21.1
2024-04-14 15:10:32,381:INFO:               tbats: 1.1.3
2024-04-14 15:10:32,381:INFO:            pmdarima: 2.0.4
2024-04-14 15:10:32,381:INFO:              psutil: 5.9.0
2024-04-14 15:10:32,381:INFO:          markupsafe: 2.1.3
2024-04-14 15:10:32,381:INFO:             pickle5: Not installed
2024-04-14 15:10:32,381:INFO:         cloudpickle: 2.2.1
2024-04-14 15:10:32,381:INFO:         deprecation: 2.1.0
2024-04-14 15:10:32,381:INFO:              xxhash: 3.4.1
2024-04-14 15:10:32,381:INFO:           wurlitzer: Not installed
2024-04-14 15:10:32,381:INFO:PyCaret optional dependencies:
2024-04-14 15:10:32,381:INFO:                shap: 0.44.0
2024-04-14 15:10:32,381:INFO:           interpret: Not installed
2024-04-14 15:10:32,381:INFO:                umap: Not installed
2024-04-14 15:10:32,381:INFO:     ydata_profiling: Not installed
2024-04-14 15:10:32,381:INFO:  explainerdashboard: Not installed
2024-04-14 15:10:32,381:INFO:             autoviz: Not installed
2024-04-14 15:10:32,381:INFO:           fairlearn: Not installed
2024-04-14 15:10:32,381:INFO:          deepchecks: Not installed
2024-04-14 15:10:32,381:INFO:             xgboost: Not installed
2024-04-14 15:10:32,381:INFO:            catboost: 1.2.3
2024-04-14 15:10:32,381:INFO:              kmodes: 0.12.2
2024-04-14 15:10:32,381:INFO:             mlxtend: 0.23.1
2024-04-14 15:10:32,381:INFO:       statsforecast: 1.5.0
2024-04-14 15:10:32,381:INFO:        tune_sklearn: Not installed
2024-04-14 15:10:32,381:INFO:                 ray: Not installed
2024-04-14 15:10:32,381:INFO:            hyperopt: Not installed
2024-04-14 15:10:32,381:INFO:              optuna: Not installed
2024-04-14 15:10:32,381:INFO:               skopt: Not installed
2024-04-14 15:10:32,381:INFO:              mlflow: 2.9.0
2024-04-14 15:10:32,381:INFO:              gradio: Not installed
2024-04-14 15:10:32,381:INFO:             fastapi: Not installed
2024-04-14 15:10:32,381:INFO:             uvicorn: Not installed
2024-04-14 15:10:32,381:INFO:              m2cgen: Not installed
2024-04-14 15:10:32,381:INFO:           evidently: Not installed
2024-04-14 15:10:32,381:INFO:               fugue: 0.8.7
2024-04-14 15:10:32,381:INFO:           streamlit: 1.28.0
2024-04-14 15:10:32,381:INFO:             prophet: Not installed
2024-04-14 15:10:32,381:INFO:None
2024-04-14 15:10:32,381:INFO:Set up data.
2024-04-14 15:10:32,397:INFO:Set up folding strategy.
2024-04-14 15:10:32,397:INFO:Set up train/test split.
2024-04-14 15:10:32,397:INFO:Set up data.
2024-04-14 15:10:32,413:INFO:Set up index.
2024-04-14 15:10:32,413:INFO:Assigning column types.
2024-04-14 15:10:32,413:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 15:10:32,555:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 15:10:32,555:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:10:32,618:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:10:32,618:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:10:32,697:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 15:10:32,697:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:10:32,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:10:32,760:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:10:32,760:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 15:10:32,838:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:10:32,885:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:10:32,885:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:10:32,964:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:10:33,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:10:33,026:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:10:33,026:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 15:10:33,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:10:33,168:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:10:33,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:10:33,293:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:10:33,309:INFO:Preparing preprocessing pipeline...
2024-04-14 15:10:33,309:INFO:Set up simple imputation.
2024-04-14 15:10:33,309:INFO:Set up feature normalization.
2024-04-14 15:10:33,372:INFO:Finished creating preprocessing pipeline.
2024-04-14 15:10:33,372:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 15:10:33,372:INFO:Creating final display dataframe.
2024-04-14 15:10:33,513:INFO:Setup _display_container:                     Description             Value
0                    Session id              6039
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              197d
2024-04-14 15:10:33,656:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:10:33,656:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:10:33,780:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:10:33,780:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:10:33,780:INFO:setup() successfully completed in 1.41s...............
2024-04-14 15:10:33,796:INFO:Initializing compare_models()
2024-04-14 15:10:33,796:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F44C1FBD0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022F44C1FBD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-14 15:10:33,796:INFO:Checking exceptions
2024-04-14 15:10:33,796:INFO:Preparing display monitor
2024-04-14 15:10:33,843:INFO:Initializing Logistic Regression
2024-04-14 15:10:33,843:INFO:Total runtime is 0.0 minutes
2024-04-14 15:10:33,856:INFO:SubProcess create_model() called ==================================
2024-04-14 15:10:33,856:INFO:Initializing create_model()
2024-04-14 15:10:33,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F44C1FBD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F45025E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:10:33,856:INFO:Checking exceptions
2024-04-14 15:10:33,856:INFO:Importing libraries
2024-04-14 15:10:33,859:INFO:Copying training dataset
2024-04-14 15:10:33,859:INFO:Defining folds
2024-04-14 15:10:33,859:INFO:Declaring metric variables
2024-04-14 15:10:33,859:INFO:Importing untrained model
2024-04-14 15:10:33,874:INFO:Logistic Regression Imported successfully
2024-04-14 15:10:33,890:INFO:Starting cross validation
2024-04-14 15:10:33,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 15:10:43,708:INFO:Calculating mean and std
2024-04-14 15:10:43,708:INFO:Creating metrics dataframe
2024-04-14 15:10:43,723:INFO:Uploading results into container
2024-04-14 15:10:43,723:INFO:Uploading model into container now
2024-04-14 15:10:43,723:INFO:_master_model_container: 1
2024-04-14 15:10:43,723:INFO:_display_container: 2
2024-04-14 15:10:43,723:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6039, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 15:10:43,723:INFO:create_model() successfully completed......................................
2024-04-14 15:10:43,967:INFO:SubProcess create_model() end ==================================
2024-04-14 15:10:43,967:INFO:Creating metrics dataframe
2024-04-14 15:10:43,974:INFO:Initializing Decision Tree Classifier
2024-04-14 15:10:43,974:INFO:Total runtime is 0.16886398394902546 minutes
2024-04-14 15:10:43,974:INFO:SubProcess create_model() called ==================================
2024-04-14 15:10:43,974:INFO:Initializing create_model()
2024-04-14 15:10:43,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F44C1FBD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022F45025E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:10:43,974:INFO:Checking exceptions
2024-04-14 15:10:43,974:INFO:Importing libraries
2024-04-14 15:10:43,974:INFO:Copying training dataset
2024-04-14 15:10:43,990:INFO:Defining folds
2024-04-14 15:10:43,990:INFO:Declaring metric variables
2024-04-14 15:10:43,990:INFO:Importing untrained model
2024-04-14 15:10:43,990:INFO:Decision Tree Classifier Imported successfully
2024-04-14 15:10:44,006:INFO:Starting cross validation
2024-04-14 15:10:44,006:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 15:10:50,127:INFO:Calculating mean and std
2024-04-14 15:10:50,127:INFO:Creating metrics dataframe
2024-04-14 15:10:50,142:INFO:Uploading results into container
2024-04-14 15:10:50,142:INFO:Uploading model into container now
2024-04-14 15:10:50,142:INFO:_master_model_container: 2
2024-04-14 15:10:50,142:INFO:_display_container: 2
2024-04-14 15:10:50,142:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6039, splitter='best')
2024-04-14 15:10:50,142:INFO:create_model() successfully completed......................................
2024-04-14 15:10:50,378:INFO:SubProcess create_model() end ==================================
2024-04-14 15:10:50,378:INFO:Creating metrics dataframe
2024-04-14 15:10:50,394:INFO:Initializing create_model()
2024-04-14 15:10:50,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F44C1FBD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6039, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:10:50,394:INFO:Checking exceptions
2024-04-14 15:10:50,394:INFO:Importing libraries
2024-04-14 15:10:50,409:INFO:Copying training dataset
2024-04-14 15:10:50,409:INFO:Defining folds
2024-04-14 15:10:50,409:INFO:Declaring metric variables
2024-04-14 15:10:50,409:INFO:Importing untrained model
2024-04-14 15:10:50,409:INFO:Declaring custom model
2024-04-14 15:10:50,409:INFO:Decision Tree Classifier Imported successfully
2024-04-14 15:10:50,409:INFO:Cross validation set to False
2024-04-14 15:10:50,409:INFO:Fitting Model
2024-04-14 15:10:50,478:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6039, splitter='best')
2024-04-14 15:10:50,478:INFO:create_model() successfully completed......................................
2024-04-14 15:10:50,644:INFO:Initializing create_model()
2024-04-14 15:10:50,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F44C1FBD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6039, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:10:50,644:INFO:Checking exceptions
2024-04-14 15:10:50,644:INFO:Importing libraries
2024-04-14 15:10:50,644:INFO:Copying training dataset
2024-04-14 15:10:50,660:INFO:Defining folds
2024-04-14 15:10:50,660:INFO:Declaring metric variables
2024-04-14 15:10:50,660:INFO:Importing untrained model
2024-04-14 15:10:50,660:INFO:Declaring custom model
2024-04-14 15:10:50,660:INFO:Logistic Regression Imported successfully
2024-04-14 15:10:50,660:INFO:Cross validation set to False
2024-04-14 15:10:50,660:INFO:Fitting Model
2024-04-14 15:10:50,692:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6039, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 15:10:50,692:INFO:create_model() successfully completed......................................
2024-04-14 15:10:50,895:INFO:_master_model_container: 2
2024-04-14 15:10:50,895:INFO:_display_container: 2
2024-04-14 15:10:50,895:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6039, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6039, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 15:10:50,895:INFO:compare_models() successfully completed......................................
2024-04-14 15:10:50,895:INFO:Initializing predict_model()
2024-04-14 15:10:50,895:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F44C1FBD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6039, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F79EE25C0>)
2024-04-14 15:10:50,895:INFO:Checking exceptions
2024-04-14 15:10:50,895:INFO:Preloading libraries
2024-04-14 15:45:11,539:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_19516_6f0113d7d7084c9f9338e1799043dcf0_47199882b042428fb6cf794697675ec5
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-14 15:45:11,540:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_19516_194995c9eed6443c8bd52947b0f150b3_13aff97d1d0a4eeb88cfefeb616961d2
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-14 15:45:11,540:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_19516_7aa4ebde5abc4e03a70bac93fa234e23_8ae5a847e6104b17a1449ca1542ccb88
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-14 15:45:11,540:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_19516_a59ebbd4590148048d73b7f97cade8ad_2274a8f673884978885ebe6c3f696e60
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-14 15:47:27,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 15:47:27,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 15:47:27,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 15:47:27,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 15:47:30,486:INFO:PyCaret ClassificationExperiment
2024-04-14 15:47:30,486:INFO:Logging name: clf-default-name
2024-04-14 15:47:30,486:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 15:47:30,486:INFO:version 3.2.0
2024-04-14 15:47:30,486:INFO:Initializing setup()
2024-04-14 15:47:30,486:INFO:self.USI: 46f4
2024-04-14 15:47:30,486:INFO:self._variable_keys: {'exp_name_log', 'logging_param', 'log_plots_param', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'target_param', 'X_train', 'is_multiclass', 'X_test', 'data', 'idx', 'seed', 'n_jobs_param', 'USI', 'y', 'y_train', 'y_test', 'html_param', 'fold_groups_param', 'fold_generator', 'fold_shuffle_param', 'pipeline', 'X', 'fix_imbalance', 'exp_id', 'gpu_param', '_available_plots'}
2024-04-14 15:47:30,486:INFO:Checking environment
2024-04-14 15:47:30,486:INFO:python_version: 3.11.7
2024-04-14 15:47:30,486:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-14 15:47:30,486:INFO:machine: AMD64
2024-04-14 15:47:30,486:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-14 15:47:30,486:INFO:Memory: svmem(total=10575405056, available=2543075328, percent=76.0, used=8032329728, free=2543075328)
2024-04-14 15:47:30,486:INFO:Physical Core: 8
2024-04-14 15:47:30,486:INFO:Logical Core: 16
2024-04-14 15:47:30,486:INFO:Checking libraries
2024-04-14 15:47:30,486:INFO:System:
2024-04-14 15:47:30,486:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-14 15:47:30,486:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-14 15:47:30,486:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-14 15:47:30,486:INFO:PyCaret required dependencies:
2024-04-14 15:47:31,586:INFO:                 pip: 23.3.1
2024-04-14 15:47:31,586:INFO:          setuptools: 68.2.2
2024-04-14 15:47:31,586:INFO:             pycaret: 3.2.0
2024-04-14 15:47:31,586:INFO:             IPython: 8.20.0
2024-04-14 15:47:31,586:INFO:          ipywidgets: 7.6.5
2024-04-14 15:47:31,586:INFO:                tqdm: 4.65.0
2024-04-14 15:47:31,586:INFO:               numpy: 1.25.2
2024-04-14 15:47:31,586:INFO:              pandas: 1.5.3
2024-04-14 15:47:31,586:INFO:              jinja2: 3.1.3
2024-04-14 15:47:31,586:INFO:               scipy: 1.10.1
2024-04-14 15:47:31,586:INFO:              joblib: 1.2.0
2024-04-14 15:47:31,586:INFO:             sklearn: 1.2.2
2024-04-14 15:47:31,586:INFO:                pyod: 1.1.3
2024-04-14 15:47:31,586:INFO:            imblearn: 0.11.0
2024-04-14 15:47:31,586:INFO:   category_encoders: 2.6.3
2024-04-14 15:47:31,586:INFO:            lightgbm: 4.3.0
2024-04-14 15:47:31,586:INFO:               numba: 0.59.0
2024-04-14 15:47:31,586:INFO:            requests: 2.31.0
2024-04-14 15:47:31,586:INFO:          matplotlib: 3.6.0
2024-04-14 15:47:31,586:INFO:          scikitplot: 0.3.7
2024-04-14 15:47:31,586:INFO:         yellowbrick: 1.5
2024-04-14 15:47:31,586:INFO:              plotly: 5.9.0
2024-04-14 15:47:31,586:INFO:    plotly-resampler: Not installed
2024-04-14 15:47:31,586:INFO:             kaleido: 0.2.1
2024-04-14 15:47:31,586:INFO:           schemdraw: 0.15
2024-04-14 15:47:31,586:INFO:         statsmodels: 0.14.0
2024-04-14 15:47:31,586:INFO:              sktime: 0.21.1
2024-04-14 15:47:31,586:INFO:               tbats: 1.1.3
2024-04-14 15:47:31,586:INFO:            pmdarima: 2.0.4
2024-04-14 15:47:31,586:INFO:              psutil: 5.9.0
2024-04-14 15:47:31,586:INFO:          markupsafe: 2.1.3
2024-04-14 15:47:31,586:INFO:             pickle5: Not installed
2024-04-14 15:47:31,586:INFO:         cloudpickle: 2.2.1
2024-04-14 15:47:31,586:INFO:         deprecation: 2.1.0
2024-04-14 15:47:31,586:INFO:              xxhash: 3.4.1
2024-04-14 15:47:31,586:INFO:           wurlitzer: Not installed
2024-04-14 15:47:31,586:INFO:PyCaret optional dependencies:
2024-04-14 15:47:31,596:INFO:                shap: 0.44.0
2024-04-14 15:47:31,596:INFO:           interpret: Not installed
2024-04-14 15:47:31,596:INFO:                umap: Not installed
2024-04-14 15:47:31,596:INFO:     ydata_profiling: Not installed
2024-04-14 15:47:31,596:INFO:  explainerdashboard: Not installed
2024-04-14 15:47:31,596:INFO:             autoviz: Not installed
2024-04-14 15:47:31,596:INFO:           fairlearn: Not installed
2024-04-14 15:47:31,596:INFO:          deepchecks: Not installed
2024-04-14 15:47:31,596:INFO:             xgboost: Not installed
2024-04-14 15:47:31,596:INFO:            catboost: 1.2.3
2024-04-14 15:47:31,596:INFO:              kmodes: 0.12.2
2024-04-14 15:47:31,596:INFO:             mlxtend: 0.23.1
2024-04-14 15:47:31,596:INFO:       statsforecast: 1.5.0
2024-04-14 15:47:31,596:INFO:        tune_sklearn: Not installed
2024-04-14 15:47:31,596:INFO:                 ray: Not installed
2024-04-14 15:47:31,596:INFO:            hyperopt: Not installed
2024-04-14 15:47:31,596:INFO:              optuna: Not installed
2024-04-14 15:47:31,596:INFO:               skopt: Not installed
2024-04-14 15:47:31,596:INFO:              mlflow: 2.11.0
2024-04-14 15:47:31,596:INFO:              gradio: Not installed
2024-04-14 15:47:31,596:INFO:             fastapi: Not installed
2024-04-14 15:47:31,596:INFO:             uvicorn: Not installed
2024-04-14 15:47:31,596:INFO:              m2cgen: Not installed
2024-04-14 15:47:31,596:INFO:           evidently: Not installed
2024-04-14 15:47:31,596:INFO:               fugue: 0.8.7
2024-04-14 15:47:31,596:INFO:           streamlit: 1.28.0
2024-04-14 15:47:31,596:INFO:             prophet: Not installed
2024-04-14 15:47:31,596:INFO:None
2024-04-14 15:47:31,596:INFO:Set up data.
2024-04-14 15:47:31,603:INFO:Set up folding strategy.
2024-04-14 15:47:31,603:INFO:Set up train/test split.
2024-04-14 15:47:31,603:INFO:Set up data.
2024-04-14 15:47:31,606:INFO:Set up index.
2024-04-14 15:47:31,606:INFO:Assigning column types.
2024-04-14 15:47:31,606:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 15:47:31,651:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 15:47:31,657:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:47:31,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:47:31,693:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:47:31,777:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 15:47:31,777:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:47:31,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:47:31,803:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:47:31,803:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 15:47:31,851:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:47:31,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:47:31,878:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:47:31,926:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:47:31,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:47:31,954:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:47:31,954:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 15:47:32,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:47:32,025:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:47:32,099:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:47:32,099:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:47:32,099:INFO:Preparing preprocessing pipeline...
2024-04-14 15:47:32,099:INFO:Set up simple imputation.
2024-04-14 15:47:32,099:INFO:Set up feature normalization.
2024-04-14 15:47:32,129:INFO:Finished creating preprocessing pipeline.
2024-04-14 15:47:32,129:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 15:47:32,129:INFO:Creating final display dataframe.
2024-04-14 15:47:32,214:INFO:Setup _display_container:                     Description             Value
0                    Session id              8426
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              46f4
2024-04-14 15:47:32,307:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:47:32,308:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:47:32,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:47:32,379:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:47:32,379:INFO:setup() successfully completed in 1.9s...............
2024-04-14 15:47:32,379:INFO:Initializing compare_models()
2024-04-14 15:47:32,379:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8C18B10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8C18B10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-14 15:47:32,379:INFO:Checking exceptions
2024-04-14 15:47:32,386:INFO:Preparing display monitor
2024-04-14 15:47:32,417:INFO:Initializing Logistic Regression
2024-04-14 15:47:32,417:INFO:Total runtime is 0.0 minutes
2024-04-14 15:47:32,421:INFO:SubProcess create_model() called ==================================
2024-04-14 15:47:32,422:INFO:Initializing create_model()
2024-04-14 15:47:32,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8C18B10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000272F11AF490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:47:32,423:INFO:Checking exceptions
2024-04-14 15:47:32,423:INFO:Importing libraries
2024-04-14 15:47:32,423:INFO:Copying training dataset
2024-04-14 15:47:32,429:INFO:Defining folds
2024-04-14 15:47:32,429:INFO:Declaring metric variables
2024-04-14 15:47:32,430:INFO:Importing untrained model
2024-04-14 15:47:32,430:INFO:Logistic Regression Imported successfully
2024-04-14 15:47:32,442:INFO:Starting cross validation
2024-04-14 15:47:32,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 15:47:40,784:INFO:Calculating mean and std
2024-04-14 15:47:40,786:INFO:Creating metrics dataframe
2024-04-14 15:47:40,794:INFO:Uploading results into container
2024-04-14 15:47:40,796:INFO:Uploading model into container now
2024-04-14 15:47:40,797:INFO:_master_model_container: 1
2024-04-14 15:47:40,797:INFO:_display_container: 2
2024-04-14 15:47:40,798:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8426, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 15:47:40,798:INFO:create_model() successfully completed......................................
2024-04-14 15:47:40,985:INFO:SubProcess create_model() end ==================================
2024-04-14 15:47:40,985:INFO:Creating metrics dataframe
2024-04-14 15:47:40,995:INFO:Initializing Decision Tree Classifier
2024-04-14 15:47:40,995:INFO:Total runtime is 0.14296424388885498 minutes
2024-04-14 15:47:40,997:INFO:SubProcess create_model() called ==================================
2024-04-14 15:47:40,999:INFO:Initializing create_model()
2024-04-14 15:47:40,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8C18B10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000272F11AF490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:47:40,999:INFO:Checking exceptions
2024-04-14 15:47:40,999:INFO:Importing libraries
2024-04-14 15:47:40,999:INFO:Copying training dataset
2024-04-14 15:47:41,006:INFO:Defining folds
2024-04-14 15:47:41,006:INFO:Declaring metric variables
2024-04-14 15:47:41,009:INFO:Importing untrained model
2024-04-14 15:47:41,013:INFO:Decision Tree Classifier Imported successfully
2024-04-14 15:47:41,013:INFO:Starting cross validation
2024-04-14 15:47:41,022:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 15:47:47,003:INFO:Calculating mean and std
2024-04-14 15:47:47,003:INFO:Creating metrics dataframe
2024-04-14 15:47:47,019:INFO:Uploading results into container
2024-04-14 15:47:47,019:INFO:Uploading model into container now
2024-04-14 15:47:47,019:INFO:_master_model_container: 2
2024-04-14 15:47:47,019:INFO:_display_container: 2
2024-04-14 15:47:47,019:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8426, splitter='best')
2024-04-14 15:47:47,019:INFO:create_model() successfully completed......................................
2024-04-14 15:47:47,148:INFO:SubProcess create_model() end ==================================
2024-04-14 15:47:47,148:INFO:Creating metrics dataframe
2024-04-14 15:47:47,175:INFO:Initializing create_model()
2024-04-14 15:47:47,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8C18B10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8426, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:47:47,175:INFO:Checking exceptions
2024-04-14 15:47:47,178:INFO:Importing libraries
2024-04-14 15:47:47,178:INFO:Copying training dataset
2024-04-14 15:47:47,182:INFO:Defining folds
2024-04-14 15:47:47,182:INFO:Declaring metric variables
2024-04-14 15:47:47,182:INFO:Importing untrained model
2024-04-14 15:47:47,182:INFO:Declaring custom model
2024-04-14 15:47:47,182:INFO:Decision Tree Classifier Imported successfully
2024-04-14 15:47:47,184:INFO:Cross validation set to False
2024-04-14 15:47:47,184:INFO:Fitting Model
2024-04-14 15:47:47,239:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8426, splitter='best')
2024-04-14 15:47:47,239:INFO:create_model() successfully completed......................................
2024-04-14 15:47:47,356:INFO:Initializing create_model()
2024-04-14 15:47:47,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8C18B10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8426, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:47:47,356:INFO:Checking exceptions
2024-04-14 15:47:47,365:INFO:Importing libraries
2024-04-14 15:47:47,365:INFO:Copying training dataset
2024-04-14 15:47:47,371:INFO:Defining folds
2024-04-14 15:47:47,371:INFO:Declaring metric variables
2024-04-14 15:47:47,371:INFO:Importing untrained model
2024-04-14 15:47:47,371:INFO:Declaring custom model
2024-04-14 15:47:47,371:INFO:Logistic Regression Imported successfully
2024-04-14 15:47:47,373:INFO:Cross validation set to False
2024-04-14 15:47:47,373:INFO:Fitting Model
2024-04-14 15:47:47,394:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8426, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 15:47:47,394:INFO:create_model() successfully completed......................................
2024-04-14 15:47:47,526:INFO:_master_model_container: 2
2024-04-14 15:47:47,526:INFO:_display_container: 2
2024-04-14 15:47:47,526:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8426, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8426, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 15:47:47,526:INFO:compare_models() successfully completed......................................
2024-04-14 15:47:47,526:INFO:Initializing predict_model()
2024-04-14 15:47:47,526:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8C18B10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8426, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000272BA9CD3A0>)
2024-04-14 15:47:47,526:INFO:Checking exceptions
2024-04-14 15:47:47,526:INFO:Preloading libraries
2024-04-14 15:52:32,174:INFO:PyCaret ClassificationExperiment
2024-04-14 15:52:32,174:INFO:Logging name: clf-default-name
2024-04-14 15:52:32,174:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 15:52:32,174:INFO:version 3.2.0
2024-04-14 15:52:32,174:INFO:Initializing setup()
2024-04-14 15:52:32,174:INFO:self.USI: 8683
2024-04-14 15:52:32,174:INFO:self._variable_keys: {'exp_name_log', 'logging_param', 'log_plots_param', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'target_param', 'X_train', 'is_multiclass', 'X_test', 'data', 'idx', 'seed', 'n_jobs_param', 'USI', 'y', 'y_train', 'y_test', 'html_param', 'fold_groups_param', 'fold_generator', 'fold_shuffle_param', 'pipeline', 'X', 'fix_imbalance', 'exp_id', 'gpu_param', '_available_plots'}
2024-04-14 15:52:32,174:INFO:Checking environment
2024-04-14 15:52:32,174:INFO:python_version: 3.11.7
2024-04-14 15:52:32,174:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-14 15:52:32,174:INFO:machine: AMD64
2024-04-14 15:52:32,174:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-14 15:52:32,174:INFO:Memory: svmem(total=10575405056, available=3158982656, percent=70.1, used=7416422400, free=3158982656)
2024-04-14 15:52:32,174:INFO:Physical Core: 8
2024-04-14 15:52:32,174:INFO:Logical Core: 16
2024-04-14 15:52:32,174:INFO:Checking libraries
2024-04-14 15:52:32,174:INFO:System:
2024-04-14 15:52:32,174:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-14 15:52:32,174:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-14 15:52:32,174:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-14 15:52:32,174:INFO:PyCaret required dependencies:
2024-04-14 15:52:32,174:INFO:                 pip: 23.3.1
2024-04-14 15:52:32,174:INFO:          setuptools: 68.2.2
2024-04-14 15:52:32,174:INFO:             pycaret: 3.2.0
2024-04-14 15:52:32,174:INFO:             IPython: 8.20.0
2024-04-14 15:52:32,174:INFO:          ipywidgets: 7.6.5
2024-04-14 15:52:32,174:INFO:                tqdm: 4.65.0
2024-04-14 15:52:32,174:INFO:               numpy: 1.25.2
2024-04-14 15:52:32,174:INFO:              pandas: 1.5.3
2024-04-14 15:52:32,174:INFO:              jinja2: 3.1.3
2024-04-14 15:52:32,174:INFO:               scipy: 1.10.1
2024-04-14 15:52:32,174:INFO:              joblib: 1.2.0
2024-04-14 15:52:32,174:INFO:             sklearn: 1.2.2
2024-04-14 15:52:32,174:INFO:                pyod: 1.1.3
2024-04-14 15:52:32,174:INFO:            imblearn: 0.11.0
2024-04-14 15:52:32,174:INFO:   category_encoders: 2.6.3
2024-04-14 15:52:32,174:INFO:            lightgbm: 4.3.0
2024-04-14 15:52:32,174:INFO:               numba: 0.59.0
2024-04-14 15:52:32,174:INFO:            requests: 2.31.0
2024-04-14 15:52:32,174:INFO:          matplotlib: 3.6.0
2024-04-14 15:52:32,174:INFO:          scikitplot: 0.3.7
2024-04-14 15:52:32,174:INFO:         yellowbrick: 1.5
2024-04-14 15:52:32,174:INFO:              plotly: 5.9.0
2024-04-14 15:52:32,174:INFO:    plotly-resampler: Not installed
2024-04-14 15:52:32,174:INFO:             kaleido: 0.2.1
2024-04-14 15:52:32,174:INFO:           schemdraw: 0.15
2024-04-14 15:52:32,174:INFO:         statsmodels: 0.14.0
2024-04-14 15:52:32,174:INFO:              sktime: 0.21.1
2024-04-14 15:52:32,174:INFO:               tbats: 1.1.3
2024-04-14 15:52:32,174:INFO:            pmdarima: 2.0.4
2024-04-14 15:52:32,174:INFO:              psutil: 5.9.0
2024-04-14 15:52:32,174:INFO:          markupsafe: 2.1.3
2024-04-14 15:52:32,174:INFO:             pickle5: Not installed
2024-04-14 15:52:32,174:INFO:         cloudpickle: 2.2.1
2024-04-14 15:52:32,174:INFO:         deprecation: 2.1.0
2024-04-14 15:52:32,174:INFO:              xxhash: 3.4.1
2024-04-14 15:52:32,174:INFO:           wurlitzer: Not installed
2024-04-14 15:52:32,174:INFO:PyCaret optional dependencies:
2024-04-14 15:52:32,174:INFO:                shap: 0.44.0
2024-04-14 15:52:32,174:INFO:           interpret: Not installed
2024-04-14 15:52:32,174:INFO:                umap: Not installed
2024-04-14 15:52:32,174:INFO:     ydata_profiling: Not installed
2024-04-14 15:52:32,174:INFO:  explainerdashboard: Not installed
2024-04-14 15:52:32,174:INFO:             autoviz: Not installed
2024-04-14 15:52:32,174:INFO:           fairlearn: Not installed
2024-04-14 15:52:32,174:INFO:          deepchecks: Not installed
2024-04-14 15:52:32,174:INFO:             xgboost: Not installed
2024-04-14 15:52:32,174:INFO:            catboost: 1.2.3
2024-04-14 15:52:32,174:INFO:              kmodes: 0.12.2
2024-04-14 15:52:32,174:INFO:             mlxtend: 0.23.1
2024-04-14 15:52:32,174:INFO:       statsforecast: 1.5.0
2024-04-14 15:52:32,174:INFO:        tune_sklearn: Not installed
2024-04-14 15:52:32,174:INFO:                 ray: Not installed
2024-04-14 15:52:32,174:INFO:            hyperopt: Not installed
2024-04-14 15:52:32,174:INFO:              optuna: Not installed
2024-04-14 15:52:32,174:INFO:               skopt: Not installed
2024-04-14 15:52:32,174:INFO:              mlflow: 2.11.0
2024-04-14 15:52:32,174:INFO:              gradio: Not installed
2024-04-14 15:52:32,174:INFO:             fastapi: Not installed
2024-04-14 15:52:32,174:INFO:             uvicorn: Not installed
2024-04-14 15:52:32,174:INFO:              m2cgen: Not installed
2024-04-14 15:52:32,174:INFO:           evidently: Not installed
2024-04-14 15:52:32,174:INFO:               fugue: 0.8.7
2024-04-14 15:52:32,174:INFO:           streamlit: 1.28.0
2024-04-14 15:52:32,174:INFO:             prophet: Not installed
2024-04-14 15:52:32,174:INFO:None
2024-04-14 15:52:32,174:INFO:Set up data.
2024-04-14 15:52:32,184:INFO:Set up folding strategy.
2024-04-14 15:52:32,184:INFO:Set up train/test split.
2024-04-14 15:52:32,184:INFO:Set up data.
2024-04-14 15:52:32,191:INFO:Set up index.
2024-04-14 15:52:32,191:INFO:Assigning column types.
2024-04-14 15:52:32,191:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 15:52:32,248:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 15:52:32,248:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:52:32,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:52:32,289:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:52:32,350:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 15:52:32,350:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:52:32,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:52:32,391:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:52:32,391:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 15:52:32,437:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:52:32,487:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:52:32,487:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:52:32,534:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 15:52:32,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:52:32,732:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:52:32,732:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 15:52:32,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:52:32,826:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:52:32,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:52:32,929:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:52:32,929:INFO:Preparing preprocessing pipeline...
2024-04-14 15:52:32,929:INFO:Set up simple imputation.
2024-04-14 15:52:32,929:INFO:Set up feature normalization.
2024-04-14 15:52:32,969:INFO:Finished creating preprocessing pipeline.
2024-04-14 15:52:32,978:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 15:52:32,979:INFO:Creating final display dataframe.
2024-04-14 15:52:33,073:INFO:Setup _display_container:                     Description             Value
0                    Session id              3087
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              8683
2024-04-14 15:52:33,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:52:33,191:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:52:33,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 15:52:33,286:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 15:52:33,287:INFO:setup() successfully completed in 1.11s...............
2024-04-14 15:52:33,288:INFO:Initializing compare_models()
2024-04-14 15:52:33,288:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8D68190>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8D68190>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-14 15:52:33,288:INFO:Checking exceptions
2024-04-14 15:52:33,292:INFO:Preparing display monitor
2024-04-14 15:52:33,325:INFO:Initializing Logistic Regression
2024-04-14 15:52:33,325:INFO:Total runtime is 0.0 minutes
2024-04-14 15:52:33,326:INFO:SubProcess create_model() called ==================================
2024-04-14 15:52:33,330:INFO:Initializing create_model()
2024-04-14 15:52:33,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8D68190>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000272B8D81D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:52:33,331:INFO:Checking exceptions
2024-04-14 15:52:33,331:INFO:Importing libraries
2024-04-14 15:52:33,331:INFO:Copying training dataset
2024-04-14 15:52:33,338:INFO:Defining folds
2024-04-14 15:52:33,338:INFO:Declaring metric variables
2024-04-14 15:52:33,341:INFO:Importing untrained model
2024-04-14 15:52:33,343:INFO:Logistic Regression Imported successfully
2024-04-14 15:52:33,357:INFO:Starting cross validation
2024-04-14 15:52:33,357:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 15:52:41,685:INFO:Calculating mean and std
2024-04-14 15:52:41,702:INFO:Creating metrics dataframe
2024-04-14 15:52:41,707:INFO:Uploading results into container
2024-04-14 15:52:41,709:INFO:Uploading model into container now
2024-04-14 15:52:41,709:INFO:_master_model_container: 1
2024-04-14 15:52:41,711:INFO:_display_container: 2
2024-04-14 15:52:41,711:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3087, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 15:52:41,712:INFO:create_model() successfully completed......................................
2024-04-14 15:52:41,939:INFO:SubProcess create_model() end ==================================
2024-04-14 15:52:41,939:INFO:Creating metrics dataframe
2024-04-14 15:52:41,962:INFO:Initializing Decision Tree Classifier
2024-04-14 15:52:41,962:INFO:Total runtime is 0.1439562161763509 minutes
2024-04-14 15:52:41,965:INFO:SubProcess create_model() called ==================================
2024-04-14 15:52:41,965:INFO:Initializing create_model()
2024-04-14 15:52:41,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8D68190>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000272B8D81D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:52:41,965:INFO:Checking exceptions
2024-04-14 15:52:41,965:INFO:Importing libraries
2024-04-14 15:52:41,965:INFO:Copying training dataset
2024-04-14 15:52:41,971:INFO:Defining folds
2024-04-14 15:52:41,977:INFO:Declaring metric variables
2024-04-14 15:52:41,980:INFO:Importing untrained model
2024-04-14 15:52:41,985:INFO:Decision Tree Classifier Imported successfully
2024-04-14 15:52:41,991:INFO:Starting cross validation
2024-04-14 15:52:41,991:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 15:52:47,888:INFO:Calculating mean and std
2024-04-14 15:52:47,904:INFO:Creating metrics dataframe
2024-04-14 15:52:47,904:INFO:Uploading results into container
2024-04-14 15:52:47,904:INFO:Uploading model into container now
2024-04-14 15:52:47,904:INFO:_master_model_container: 2
2024-04-14 15:52:47,904:INFO:_display_container: 2
2024-04-14 15:52:47,904:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3087, splitter='best')
2024-04-14 15:52:47,904:INFO:create_model() successfully completed......................................
2024-04-14 15:52:48,081:INFO:SubProcess create_model() end ==================================
2024-04-14 15:52:48,081:INFO:Creating metrics dataframe
2024-04-14 15:52:48,112:INFO:Initializing create_model()
2024-04-14 15:52:48,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8D68190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3087, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:52:48,112:INFO:Checking exceptions
2024-04-14 15:52:48,114:INFO:Importing libraries
2024-04-14 15:52:48,116:INFO:Copying training dataset
2024-04-14 15:52:48,121:INFO:Defining folds
2024-04-14 15:52:48,121:INFO:Declaring metric variables
2024-04-14 15:52:48,121:INFO:Importing untrained model
2024-04-14 15:52:48,121:INFO:Declaring custom model
2024-04-14 15:52:48,121:INFO:Decision Tree Classifier Imported successfully
2024-04-14 15:52:48,121:INFO:Cross validation set to False
2024-04-14 15:52:48,121:INFO:Fitting Model
2024-04-14 15:52:48,201:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3087, splitter='best')
2024-04-14 15:52:48,201:INFO:create_model() successfully completed......................................
2024-04-14 15:52:48,357:INFO:Initializing create_model()
2024-04-14 15:52:48,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8D68190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3087, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 15:52:48,357:INFO:Checking exceptions
2024-04-14 15:52:48,358:INFO:Importing libraries
2024-04-14 15:52:48,359:INFO:Copying training dataset
2024-04-14 15:52:48,364:INFO:Defining folds
2024-04-14 15:52:48,364:INFO:Declaring metric variables
2024-04-14 15:52:48,364:INFO:Importing untrained model
2024-04-14 15:52:48,364:INFO:Declaring custom model
2024-04-14 15:52:48,364:INFO:Logistic Regression Imported successfully
2024-04-14 15:52:48,364:INFO:Cross validation set to False
2024-04-14 15:52:48,364:INFO:Fitting Model
2024-04-14 15:52:48,396:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3087, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 15:52:48,396:INFO:create_model() successfully completed......................................
2024-04-14 15:52:48,575:INFO:_master_model_container: 2
2024-04-14 15:52:48,575:INFO:_display_container: 2
2024-04-14 15:52:48,576:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3087, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3087, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 15:52:48,576:INFO:compare_models() successfully completed......................................
2024-04-14 15:52:48,576:INFO:Initializing predict_model()
2024-04-14 15:52:48,576:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000272B8D68190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3087, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000272B61BAB60>)
2024-04-14 15:52:48,576:INFO:Checking exceptions
2024-04-14 15:52:48,576:INFO:Preloading libraries
2024-04-14 16:06:18,452:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_4348_8f0b52f16410401580ab2639177bf044_93b95124ea574d49a8836b5688bb8830
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-14 16:06:18,452:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_4348_42a5da3fbcc94271872c0f4158b68c39_a31dad49424649039a8cbe2eed0a5bc2
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-14 16:06:18,453:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_4348_c157d4c419534a79a7c82f03c9f11f9c_b59547f972ad43f2bc284d73694c49f2
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-14 16:06:18,453:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_4348_5cc485f8c37c4ac7a5e7af63ba13693f_1527b5a7849546e89d94a73cd2825806
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-14 16:07:36,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:07:36,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:07:36,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:07:36,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:07:39,693:INFO:PyCaret ClassificationExperiment
2024-04-14 16:07:39,693:INFO:Logging name: clf-default-name
2024-04-14 16:07:39,693:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 16:07:39,693:INFO:version 3.2.0
2024-04-14 16:07:39,693:INFO:Initializing setup()
2024-04-14 16:07:39,693:INFO:self.USI: 50f3
2024-04-14 16:07:39,693:INFO:self._variable_keys: {'gpu_param', '_ml_usecase', 'is_multiclass', 'exp_id', 'y_train', 'logging_param', '_available_plots', 'fold_shuffle_param', 'fold_groups_param', 'html_param', 'n_jobs_param', 'y_test', 'USI', 'exp_name_log', 'fix_imbalance', 'pipeline', 'target_param', 'seed', 'idx', 'fold_generator', 'y', 'X', 'gpu_n_jobs_param', 'log_plots_param', 'X_train', 'memory', 'data', 'X_test'}
2024-04-14 16:07:39,693:INFO:Checking environment
2024-04-14 16:07:39,693:INFO:python_version: 3.11.7
2024-04-14 16:07:39,693:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-14 16:07:39,693:INFO:machine: AMD64
2024-04-14 16:07:39,693:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-14 16:07:39,693:INFO:Memory: svmem(total=10575405056, available=3331567616, percent=68.5, used=7243837440, free=3331567616)
2024-04-14 16:07:39,693:INFO:Physical Core: 8
2024-04-14 16:07:39,693:INFO:Logical Core: 16
2024-04-14 16:07:39,693:INFO:Checking libraries
2024-04-14 16:07:39,693:INFO:System:
2024-04-14 16:07:39,694:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-14 16:07:39,694:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-14 16:07:39,694:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-14 16:07:39,694:INFO:PyCaret required dependencies:
2024-04-14 16:07:40,682:INFO:                 pip: 23.3.1
2024-04-14 16:07:40,682:INFO:          setuptools: 68.2.2
2024-04-14 16:07:40,682:INFO:             pycaret: 3.2.0
2024-04-14 16:07:40,682:INFO:             IPython: 8.20.0
2024-04-14 16:07:40,682:INFO:          ipywidgets: 7.6.5
2024-04-14 16:07:40,682:INFO:                tqdm: 4.65.0
2024-04-14 16:07:40,682:INFO:               numpy: 1.25.2
2024-04-14 16:07:40,682:INFO:              pandas: 1.5.3
2024-04-14 16:07:40,682:INFO:              jinja2: 3.1.3
2024-04-14 16:07:40,682:INFO:               scipy: 1.10.1
2024-04-14 16:07:40,682:INFO:              joblib: 1.2.0
2024-04-14 16:07:40,682:INFO:             sklearn: 1.2.2
2024-04-14 16:07:40,682:INFO:                pyod: 1.1.3
2024-04-14 16:07:40,682:INFO:            imblearn: 0.11.0
2024-04-14 16:07:40,682:INFO:   category_encoders: 2.6.3
2024-04-14 16:07:40,682:INFO:            lightgbm: 4.3.0
2024-04-14 16:07:40,682:INFO:               numba: 0.59.0
2024-04-14 16:07:40,682:INFO:            requests: 2.31.0
2024-04-14 16:07:40,682:INFO:          matplotlib: 3.6.0
2024-04-14 16:07:40,682:INFO:          scikitplot: 0.3.7
2024-04-14 16:07:40,682:INFO:         yellowbrick: 1.5
2024-04-14 16:07:40,682:INFO:              plotly: 5.9.0
2024-04-14 16:07:40,682:INFO:    plotly-resampler: Not installed
2024-04-14 16:07:40,682:INFO:             kaleido: 0.2.1
2024-04-14 16:07:40,682:INFO:           schemdraw: 0.15
2024-04-14 16:07:40,682:INFO:         statsmodels: 0.14.0
2024-04-14 16:07:40,682:INFO:              sktime: 0.21.1
2024-04-14 16:07:40,682:INFO:               tbats: 1.1.3
2024-04-14 16:07:40,682:INFO:            pmdarima: 2.0.4
2024-04-14 16:07:40,682:INFO:              psutil: 5.9.0
2024-04-14 16:07:40,682:INFO:          markupsafe: 2.1.3
2024-04-14 16:07:40,682:INFO:             pickle5: Not installed
2024-04-14 16:07:40,682:INFO:         cloudpickle: 2.2.1
2024-04-14 16:07:40,682:INFO:         deprecation: 2.1.0
2024-04-14 16:07:40,682:INFO:              xxhash: 3.4.1
2024-04-14 16:07:40,682:INFO:           wurlitzer: Not installed
2024-04-14 16:07:40,682:INFO:PyCaret optional dependencies:
2024-04-14 16:07:40,698:INFO:                shap: 0.44.0
2024-04-14 16:07:40,698:INFO:           interpret: Not installed
2024-04-14 16:07:40,698:INFO:                umap: Not installed
2024-04-14 16:07:40,698:INFO:     ydata_profiling: Not installed
2024-04-14 16:07:40,698:INFO:  explainerdashboard: Not installed
2024-04-14 16:07:40,698:INFO:             autoviz: Not installed
2024-04-14 16:07:40,698:INFO:           fairlearn: Not installed
2024-04-14 16:07:40,698:INFO:          deepchecks: Not installed
2024-04-14 16:07:40,698:INFO:             xgboost: Not installed
2024-04-14 16:07:40,698:INFO:            catboost: 1.2.3
2024-04-14 16:07:40,698:INFO:              kmodes: 0.12.2
2024-04-14 16:07:40,698:INFO:             mlxtend: 0.23.1
2024-04-14 16:07:40,698:INFO:       statsforecast: 1.5.0
2024-04-14 16:07:40,698:INFO:        tune_sklearn: Not installed
2024-04-14 16:07:40,698:INFO:                 ray: Not installed
2024-04-14 16:07:40,698:INFO:            hyperopt: Not installed
2024-04-14 16:07:40,698:INFO:              optuna: Not installed
2024-04-14 16:07:40,698:INFO:               skopt: Not installed
2024-04-14 16:07:40,698:INFO:              mlflow: 2.11.0
2024-04-14 16:07:40,698:INFO:              gradio: Not installed
2024-04-14 16:07:40,698:INFO:             fastapi: Not installed
2024-04-14 16:07:40,698:INFO:             uvicorn: Not installed
2024-04-14 16:07:40,698:INFO:              m2cgen: Not installed
2024-04-14 16:07:40,698:INFO:           evidently: Not installed
2024-04-14 16:07:40,698:INFO:               fugue: 0.8.7
2024-04-14 16:07:40,698:INFO:           streamlit: 1.28.0
2024-04-14 16:07:40,698:INFO:             prophet: Not installed
2024-04-14 16:07:40,698:INFO:None
2024-04-14 16:07:40,698:INFO:Set up data.
2024-04-14 16:07:40,698:INFO:Set up folding strategy.
2024-04-14 16:07:40,698:INFO:Set up train/test split.
2024-04-14 16:07:40,698:INFO:Set up data.
2024-04-14 16:07:40,698:INFO:Set up index.
2024-04-14 16:07:40,698:INFO:Assigning column types.
2024-04-14 16:07:40,714:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 16:07:40,758:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:07:40,770:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:07:40,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:07:40,803:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 16:07:40,880:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:07:40,880:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:07:40,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:07:40,911:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 16:07:40,911:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 16:07:40,960:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:07:40,974:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:07:40,974:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 16:07:41,034:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:07:41,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:07:41,061:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 16:07:41,061:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 16:07:41,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:07:41,134:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 16:07:41,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:07:41,196:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 16:07:41,211:INFO:Preparing preprocessing pipeline...
2024-04-14 16:07:41,211:INFO:Set up simple imputation.
2024-04-14 16:07:41,211:INFO:Set up feature normalization.
2024-04-14 16:07:41,229:INFO:Finished creating preprocessing pipeline.
2024-04-14 16:07:41,243:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-14 16:07:41,243:INFO:Creating final display dataframe.
2024-04-14 16:07:41,306:INFO:Setup _display_container:                     Description             Value
0                    Session id               502
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              50f3
2024-04-14 16:07:41,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:07:41,522:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 16:07:41,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:07:41,597:INFO:Soft dependency imported: catboost: 1.2.3
2024-04-14 16:07:41,597:INFO:setup() successfully completed in 1.91s...............
2024-04-14 16:07:41,597:INFO:Initializing compare_models()
2024-04-14 16:07:41,597:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000295301A4150>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000295301A4150>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-14 16:07:41,597:INFO:Checking exceptions
2024-04-14 16:07:41,601:INFO:Preparing display monitor
2024-04-14 16:07:41,640:INFO:Initializing Logistic Regression
2024-04-14 16:07:41,640:INFO:Total runtime is 0.0 minutes
2024-04-14 16:07:41,643:INFO:SubProcess create_model() called ==================================
2024-04-14 16:07:41,645:INFO:Initializing create_model()
2024-04-14 16:07:41,645:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000295301A4150>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029531EBC210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:07:41,645:INFO:Checking exceptions
2024-04-14 16:07:41,645:INFO:Importing libraries
2024-04-14 16:07:41,645:INFO:Copying training dataset
2024-04-14 16:07:41,651:INFO:Defining folds
2024-04-14 16:07:41,651:INFO:Declaring metric variables
2024-04-14 16:07:41,655:INFO:Importing untrained model
2024-04-14 16:07:41,658:INFO:Logistic Regression Imported successfully
2024-04-14 16:07:41,666:INFO:Starting cross validation
2024-04-14 16:07:41,666:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:07:49,643:INFO:Calculating mean and std
2024-04-14 16:07:49,645:INFO:Creating metrics dataframe
2024-04-14 16:07:49,651:INFO:Uploading results into container
2024-04-14 16:07:49,653:INFO:Uploading model into container now
2024-04-14 16:07:49,653:INFO:_master_model_container: 1
2024-04-14 16:07:49,653:INFO:_display_container: 2
2024-04-14 16:07:49,653:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=502, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 16:07:49,653:INFO:create_model() successfully completed......................................
2024-04-14 16:07:49,832:INFO:SubProcess create_model() end ==================================
2024-04-14 16:07:49,832:INFO:Creating metrics dataframe
2024-04-14 16:07:49,848:INFO:Initializing Decision Tree Classifier
2024-04-14 16:07:49,848:INFO:Total runtime is 0.1367900570233663 minutes
2024-04-14 16:07:49,848:INFO:SubProcess create_model() called ==================================
2024-04-14 16:07:49,848:INFO:Initializing create_model()
2024-04-14 16:07:49,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000295301A4150>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029531EBC210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:07:49,848:INFO:Checking exceptions
2024-04-14 16:07:49,860:INFO:Importing libraries
2024-04-14 16:07:49,860:INFO:Copying training dataset
2024-04-14 16:07:49,865:INFO:Defining folds
2024-04-14 16:07:49,865:INFO:Declaring metric variables
2024-04-14 16:07:49,869:INFO:Importing untrained model
2024-04-14 16:07:49,873:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:07:49,880:INFO:Starting cross validation
2024-04-14 16:07:49,881:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:07:55,786:INFO:Calculating mean and std
2024-04-14 16:07:55,788:INFO:Creating metrics dataframe
2024-04-14 16:07:55,794:INFO:Uploading results into container
2024-04-14 16:07:55,795:INFO:Uploading model into container now
2024-04-14 16:07:55,796:INFO:_master_model_container: 2
2024-04-14 16:07:55,796:INFO:_display_container: 2
2024-04-14 16:07:55,798:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=502, splitter='best')
2024-04-14 16:07:55,798:INFO:create_model() successfully completed......................................
2024-04-14 16:07:55,954:INFO:SubProcess create_model() end ==================================
2024-04-14 16:07:55,954:INFO:Creating metrics dataframe
2024-04-14 16:07:55,972:INFO:Initializing create_model()
2024-04-14 16:07:55,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000295301A4150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=502, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:07:55,973:INFO:Checking exceptions
2024-04-14 16:07:55,975:INFO:Importing libraries
2024-04-14 16:07:55,975:INFO:Copying training dataset
2024-04-14 16:07:55,978:INFO:Defining folds
2024-04-14 16:07:55,978:INFO:Declaring metric variables
2024-04-14 16:07:55,978:INFO:Importing untrained model
2024-04-14 16:07:55,978:INFO:Declaring custom model
2024-04-14 16:07:55,978:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:07:55,978:INFO:Cross validation set to False
2024-04-14 16:07:55,978:INFO:Fitting Model
2024-04-14 16:07:56,036:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=502, splitter='best')
2024-04-14 16:07:56,036:INFO:create_model() successfully completed......................................
2024-04-14 16:07:56,210:INFO:Initializing create_model()
2024-04-14 16:07:56,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000295301A4150>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=502, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:07:56,210:INFO:Checking exceptions
2024-04-14 16:07:56,210:INFO:Importing libraries
2024-04-14 16:07:56,210:INFO:Copying training dataset
2024-04-14 16:07:56,232:INFO:Defining folds
2024-04-14 16:07:56,233:INFO:Declaring metric variables
2024-04-14 16:07:56,233:INFO:Importing untrained model
2024-04-14 16:07:56,233:INFO:Declaring custom model
2024-04-14 16:07:56,233:INFO:Logistic Regression Imported successfully
2024-04-14 16:07:56,233:INFO:Cross validation set to False
2024-04-14 16:07:56,233:INFO:Fitting Model
2024-04-14 16:07:56,274:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=502, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-14 16:07:56,274:INFO:create_model() successfully completed......................................
2024-04-14 16:07:56,470:INFO:_master_model_container: 2
2024-04-14 16:07:56,470:INFO:_display_container: 2
2024-04-14 16:07:56,470:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=502, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=502, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-14 16:07:56,470:INFO:compare_models() successfully completed......................................
2024-04-14 16:07:56,470:INFO:Initializing predict_model()
2024-04-14 16:07:56,470:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000295301A4150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=502, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000029531B52B60>)
2024-04-14 16:07:56,470:INFO:Checking exceptions
2024-04-14 16:07:56,470:INFO:Preloading libraries
