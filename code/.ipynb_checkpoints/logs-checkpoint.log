2024-04-07 15:48:12,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:12,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:12,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:12,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:45,213:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:45,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:45,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 15:48:45,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:20:14,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:20:14,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:20:14,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:20:14,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:24:12,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:24:12,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:24:12,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:24:12,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:26:01,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:26:01,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:26:01,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 16:26:01,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:04:20,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:04:20,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:04:20,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:04:20,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:11:02,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:11:02,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:11:02,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:11:02,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:13:08,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:13:08,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:13:08,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:13:08,510:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:21:57,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:21:57,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:21:57,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:21:57,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:22:25,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:22:25,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:22:25,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:22:25,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:34:14,883:INFO:PyCaret ClassificationExperiment
2024-04-07 17:34:14,883:INFO:Logging name: clf-default-name
2024-04-07 17:34:14,883:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:34:14,883:INFO:version 3.2.0
2024-04-07 17:34:14,883:INFO:Initializing setup()
2024-04-07 17:34:14,883:INFO:self.USI: 363e
2024-04-07 17:34:14,883:INFO:self._variable_keys: {'n_jobs_param', 'data', 'exp_id', 'exp_name_log', '_available_plots', 'y_train', 'X', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'X_train', 'y_test', 'memory', 'idx', 'fold_generator', 'USI', 'gpu_param', 'X_test', 'log_plots_param', 'y', 'target_param', 'fold_groups_param', 'seed', '_ml_usecase', 'pipeline', 'logging_param'}
2024-04-07 17:34:14,883:INFO:Checking environment
2024-04-07 17:34:14,883:INFO:python_version: 3.11.7
2024-04-07 17:34:14,883:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:34:14,883:INFO:machine: AMD64
2024-04-07 17:34:14,883:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:34:14,883:INFO:Memory: svmem(total=10575405056, available=3058933760, percent=71.1, used=7516471296, free=3058933760)
2024-04-07 17:34:14,883:INFO:Physical Core: 8
2024-04-07 17:34:14,883:INFO:Logical Core: 16
2024-04-07 17:34:14,883:INFO:Checking libraries
2024-04-07 17:34:14,883:INFO:System:
2024-04-07 17:34:14,883:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:34:14,883:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:34:14,883:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:34:14,883:INFO:PyCaret required dependencies:
2024-04-07 17:34:16,189:INFO:                 pip: 23.3.1
2024-04-07 17:34:16,189:INFO:          setuptools: 68.2.2
2024-04-07 17:34:16,189:INFO:             pycaret: 3.2.0
2024-04-07 17:34:16,189:INFO:             IPython: 8.20.0
2024-04-07 17:34:16,189:INFO:          ipywidgets: 7.6.5
2024-04-07 17:34:16,189:INFO:                tqdm: 4.65.0
2024-04-07 17:34:16,189:INFO:               numpy: 1.25.2
2024-04-07 17:34:16,189:INFO:              pandas: 1.5.3
2024-04-07 17:34:16,189:INFO:              jinja2: 3.1.3
2024-04-07 17:34:16,189:INFO:               scipy: 1.10.1
2024-04-07 17:34:16,190:INFO:              joblib: 1.2.0
2024-04-07 17:34:16,190:INFO:             sklearn: 1.2.2
2024-04-07 17:34:16,190:INFO:                pyod: 1.1.3
2024-04-07 17:34:16,190:INFO:            imblearn: 0.11.0
2024-04-07 17:34:16,190:INFO:   category_encoders: 2.6.3
2024-04-07 17:34:16,190:INFO:            lightgbm: 4.3.0
2024-04-07 17:34:16,190:INFO:               numba: 0.59.0
2024-04-07 17:34:16,190:INFO:            requests: 2.31.0
2024-04-07 17:34:16,190:INFO:          matplotlib: 3.6.0
2024-04-07 17:34:16,190:INFO:          scikitplot: 0.3.7
2024-04-07 17:34:16,190:INFO:         yellowbrick: 1.5
2024-04-07 17:34:16,190:INFO:              plotly: 5.9.0
2024-04-07 17:34:16,191:INFO:    plotly-resampler: Not installed
2024-04-07 17:34:16,191:INFO:             kaleido: 0.2.1
2024-04-07 17:34:16,191:INFO:           schemdraw: 0.15
2024-04-07 17:34:16,191:INFO:         statsmodels: 0.14.0
2024-04-07 17:34:16,191:INFO:              sktime: 0.21.1
2024-04-07 17:34:16,191:INFO:               tbats: 1.1.3
2024-04-07 17:34:16,191:INFO:            pmdarima: 2.0.4
2024-04-07 17:34:16,191:INFO:              psutil: 5.9.0
2024-04-07 17:34:16,191:INFO:          markupsafe: 2.1.3
2024-04-07 17:34:16,191:INFO:             pickle5: Not installed
2024-04-07 17:34:16,191:INFO:         cloudpickle: 2.2.1
2024-04-07 17:34:16,191:INFO:         deprecation: 2.1.0
2024-04-07 17:34:16,191:INFO:              xxhash: 3.4.1
2024-04-07 17:34:16,191:INFO:           wurlitzer: Not installed
2024-04-07 17:34:16,191:INFO:PyCaret optional dependencies:
2024-04-07 17:34:16,194:INFO:                shap: 0.44.0
2024-04-07 17:34:16,194:INFO:           interpret: Not installed
2024-04-07 17:34:16,194:INFO:                umap: Not installed
2024-04-07 17:34:16,194:INFO:     ydata_profiling: Not installed
2024-04-07 17:34:16,194:INFO:  explainerdashboard: Not installed
2024-04-07 17:34:16,194:INFO:             autoviz: Not installed
2024-04-07 17:34:16,194:INFO:           fairlearn: Not installed
2024-04-07 17:34:16,194:INFO:          deepchecks: Not installed
2024-04-07 17:34:16,194:INFO:             xgboost: Not installed
2024-04-07 17:34:16,194:INFO:            catboost: Not installed
2024-04-07 17:34:16,194:INFO:              kmodes: Not installed
2024-04-07 17:34:16,194:INFO:             mlxtend: Not installed
2024-04-07 17:34:16,194:INFO:       statsforecast: Not installed
2024-04-07 17:34:16,194:INFO:        tune_sklearn: Not installed
2024-04-07 17:34:16,194:INFO:                 ray: Not installed
2024-04-07 17:34:16,194:INFO:            hyperopt: Not installed
2024-04-07 17:34:16,194:INFO:              optuna: Not installed
2024-04-07 17:34:16,194:INFO:               skopt: Not installed
2024-04-07 17:34:16,194:INFO:              mlflow: 2.9.0
2024-04-07 17:34:16,194:INFO:              gradio: Not installed
2024-04-07 17:34:16,194:INFO:             fastapi: Not installed
2024-04-07 17:34:16,194:INFO:             uvicorn: Not installed
2024-04-07 17:34:16,194:INFO:              m2cgen: Not installed
2024-04-07 17:34:16,194:INFO:           evidently: Not installed
2024-04-07 17:34:16,194:INFO:               fugue: Not installed
2024-04-07 17:34:16,194:INFO:           streamlit: 1.28.0
2024-04-07 17:34:16,194:INFO:             prophet: Not installed
2024-04-07 17:34:16,194:INFO:None
2024-04-07 17:34:16,194:INFO:Set up data.
2024-04-07 17:34:16,207:INFO:Set up folding strategy.
2024-04-07 17:34:16,207:INFO:Set up train/test split.
2024-04-07 17:34:16,207:INFO:Set up data.
2024-04-07 17:34:16,207:INFO:Set up index.
2024-04-07 17:34:16,207:INFO:Assigning column types.
2024-04-07 17:34:16,224:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:34:16,273:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,368:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,401:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:34:16,451:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:34:16,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,551:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:34:16,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,701:INFO:Preparing preprocessing pipeline...
2024-04-07 17:34:16,701:INFO:Set up simple imputation.
2024-04-07 17:34:16,701:INFO:Set up feature normalization.
2024-04-07 17:34:16,730:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:34:16,730:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:34:16,730:INFO:Creating final display dataframe.
2024-04-07 17:34:16,816:INFO:Setup _display_container:                     Description             Value
0                    Session id              6395
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              363e
2024-04-07 17:34:16,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:16,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:17,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:17,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:34:17,001:INFO:setup() successfully completed in 2.12s...............
2024-04-07 17:34:17,001:INFO:Initializing compare_models()
2024-04-07 17:34:17,001:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:34:17,001:INFO:Checking exceptions
2024-04-07 17:34:17,006:INFO:Preparing display monitor
2024-04-07 17:34:17,040:INFO:Initializing Logistic Regression
2024-04-07 17:34:17,040:INFO:Total runtime is 0.0 minutes
2024-04-07 17:34:17,046:INFO:SubProcess create_model() called ==================================
2024-04-07 17:34:17,047:INFO:Initializing create_model()
2024-04-07 17:34:17,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058FC2150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:34:17,047:INFO:Checking exceptions
2024-04-07 17:34:17,047:INFO:Importing libraries
2024-04-07 17:34:17,047:INFO:Copying training dataset
2024-04-07 17:34:17,055:INFO:Defining folds
2024-04-07 17:34:17,055:INFO:Declaring metric variables
2024-04-07 17:34:17,058:INFO:Importing untrained model
2024-04-07 17:34:17,062:INFO:Logistic Regression Imported successfully
2024-04-07 17:34:17,068:INFO:Starting cross validation
2024-04-07 17:34:17,068:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:34:25,037:INFO:Calculating mean and std
2024-04-07 17:34:25,038:INFO:Creating metrics dataframe
2024-04-07 17:34:25,038:INFO:Uploading results into container
2024-04-07 17:34:25,038:INFO:Uploading model into container now
2024-04-07 17:34:25,038:INFO:_master_model_container: 1
2024-04-07 17:34:25,038:INFO:_display_container: 2
2024-04-07 17:34:25,038:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6395, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:34:25,038:INFO:create_model() successfully completed......................................
2024-04-07 17:34:25,326:INFO:SubProcess create_model() end ==================================
2024-04-07 17:34:25,327:INFO:Creating metrics dataframe
2024-04-07 17:34:25,334:INFO:Initializing Decision Tree Classifier
2024-04-07 17:34:25,334:INFO:Total runtime is 0.13824354807535807 minutes
2024-04-07 17:34:25,337:INFO:SubProcess create_model() called ==================================
2024-04-07 17:34:25,338:INFO:Initializing create_model()
2024-04-07 17:34:25,338:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058FC2150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:34:25,338:INFO:Checking exceptions
2024-04-07 17:34:25,338:INFO:Importing libraries
2024-04-07 17:34:25,338:INFO:Copying training dataset
2024-04-07 17:34:25,344:INFO:Defining folds
2024-04-07 17:34:25,344:INFO:Declaring metric variables
2024-04-07 17:34:25,349:INFO:Importing untrained model
2024-04-07 17:34:25,351:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:34:25,363:INFO:Starting cross validation
2024-04-07 17:34:25,364:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:34:30,926:INFO:Calculating mean and std
2024-04-07 17:34:30,928:INFO:Creating metrics dataframe
2024-04-07 17:34:30,928:INFO:Uploading results into container
2024-04-07 17:34:30,928:INFO:Uploading model into container now
2024-04-07 17:34:30,928:INFO:_master_model_container: 2
2024-04-07 17:34:30,928:INFO:_display_container: 2
2024-04-07 17:34:30,928:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6395, splitter='best')
2024-04-07 17:34:30,928:INFO:create_model() successfully completed......................................
2024-04-07 17:34:31,128:INFO:SubProcess create_model() end ==================================
2024-04-07 17:34:31,128:INFO:Creating metrics dataframe
2024-04-07 17:34:31,146:INFO:Initializing create_model()
2024-04-07 17:34:31,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6395, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:34:31,146:INFO:Checking exceptions
2024-04-07 17:34:31,148:INFO:Importing libraries
2024-04-07 17:34:31,148:INFO:Copying training dataset
2024-04-07 17:34:31,151:INFO:Defining folds
2024-04-07 17:34:31,151:INFO:Declaring metric variables
2024-04-07 17:34:31,156:INFO:Importing untrained model
2024-04-07 17:34:31,156:INFO:Declaring custom model
2024-04-07 17:34:31,156:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:34:31,157:INFO:Cross validation set to False
2024-04-07 17:34:31,157:INFO:Fitting Model
2024-04-07 17:34:31,206:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6395, splitter='best')
2024-04-07 17:34:31,206:INFO:create_model() successfully completed......................................
2024-04-07 17:34:31,380:INFO:Initializing create_model()
2024-04-07 17:34:31,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6395, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:34:31,380:INFO:Checking exceptions
2024-04-07 17:34:31,382:INFO:Importing libraries
2024-04-07 17:34:31,382:INFO:Copying training dataset
2024-04-07 17:34:31,390:INFO:Defining folds
2024-04-07 17:34:31,390:INFO:Declaring metric variables
2024-04-07 17:34:31,390:INFO:Importing untrained model
2024-04-07 17:34:31,390:INFO:Declaring custom model
2024-04-07 17:34:31,391:INFO:Logistic Regression Imported successfully
2024-04-07 17:34:31,391:INFO:Cross validation set to False
2024-04-07 17:34:31,391:INFO:Fitting Model
2024-04-07 17:34:31,414:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6395, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:34:31,414:INFO:create_model() successfully completed......................................
2024-04-07 17:34:31,611:INFO:_master_model_container: 2
2024-04-07 17:34:31,611:INFO:_display_container: 2
2024-04-07 17:34:31,611:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6395, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6395, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:34:31,611:INFO:compare_models() successfully completed......................................
2024-04-07 17:34:31,612:INFO:Initializing predict_model()
2024-04-07 17:34:31,612:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058134E50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6395, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0588C8FE0>)
2024-04-07 17:34:31,612:INFO:Checking exceptions
2024-04-07 17:34:31,612:INFO:Preloading libraries
2024-04-07 17:36:03,364:INFO:PyCaret ClassificationExperiment
2024-04-07 17:36:03,364:INFO:Logging name: clf-default-name
2024-04-07 17:36:03,364:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:36:03,364:INFO:version 3.2.0
2024-04-07 17:36:03,364:INFO:Initializing setup()
2024-04-07 17:36:03,364:INFO:self.USI: 6d27
2024-04-07 17:36:03,364:INFO:self._variable_keys: {'n_jobs_param', 'data', 'exp_id', 'exp_name_log', '_available_plots', 'y_train', 'X', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'X_train', 'y_test', 'memory', 'idx', 'fold_generator', 'USI', 'gpu_param', 'X_test', 'log_plots_param', 'y', 'target_param', 'fold_groups_param', 'seed', '_ml_usecase', 'pipeline', 'logging_param'}
2024-04-07 17:36:03,364:INFO:Checking environment
2024-04-07 17:36:03,364:INFO:python_version: 3.11.7
2024-04-07 17:36:03,364:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:36:03,364:INFO:machine: AMD64
2024-04-07 17:36:03,364:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:36:03,364:INFO:Memory: svmem(total=10575405056, available=3382054912, percent=68.0, used=7193350144, free=3382054912)
2024-04-07 17:36:03,364:INFO:Physical Core: 8
2024-04-07 17:36:03,364:INFO:Logical Core: 16
2024-04-07 17:36:03,364:INFO:Checking libraries
2024-04-07 17:36:03,364:INFO:System:
2024-04-07 17:36:03,364:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:36:03,364:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:36:03,364:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:36:03,364:INFO:PyCaret required dependencies:
2024-04-07 17:36:03,364:INFO:                 pip: 23.3.1
2024-04-07 17:36:03,364:INFO:          setuptools: 68.2.2
2024-04-07 17:36:03,364:INFO:             pycaret: 3.2.0
2024-04-07 17:36:03,364:INFO:             IPython: 8.20.0
2024-04-07 17:36:03,364:INFO:          ipywidgets: 7.6.5
2024-04-07 17:36:03,364:INFO:                tqdm: 4.65.0
2024-04-07 17:36:03,364:INFO:               numpy: 1.25.2
2024-04-07 17:36:03,364:INFO:              pandas: 1.5.3
2024-04-07 17:36:03,364:INFO:              jinja2: 3.1.3
2024-04-07 17:36:03,364:INFO:               scipy: 1.10.1
2024-04-07 17:36:03,364:INFO:              joblib: 1.2.0
2024-04-07 17:36:03,364:INFO:             sklearn: 1.2.2
2024-04-07 17:36:03,364:INFO:                pyod: 1.1.3
2024-04-07 17:36:03,364:INFO:            imblearn: 0.11.0
2024-04-07 17:36:03,364:INFO:   category_encoders: 2.6.3
2024-04-07 17:36:03,364:INFO:            lightgbm: 4.3.0
2024-04-07 17:36:03,364:INFO:               numba: 0.59.0
2024-04-07 17:36:03,364:INFO:            requests: 2.31.0
2024-04-07 17:36:03,364:INFO:          matplotlib: 3.6.0
2024-04-07 17:36:03,364:INFO:          scikitplot: 0.3.7
2024-04-07 17:36:03,364:INFO:         yellowbrick: 1.5
2024-04-07 17:36:03,364:INFO:              plotly: 5.9.0
2024-04-07 17:36:03,364:INFO:    plotly-resampler: Not installed
2024-04-07 17:36:03,364:INFO:             kaleido: 0.2.1
2024-04-07 17:36:03,364:INFO:           schemdraw: 0.15
2024-04-07 17:36:03,364:INFO:         statsmodels: 0.14.0
2024-04-07 17:36:03,364:INFO:              sktime: 0.21.1
2024-04-07 17:36:03,364:INFO:               tbats: 1.1.3
2024-04-07 17:36:03,364:INFO:            pmdarima: 2.0.4
2024-04-07 17:36:03,364:INFO:              psutil: 5.9.0
2024-04-07 17:36:03,364:INFO:          markupsafe: 2.1.3
2024-04-07 17:36:03,364:INFO:             pickle5: Not installed
2024-04-07 17:36:03,364:INFO:         cloudpickle: 2.2.1
2024-04-07 17:36:03,364:INFO:         deprecation: 2.1.0
2024-04-07 17:36:03,364:INFO:              xxhash: 3.4.1
2024-04-07 17:36:03,364:INFO:           wurlitzer: Not installed
2024-04-07 17:36:03,364:INFO:PyCaret optional dependencies:
2024-04-07 17:36:03,364:INFO:                shap: 0.44.0
2024-04-07 17:36:03,364:INFO:           interpret: Not installed
2024-04-07 17:36:03,364:INFO:                umap: Not installed
2024-04-07 17:36:03,364:INFO:     ydata_profiling: Not installed
2024-04-07 17:36:03,364:INFO:  explainerdashboard: Not installed
2024-04-07 17:36:03,364:INFO:             autoviz: Not installed
2024-04-07 17:36:03,364:INFO:           fairlearn: Not installed
2024-04-07 17:36:03,364:INFO:          deepchecks: Not installed
2024-04-07 17:36:03,364:INFO:             xgboost: Not installed
2024-04-07 17:36:03,364:INFO:            catboost: Not installed
2024-04-07 17:36:03,364:INFO:              kmodes: Not installed
2024-04-07 17:36:03,364:INFO:             mlxtend: Not installed
2024-04-07 17:36:03,364:INFO:       statsforecast: Not installed
2024-04-07 17:36:03,364:INFO:        tune_sklearn: Not installed
2024-04-07 17:36:03,364:INFO:                 ray: Not installed
2024-04-07 17:36:03,364:INFO:            hyperopt: Not installed
2024-04-07 17:36:03,364:INFO:              optuna: Not installed
2024-04-07 17:36:03,364:INFO:               skopt: Not installed
2024-04-07 17:36:03,364:INFO:              mlflow: 2.9.0
2024-04-07 17:36:03,364:INFO:              gradio: Not installed
2024-04-07 17:36:03,364:INFO:             fastapi: Not installed
2024-04-07 17:36:03,364:INFO:             uvicorn: Not installed
2024-04-07 17:36:03,364:INFO:              m2cgen: Not installed
2024-04-07 17:36:03,364:INFO:           evidently: Not installed
2024-04-07 17:36:03,364:INFO:               fugue: Not installed
2024-04-07 17:36:03,364:INFO:           streamlit: 1.28.0
2024-04-07 17:36:03,364:INFO:             prophet: Not installed
2024-04-07 17:36:03,364:INFO:None
2024-04-07 17:36:03,364:INFO:Set up data.
2024-04-07 17:36:03,376:INFO:Set up folding strategy.
2024-04-07 17:36:03,376:INFO:Set up train/test split.
2024-04-07 17:36:03,376:INFO:Set up data.
2024-04-07 17:36:03,383:INFO:Set up index.
2024-04-07 17:36:03,383:INFO:Assigning column types.
2024-04-07 17:36:03,391:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:36:03,443:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,444:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,526:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,527:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,553:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:36:03,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:03,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,705:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:36:03,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:03,851:INFO:Preparing preprocessing pipeline...
2024-04-07 17:36:03,851:INFO:Set up simple imputation.
2024-04-07 17:36:03,851:INFO:Set up feature normalization.
2024-04-07 17:36:03,867:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:36:03,881:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:36:03,881:INFO:Creating final display dataframe.
2024-04-07 17:36:03,947:INFO:Setup _display_container:                     Description             Value
0                    Session id              4802
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6d27
2024-04-07 17:36:04,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:04,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:04,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:04,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:04,103:INFO:setup() successfully completed in 0.74s...............
2024-04-07 17:36:04,103:INFO:Initializing compare_models()
2024-04-07 17:36:04,103:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:36:04,103:INFO:Checking exceptions
2024-04-07 17:36:04,119:INFO:Preparing display monitor
2024-04-07 17:36:04,148:INFO:Initializing Logistic Regression
2024-04-07 17:36:04,148:INFO:Total runtime is 0.0 minutes
2024-04-07 17:36:04,152:INFO:SubProcess create_model() called ==================================
2024-04-07 17:36:04,152:INFO:Initializing create_model()
2024-04-07 17:36:04,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058CE2A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:04,152:INFO:Checking exceptions
2024-04-07 17:36:04,152:INFO:Importing libraries
2024-04-07 17:36:04,152:INFO:Copying training dataset
2024-04-07 17:36:04,158:INFO:Defining folds
2024-04-07 17:36:04,158:INFO:Declaring metric variables
2024-04-07 17:36:04,161:INFO:Importing untrained model
2024-04-07 17:36:04,164:INFO:Logistic Regression Imported successfully
2024-04-07 17:36:04,171:INFO:Starting cross validation
2024-04-07 17:36:04,172:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:36:11,793:INFO:Calculating mean and std
2024-04-07 17:36:11,793:INFO:Creating metrics dataframe
2024-04-07 17:36:11,793:INFO:Uploading results into container
2024-04-07 17:36:11,793:INFO:Uploading model into container now
2024-04-07 17:36:11,793:INFO:_master_model_container: 1
2024-04-07 17:36:11,793:INFO:_display_container: 2
2024-04-07 17:36:11,793:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4802, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:36:11,793:INFO:create_model() successfully completed......................................
2024-04-07 17:36:12,054:INFO:SubProcess create_model() end ==================================
2024-04-07 17:36:12,054:INFO:Creating metrics dataframe
2024-04-07 17:36:12,063:INFO:Initializing Decision Tree Classifier
2024-04-07 17:36:12,063:INFO:Total runtime is 0.1319222648938497 minutes
2024-04-07 17:36:12,066:INFO:SubProcess create_model() called ==================================
2024-04-07 17:36:12,066:INFO:Initializing create_model()
2024-04-07 17:36:12,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058CE2A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:12,066:INFO:Checking exceptions
2024-04-07 17:36:12,066:INFO:Importing libraries
2024-04-07 17:36:12,066:INFO:Copying training dataset
2024-04-07 17:36:12,071:INFO:Defining folds
2024-04-07 17:36:12,071:INFO:Declaring metric variables
2024-04-07 17:36:12,077:INFO:Importing untrained model
2024-04-07 17:36:12,080:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:36:12,089:INFO:Starting cross validation
2024-04-07 17:36:12,090:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:36:17,632:INFO:Calculating mean and std
2024-04-07 17:36:17,634:INFO:Creating metrics dataframe
2024-04-07 17:36:17,638:INFO:Uploading results into container
2024-04-07 17:36:17,640:INFO:Uploading model into container now
2024-04-07 17:36:17,641:INFO:_master_model_container: 2
2024-04-07 17:36:17,641:INFO:_display_container: 2
2024-04-07 17:36:17,641:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4802, splitter='best')
2024-04-07 17:36:17,641:INFO:create_model() successfully completed......................................
2024-04-07 17:36:17,858:INFO:SubProcess create_model() end ==================================
2024-04-07 17:36:17,858:INFO:Creating metrics dataframe
2024-04-07 17:36:17,883:INFO:Initializing create_model()
2024-04-07 17:36:17,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4802, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:17,883:INFO:Checking exceptions
2024-04-07 17:36:17,883:INFO:Importing libraries
2024-04-07 17:36:17,883:INFO:Copying training dataset
2024-04-07 17:36:17,890:INFO:Defining folds
2024-04-07 17:36:17,890:INFO:Declaring metric variables
2024-04-07 17:36:17,890:INFO:Importing untrained model
2024-04-07 17:36:17,890:INFO:Declaring custom model
2024-04-07 17:36:17,890:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:36:17,890:INFO:Cross validation set to False
2024-04-07 17:36:17,890:INFO:Fitting Model
2024-04-07 17:36:17,942:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4802, splitter='best')
2024-04-07 17:36:17,942:INFO:create_model() successfully completed......................................
2024-04-07 17:36:18,124:INFO:Initializing create_model()
2024-04-07 17:36:18,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4802, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:18,124:INFO:Checking exceptions
2024-04-07 17:36:18,137:INFO:Importing libraries
2024-04-07 17:36:18,137:INFO:Copying training dataset
2024-04-07 17:36:18,141:INFO:Defining folds
2024-04-07 17:36:18,141:INFO:Declaring metric variables
2024-04-07 17:36:18,141:INFO:Importing untrained model
2024-04-07 17:36:18,141:INFO:Declaring custom model
2024-04-07 17:36:18,141:INFO:Logistic Regression Imported successfully
2024-04-07 17:36:18,141:INFO:Cross validation set to False
2024-04-07 17:36:18,141:INFO:Fitting Model
2024-04-07 17:36:18,160:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4802, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:36:18,160:INFO:create_model() successfully completed......................................
2024-04-07 17:36:18,407:INFO:_master_model_container: 2
2024-04-07 17:36:18,407:INFO:_display_container: 2
2024-04-07 17:36:18,407:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4802, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4802, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:36:18,407:INFO:compare_models() successfully completed......................................
2024-04-07 17:36:18,416:INFO:Initializing predict_model()
2024-04-07 17:36:18,416:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058E16FD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4802, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0544CB920>)
2024-04-07 17:36:18,416:INFO:Checking exceptions
2024-04-07 17:36:18,416:INFO:Preloading libraries
2024-04-07 17:36:26,531:INFO:PyCaret ClassificationExperiment
2024-04-07 17:36:26,531:INFO:Logging name: clf-default-name
2024-04-07 17:36:26,538:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:36:26,538:INFO:version 3.2.0
2024-04-07 17:36:26,538:INFO:Initializing setup()
2024-04-07 17:36:26,538:INFO:self.USI: 2cce
2024-04-07 17:36:26,538:INFO:self._variable_keys: {'n_jobs_param', 'data', 'exp_id', 'exp_name_log', '_available_plots', 'y_train', 'X', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'X_train', 'y_test', 'memory', 'idx', 'fold_generator', 'USI', 'gpu_param', 'X_test', 'log_plots_param', 'y', 'target_param', 'fold_groups_param', 'seed', '_ml_usecase', 'pipeline', 'logging_param'}
2024-04-07 17:36:26,538:INFO:Checking environment
2024-04-07 17:36:26,538:INFO:python_version: 3.11.7
2024-04-07 17:36:26,538:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:36:26,538:INFO:machine: AMD64
2024-04-07 17:36:26,538:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:36:26,538:INFO:Memory: svmem(total=10575405056, available=3391709184, percent=67.9, used=7183695872, free=3391709184)
2024-04-07 17:36:26,538:INFO:Physical Core: 8
2024-04-07 17:36:26,538:INFO:Logical Core: 16
2024-04-07 17:36:26,538:INFO:Checking libraries
2024-04-07 17:36:26,538:INFO:System:
2024-04-07 17:36:26,538:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:36:26,538:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:36:26,538:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:36:26,538:INFO:PyCaret required dependencies:
2024-04-07 17:36:26,538:INFO:                 pip: 23.3.1
2024-04-07 17:36:26,538:INFO:          setuptools: 68.2.2
2024-04-07 17:36:26,538:INFO:             pycaret: 3.2.0
2024-04-07 17:36:26,538:INFO:             IPython: 8.20.0
2024-04-07 17:36:26,538:INFO:          ipywidgets: 7.6.5
2024-04-07 17:36:26,538:INFO:                tqdm: 4.65.0
2024-04-07 17:36:26,538:INFO:               numpy: 1.25.2
2024-04-07 17:36:26,539:INFO:              pandas: 1.5.3
2024-04-07 17:36:26,539:INFO:              jinja2: 3.1.3
2024-04-07 17:36:26,539:INFO:               scipy: 1.10.1
2024-04-07 17:36:26,539:INFO:              joblib: 1.2.0
2024-04-07 17:36:26,539:INFO:             sklearn: 1.2.2
2024-04-07 17:36:26,539:INFO:                pyod: 1.1.3
2024-04-07 17:36:26,539:INFO:            imblearn: 0.11.0
2024-04-07 17:36:26,539:INFO:   category_encoders: 2.6.3
2024-04-07 17:36:26,539:INFO:            lightgbm: 4.3.0
2024-04-07 17:36:26,539:INFO:               numba: 0.59.0
2024-04-07 17:36:26,540:INFO:            requests: 2.31.0
2024-04-07 17:36:26,540:INFO:          matplotlib: 3.6.0
2024-04-07 17:36:26,540:INFO:          scikitplot: 0.3.7
2024-04-07 17:36:26,540:INFO:         yellowbrick: 1.5
2024-04-07 17:36:26,540:INFO:              plotly: 5.9.0
2024-04-07 17:36:26,540:INFO:    plotly-resampler: Not installed
2024-04-07 17:36:26,540:INFO:             kaleido: 0.2.1
2024-04-07 17:36:26,540:INFO:           schemdraw: 0.15
2024-04-07 17:36:26,540:INFO:         statsmodels: 0.14.0
2024-04-07 17:36:26,540:INFO:              sktime: 0.21.1
2024-04-07 17:36:26,540:INFO:               tbats: 1.1.3
2024-04-07 17:36:26,540:INFO:            pmdarima: 2.0.4
2024-04-07 17:36:26,540:INFO:              psutil: 5.9.0
2024-04-07 17:36:26,540:INFO:          markupsafe: 2.1.3
2024-04-07 17:36:26,540:INFO:             pickle5: Not installed
2024-04-07 17:36:26,540:INFO:         cloudpickle: 2.2.1
2024-04-07 17:36:26,540:INFO:         deprecation: 2.1.0
2024-04-07 17:36:26,540:INFO:              xxhash: 3.4.1
2024-04-07 17:36:26,540:INFO:           wurlitzer: Not installed
2024-04-07 17:36:26,540:INFO:PyCaret optional dependencies:
2024-04-07 17:36:26,540:INFO:                shap: 0.44.0
2024-04-07 17:36:26,540:INFO:           interpret: Not installed
2024-04-07 17:36:26,541:INFO:                umap: Not installed
2024-04-07 17:36:26,541:INFO:     ydata_profiling: Not installed
2024-04-07 17:36:26,541:INFO:  explainerdashboard: Not installed
2024-04-07 17:36:26,541:INFO:             autoviz: Not installed
2024-04-07 17:36:26,541:INFO:           fairlearn: Not installed
2024-04-07 17:36:26,541:INFO:          deepchecks: Not installed
2024-04-07 17:36:26,541:INFO:             xgboost: Not installed
2024-04-07 17:36:26,541:INFO:            catboost: Not installed
2024-04-07 17:36:26,541:INFO:              kmodes: Not installed
2024-04-07 17:36:26,541:INFO:             mlxtend: Not installed
2024-04-07 17:36:26,541:INFO:       statsforecast: Not installed
2024-04-07 17:36:26,541:INFO:        tune_sklearn: Not installed
2024-04-07 17:36:26,541:INFO:                 ray: Not installed
2024-04-07 17:36:26,541:INFO:            hyperopt: Not installed
2024-04-07 17:36:26,541:INFO:              optuna: Not installed
2024-04-07 17:36:26,541:INFO:               skopt: Not installed
2024-04-07 17:36:26,541:INFO:              mlflow: 2.9.0
2024-04-07 17:36:26,541:INFO:              gradio: Not installed
2024-04-07 17:36:26,541:INFO:             fastapi: Not installed
2024-04-07 17:36:26,541:INFO:             uvicorn: Not installed
2024-04-07 17:36:26,541:INFO:              m2cgen: Not installed
2024-04-07 17:36:26,541:INFO:           evidently: Not installed
2024-04-07 17:36:26,541:INFO:               fugue: Not installed
2024-04-07 17:36:26,541:INFO:           streamlit: 1.28.0
2024-04-07 17:36:26,541:INFO:             prophet: Not installed
2024-04-07 17:36:26,541:INFO:None
2024-04-07 17:36:26,542:INFO:Set up data.
2024-04-07 17:36:26,547:INFO:Set up folding strategy.
2024-04-07 17:36:26,547:INFO:Set up train/test split.
2024-04-07 17:36:26,547:INFO:Set up data.
2024-04-07 17:36:26,547:INFO:Set up index.
2024-04-07 17:36:26,547:INFO:Assigning column types.
2024-04-07 17:36:26,558:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:36:26,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,609:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,669:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,669:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,701:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:36:26,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,787:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,834:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:36:26,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,856:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:36:26,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:26,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,009:INFO:Preparing preprocessing pipeline...
2024-04-07 17:36:27,009:INFO:Set up simple imputation.
2024-04-07 17:36:27,009:INFO:Set up feature normalization.
2024-04-07 17:36:27,041:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:36:27,048:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:36:27,048:INFO:Creating final display dataframe.
2024-04-07 17:36:27,130:INFO:Setup _display_container:                     Description             Value
0                    Session id              5552
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              2cce
2024-04-07 17:36:27,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:36:27,291:INFO:setup() successfully completed in 0.76s...............
2024-04-07 17:36:27,292:INFO:Initializing compare_models()
2024-04-07 17:36:27,292:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:36:27,292:INFO:Checking exceptions
2024-04-07 17:36:27,295:INFO:Preparing display monitor
2024-04-07 17:36:27,321:INFO:Initializing Logistic Regression
2024-04-07 17:36:27,321:INFO:Total runtime is 0.0 minutes
2024-04-07 17:36:27,325:INFO:SubProcess create_model() called ==================================
2024-04-07 17:36:27,326:INFO:Initializing create_model()
2024-04-07 17:36:27,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058B5A150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:27,327:INFO:Checking exceptions
2024-04-07 17:36:27,327:INFO:Importing libraries
2024-04-07 17:36:27,327:INFO:Copying training dataset
2024-04-07 17:36:27,332:INFO:Defining folds
2024-04-07 17:36:27,332:INFO:Declaring metric variables
2024-04-07 17:36:27,336:INFO:Importing untrained model
2024-04-07 17:36:27,340:INFO:Logistic Regression Imported successfully
2024-04-07 17:36:27,347:INFO:Starting cross validation
2024-04-07 17:36:27,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:36:35,017:INFO:Calculating mean and std
2024-04-07 17:36:35,017:INFO:Creating metrics dataframe
2024-04-07 17:36:35,017:INFO:Uploading results into container
2024-04-07 17:36:35,017:INFO:Uploading model into container now
2024-04-07 17:36:35,017:INFO:_master_model_container: 1
2024-04-07 17:36:35,017:INFO:_display_container: 2
2024-04-07 17:36:35,017:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5552, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:36:35,017:INFO:create_model() successfully completed......................................
2024-04-07 17:36:35,269:INFO:SubProcess create_model() end ==================================
2024-04-07 17:36:35,269:INFO:Creating metrics dataframe
2024-04-07 17:36:35,269:INFO:Initializing Decision Tree Classifier
2024-04-07 17:36:35,269:INFO:Total runtime is 0.13245665232340495 minutes
2024-04-07 17:36:35,284:INFO:SubProcess create_model() called ==================================
2024-04-07 17:36:35,287:INFO:Initializing create_model()
2024-04-07 17:36:35,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058B5A150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:35,287:INFO:Checking exceptions
2024-04-07 17:36:35,287:INFO:Importing libraries
2024-04-07 17:36:35,287:INFO:Copying training dataset
2024-04-07 17:36:35,293:INFO:Defining folds
2024-04-07 17:36:35,294:INFO:Declaring metric variables
2024-04-07 17:36:35,298:INFO:Importing untrained model
2024-04-07 17:36:35,302:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:36:35,307:INFO:Starting cross validation
2024-04-07 17:36:35,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:36:41,111:INFO:Calculating mean and std
2024-04-07 17:36:41,127:INFO:Creating metrics dataframe
2024-04-07 17:36:41,132:INFO:Uploading results into container
2024-04-07 17:36:41,133:INFO:Uploading model into container now
2024-04-07 17:36:41,133:INFO:_master_model_container: 2
2024-04-07 17:36:41,133:INFO:_display_container: 2
2024-04-07 17:36:41,133:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5552, splitter='best')
2024-04-07 17:36:41,133:INFO:create_model() successfully completed......................................
2024-04-07 17:36:41,319:INFO:SubProcess create_model() end ==================================
2024-04-07 17:36:41,319:INFO:Creating metrics dataframe
2024-04-07 17:36:41,355:INFO:Initializing create_model()
2024-04-07 17:36:41,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5552, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:41,355:INFO:Checking exceptions
2024-04-07 17:36:41,358:INFO:Importing libraries
2024-04-07 17:36:41,358:INFO:Copying training dataset
2024-04-07 17:36:41,364:INFO:Defining folds
2024-04-07 17:36:41,364:INFO:Declaring metric variables
2024-04-07 17:36:41,364:INFO:Importing untrained model
2024-04-07 17:36:41,364:INFO:Declaring custom model
2024-04-07 17:36:41,364:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:36:41,364:INFO:Cross validation set to False
2024-04-07 17:36:41,364:INFO:Fitting Model
2024-04-07 17:36:41,419:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5552, splitter='best')
2024-04-07 17:36:41,419:INFO:create_model() successfully completed......................................
2024-04-07 17:36:41,618:INFO:Initializing create_model()
2024-04-07 17:36:41,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5552, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:36:41,618:INFO:Checking exceptions
2024-04-07 17:36:41,620:INFO:Importing libraries
2024-04-07 17:36:41,620:INFO:Copying training dataset
2024-04-07 17:36:41,624:INFO:Defining folds
2024-04-07 17:36:41,624:INFO:Declaring metric variables
2024-04-07 17:36:41,625:INFO:Importing untrained model
2024-04-07 17:36:41,625:INFO:Declaring custom model
2024-04-07 17:36:41,625:INFO:Logistic Regression Imported successfully
2024-04-07 17:36:41,626:INFO:Cross validation set to False
2024-04-07 17:36:41,626:INFO:Fitting Model
2024-04-07 17:36:41,638:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5552, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:36:41,638:INFO:create_model() successfully completed......................................
2024-04-07 17:36:41,840:INFO:_master_model_container: 2
2024-04-07 17:36:41,840:INFO:_display_container: 2
2024-04-07 17:36:41,841:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5552, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5552, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:36:41,841:INFO:compare_models() successfully completed......................................
2024-04-07 17:36:41,842:INFO:Initializing predict_model()
2024-04-07 17:36:41,842:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F058072C90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5552, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0588502C0>)
2024-04-07 17:36:41,842:INFO:Checking exceptions
2024-04-07 17:36:41,842:INFO:Preloading libraries
2024-04-07 17:39:48,488:INFO:PyCaret ClassificationExperiment
2024-04-07 17:39:48,489:INFO:Logging name: clf-default-name
2024-04-07 17:39:48,489:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:39:48,489:INFO:version 3.2.0
2024-04-07 17:39:48,489:INFO:Initializing setup()
2024-04-07 17:39:48,489:INFO:self.USI: 1464
2024-04-07 17:39:48,489:INFO:self._variable_keys: {'n_jobs_param', 'data', 'exp_id', 'exp_name_log', '_available_plots', 'y_train', 'X', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'X_train', 'y_test', 'memory', 'idx', 'fold_generator', 'USI', 'gpu_param', 'X_test', 'log_plots_param', 'y', 'target_param', 'fold_groups_param', 'seed', '_ml_usecase', 'pipeline', 'logging_param'}
2024-04-07 17:39:48,489:INFO:Checking environment
2024-04-07 17:39:48,489:INFO:python_version: 3.11.7
2024-04-07 17:39:48,489:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:39:48,489:INFO:machine: AMD64
2024-04-07 17:39:48,489:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:39:48,489:INFO:Memory: svmem(total=10575405056, available=3557310464, percent=66.4, used=7018094592, free=3557310464)
2024-04-07 17:39:48,489:INFO:Physical Core: 8
2024-04-07 17:39:48,489:INFO:Logical Core: 16
2024-04-07 17:39:48,489:INFO:Checking libraries
2024-04-07 17:39:48,489:INFO:System:
2024-04-07 17:39:48,489:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:39:48,489:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:39:48,489:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:39:48,489:INFO:PyCaret required dependencies:
2024-04-07 17:39:48,489:INFO:                 pip: 23.3.1
2024-04-07 17:39:48,489:INFO:          setuptools: 68.2.2
2024-04-07 17:39:48,489:INFO:             pycaret: 3.2.0
2024-04-07 17:39:48,489:INFO:             IPython: 8.20.0
2024-04-07 17:39:48,489:INFO:          ipywidgets: 7.6.5
2024-04-07 17:39:48,489:INFO:                tqdm: 4.65.0
2024-04-07 17:39:48,489:INFO:               numpy: 1.25.2
2024-04-07 17:39:48,489:INFO:              pandas: 1.5.3
2024-04-07 17:39:48,489:INFO:              jinja2: 3.1.3
2024-04-07 17:39:48,489:INFO:               scipy: 1.10.1
2024-04-07 17:39:48,489:INFO:              joblib: 1.2.0
2024-04-07 17:39:48,489:INFO:             sklearn: 1.2.2
2024-04-07 17:39:48,489:INFO:                pyod: 1.1.3
2024-04-07 17:39:48,489:INFO:            imblearn: 0.11.0
2024-04-07 17:39:48,489:INFO:   category_encoders: 2.6.3
2024-04-07 17:39:48,489:INFO:            lightgbm: 4.3.0
2024-04-07 17:39:48,489:INFO:               numba: 0.59.0
2024-04-07 17:39:48,489:INFO:            requests: 2.31.0
2024-04-07 17:39:48,489:INFO:          matplotlib: 3.6.0
2024-04-07 17:39:48,489:INFO:          scikitplot: 0.3.7
2024-04-07 17:39:48,489:INFO:         yellowbrick: 1.5
2024-04-07 17:39:48,489:INFO:              plotly: 5.9.0
2024-04-07 17:39:48,489:INFO:    plotly-resampler: Not installed
2024-04-07 17:39:48,489:INFO:             kaleido: 0.2.1
2024-04-07 17:39:48,489:INFO:           schemdraw: 0.15
2024-04-07 17:39:48,489:INFO:         statsmodels: 0.14.0
2024-04-07 17:39:48,489:INFO:              sktime: 0.21.1
2024-04-07 17:39:48,489:INFO:               tbats: 1.1.3
2024-04-07 17:39:48,489:INFO:            pmdarima: 2.0.4
2024-04-07 17:39:48,489:INFO:              psutil: 5.9.0
2024-04-07 17:39:48,489:INFO:          markupsafe: 2.1.3
2024-04-07 17:39:48,489:INFO:             pickle5: Not installed
2024-04-07 17:39:48,489:INFO:         cloudpickle: 2.2.1
2024-04-07 17:39:48,489:INFO:         deprecation: 2.1.0
2024-04-07 17:39:48,489:INFO:              xxhash: 3.4.1
2024-04-07 17:39:48,489:INFO:           wurlitzer: Not installed
2024-04-07 17:39:48,489:INFO:PyCaret optional dependencies:
2024-04-07 17:39:48,489:INFO:                shap: 0.44.0
2024-04-07 17:39:48,489:INFO:           interpret: Not installed
2024-04-07 17:39:48,489:INFO:                umap: Not installed
2024-04-07 17:39:48,489:INFO:     ydata_profiling: Not installed
2024-04-07 17:39:48,489:INFO:  explainerdashboard: Not installed
2024-04-07 17:39:48,489:INFO:             autoviz: Not installed
2024-04-07 17:39:48,489:INFO:           fairlearn: Not installed
2024-04-07 17:39:48,489:INFO:          deepchecks: Not installed
2024-04-07 17:39:48,489:INFO:             xgboost: Not installed
2024-04-07 17:39:48,489:INFO:            catboost: Not installed
2024-04-07 17:39:48,489:INFO:              kmodes: Not installed
2024-04-07 17:39:48,489:INFO:             mlxtend: Not installed
2024-04-07 17:39:48,489:INFO:       statsforecast: Not installed
2024-04-07 17:39:48,489:INFO:        tune_sklearn: Not installed
2024-04-07 17:39:48,489:INFO:                 ray: Not installed
2024-04-07 17:39:48,489:INFO:            hyperopt: Not installed
2024-04-07 17:39:48,489:INFO:              optuna: Not installed
2024-04-07 17:39:48,489:INFO:               skopt: Not installed
2024-04-07 17:39:48,489:INFO:              mlflow: 2.9.0
2024-04-07 17:39:48,489:INFO:              gradio: Not installed
2024-04-07 17:39:48,489:INFO:             fastapi: Not installed
2024-04-07 17:39:48,489:INFO:             uvicorn: Not installed
2024-04-07 17:39:48,489:INFO:              m2cgen: Not installed
2024-04-07 17:39:48,489:INFO:           evidently: Not installed
2024-04-07 17:39:48,489:INFO:               fugue: Not installed
2024-04-07 17:39:48,489:INFO:           streamlit: 1.28.0
2024-04-07 17:39:48,489:INFO:             prophet: Not installed
2024-04-07 17:39:48,489:INFO:None
2024-04-07 17:39:48,489:INFO:Set up data.
2024-04-07 17:39:48,497:INFO:Set up folding strategy.
2024-04-07 17:39:48,497:INFO:Set up train/test split.
2024-04-07 17:39:48,497:INFO:Set up data.
2024-04-07 17:39:48,501:INFO:Set up index.
2024-04-07 17:39:48,501:INFO:Assigning column types.
2024-04-07 17:39:48,508:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:39:48,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,554:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,624:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,649:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:39:48,702:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,776:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:39:48,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,798:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:39:48,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:48,940:INFO:Preparing preprocessing pipeline...
2024-04-07 17:39:48,955:INFO:Set up simple imputation.
2024-04-07 17:39:48,955:INFO:Set up feature normalization.
2024-04-07 17:39:48,973:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:39:48,973:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:39:48,973:INFO:Creating final display dataframe.
2024-04-07 17:39:49,050:INFO:Setup _display_container:                     Description             Value
0                    Session id              6170
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              1464
2024-04-07 17:39:49,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:49,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:49,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:49,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:39:49,201:INFO:setup() successfully completed in 0.72s...............
2024-04-07 17:39:49,201:INFO:Initializing compare_models()
2024-04-07 17:39:49,201:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:39:49,201:INFO:Checking exceptions
2024-04-07 17:39:49,201:INFO:Preparing display monitor
2024-04-07 17:39:49,242:INFO:Initializing Logistic Regression
2024-04-07 17:39:49,242:INFO:Total runtime is 1.7575422922770183e-05 minutes
2024-04-07 17:39:49,246:INFO:SubProcess create_model() called ==================================
2024-04-07 17:39:49,246:INFO:Initializing create_model()
2024-04-07 17:39:49,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058E13050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:39:49,247:INFO:Checking exceptions
2024-04-07 17:39:49,247:INFO:Importing libraries
2024-04-07 17:39:49,247:INFO:Copying training dataset
2024-04-07 17:39:49,252:INFO:Defining folds
2024-04-07 17:39:49,252:INFO:Declaring metric variables
2024-04-07 17:39:49,256:INFO:Importing untrained model
2024-04-07 17:39:49,260:INFO:Logistic Regression Imported successfully
2024-04-07 17:39:49,263:INFO:Starting cross validation
2024-04-07 17:39:49,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:39:56,721:INFO:Calculating mean and std
2024-04-07 17:39:56,721:INFO:Creating metrics dataframe
2024-04-07 17:39:56,721:INFO:Uploading results into container
2024-04-07 17:39:56,721:INFO:Uploading model into container now
2024-04-07 17:39:56,721:INFO:_master_model_container: 1
2024-04-07 17:39:56,721:INFO:_display_container: 2
2024-04-07 17:39:56,721:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:39:56,721:INFO:create_model() successfully completed......................................
2024-04-07 17:39:56,961:INFO:SubProcess create_model() end ==================================
2024-04-07 17:39:56,961:INFO:Creating metrics dataframe
2024-04-07 17:39:56,962:INFO:Initializing Decision Tree Classifier
2024-04-07 17:39:56,962:INFO:Total runtime is 0.1286940097808838 minutes
2024-04-07 17:39:56,969:INFO:SubProcess create_model() called ==================================
2024-04-07 17:39:56,972:INFO:Initializing create_model()
2024-04-07 17:39:56,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058E13050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:39:56,972:INFO:Checking exceptions
2024-04-07 17:39:56,972:INFO:Importing libraries
2024-04-07 17:39:56,972:INFO:Copying training dataset
2024-04-07 17:39:56,978:INFO:Defining folds
2024-04-07 17:39:56,978:INFO:Declaring metric variables
2024-04-07 17:39:56,979:INFO:Importing untrained model
2024-04-07 17:39:56,988:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:39:56,995:INFO:Starting cross validation
2024-04-07 17:39:56,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:40:02,416:INFO:Calculating mean and std
2024-04-07 17:40:02,416:INFO:Creating metrics dataframe
2024-04-07 17:40:02,431:INFO:Uploading results into container
2024-04-07 17:40:02,431:INFO:Uploading model into container now
2024-04-07 17:40:02,431:INFO:_master_model_container: 2
2024-04-07 17:40:02,431:INFO:_display_container: 2
2024-04-07 17:40:02,431:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6170, splitter='best')
2024-04-07 17:40:02,431:INFO:create_model() successfully completed......................................
2024-04-07 17:40:02,643:INFO:SubProcess create_model() end ==================================
2024-04-07 17:40:02,643:INFO:Creating metrics dataframe
2024-04-07 17:40:02,661:INFO:Initializing create_model()
2024-04-07 17:40:02,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6170, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:40:02,661:INFO:Checking exceptions
2024-04-07 17:40:02,663:INFO:Importing libraries
2024-04-07 17:40:02,663:INFO:Copying training dataset
2024-04-07 17:40:02,668:INFO:Defining folds
2024-04-07 17:40:02,669:INFO:Declaring metric variables
2024-04-07 17:40:02,669:INFO:Importing untrained model
2024-04-07 17:40:02,669:INFO:Declaring custom model
2024-04-07 17:40:02,669:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:40:02,670:INFO:Cross validation set to False
2024-04-07 17:40:02,670:INFO:Fitting Model
2024-04-07 17:40:02,717:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6170, splitter='best')
2024-04-07 17:40:02,717:INFO:create_model() successfully completed......................................
2024-04-07 17:40:02,906:INFO:Initializing create_model()
2024-04-07 17:40:02,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:40:02,906:INFO:Checking exceptions
2024-04-07 17:40:02,908:INFO:Importing libraries
2024-04-07 17:40:02,908:INFO:Copying training dataset
2024-04-07 17:40:02,913:INFO:Defining folds
2024-04-07 17:40:02,913:INFO:Declaring metric variables
2024-04-07 17:40:02,914:INFO:Importing untrained model
2024-04-07 17:40:02,914:INFO:Declaring custom model
2024-04-07 17:40:02,914:INFO:Logistic Regression Imported successfully
2024-04-07 17:40:02,914:INFO:Cross validation set to False
2024-04-07 17:40:02,914:INFO:Fitting Model
2024-04-07 17:40:02,935:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:40:02,935:INFO:create_model() successfully completed......................................
2024-04-07 17:40:03,125:INFO:_master_model_container: 2
2024-04-07 17:40:03,125:INFO:_display_container: 2
2024-04-07 17:40:03,125:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6170, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6170, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:40:03,125:INFO:compare_models() successfully completed......................................
2024-04-07 17:40:03,125:INFO:Initializing predict_model()
2024-04-07 17:40:03,125:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05C004E50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6170, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F051C25800>)
2024-04-07 17:40:03,125:INFO:Checking exceptions
2024-04-07 17:40:03,125:INFO:Preloading libraries
2024-04-07 17:40:47,525:INFO:PyCaret ClassificationExperiment
2024-04-07 17:40:47,525:INFO:Logging name: clf-default-name
2024-04-07 17:40:47,525:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:40:47,525:INFO:version 3.2.0
2024-04-07 17:40:47,525:INFO:Initializing setup()
2024-04-07 17:40:47,525:INFO:self.USI: 9992
2024-04-07 17:40:47,525:INFO:self._variable_keys: {'n_jobs_param', 'data', 'exp_id', 'exp_name_log', '_available_plots', 'y_train', 'X', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'X_train', 'y_test', 'memory', 'idx', 'fold_generator', 'USI', 'gpu_param', 'X_test', 'log_plots_param', 'y', 'target_param', 'fold_groups_param', 'seed', '_ml_usecase', 'pipeline', 'logging_param'}
2024-04-07 17:40:47,525:INFO:Checking environment
2024-04-07 17:40:47,525:INFO:python_version: 3.11.7
2024-04-07 17:40:47,525:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:40:47,525:INFO:machine: AMD64
2024-04-07 17:40:47,525:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:40:47,525:INFO:Memory: svmem(total=10575405056, available=3605573632, percent=65.9, used=6969831424, free=3605573632)
2024-04-07 17:40:47,525:INFO:Physical Core: 8
2024-04-07 17:40:47,525:INFO:Logical Core: 16
2024-04-07 17:40:47,525:INFO:Checking libraries
2024-04-07 17:40:47,525:INFO:System:
2024-04-07 17:40:47,525:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:40:47,525:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:40:47,525:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:40:47,525:INFO:PyCaret required dependencies:
2024-04-07 17:40:47,525:INFO:                 pip: 23.3.1
2024-04-07 17:40:47,525:INFO:          setuptools: 68.2.2
2024-04-07 17:40:47,525:INFO:             pycaret: 3.2.0
2024-04-07 17:40:47,525:INFO:             IPython: 8.20.0
2024-04-07 17:40:47,525:INFO:          ipywidgets: 7.6.5
2024-04-07 17:40:47,525:INFO:                tqdm: 4.65.0
2024-04-07 17:40:47,525:INFO:               numpy: 1.25.2
2024-04-07 17:40:47,525:INFO:              pandas: 1.5.3
2024-04-07 17:40:47,525:INFO:              jinja2: 3.1.3
2024-04-07 17:40:47,525:INFO:               scipy: 1.10.1
2024-04-07 17:40:47,525:INFO:              joblib: 1.2.0
2024-04-07 17:40:47,525:INFO:             sklearn: 1.2.2
2024-04-07 17:40:47,525:INFO:                pyod: 1.1.3
2024-04-07 17:40:47,525:INFO:            imblearn: 0.11.0
2024-04-07 17:40:47,525:INFO:   category_encoders: 2.6.3
2024-04-07 17:40:47,525:INFO:            lightgbm: 4.3.0
2024-04-07 17:40:47,525:INFO:               numba: 0.59.0
2024-04-07 17:40:47,525:INFO:            requests: 2.31.0
2024-04-07 17:40:47,525:INFO:          matplotlib: 3.6.0
2024-04-07 17:40:47,525:INFO:          scikitplot: 0.3.7
2024-04-07 17:40:47,525:INFO:         yellowbrick: 1.5
2024-04-07 17:40:47,525:INFO:              plotly: 5.9.0
2024-04-07 17:40:47,525:INFO:    plotly-resampler: Not installed
2024-04-07 17:40:47,525:INFO:             kaleido: 0.2.1
2024-04-07 17:40:47,525:INFO:           schemdraw: 0.15
2024-04-07 17:40:47,525:INFO:         statsmodels: 0.14.0
2024-04-07 17:40:47,525:INFO:              sktime: 0.21.1
2024-04-07 17:40:47,525:INFO:               tbats: 1.1.3
2024-04-07 17:40:47,525:INFO:            pmdarima: 2.0.4
2024-04-07 17:40:47,525:INFO:              psutil: 5.9.0
2024-04-07 17:40:47,525:INFO:          markupsafe: 2.1.3
2024-04-07 17:40:47,525:INFO:             pickle5: Not installed
2024-04-07 17:40:47,525:INFO:         cloudpickle: 2.2.1
2024-04-07 17:40:47,525:INFO:         deprecation: 2.1.0
2024-04-07 17:40:47,525:INFO:              xxhash: 3.4.1
2024-04-07 17:40:47,525:INFO:           wurlitzer: Not installed
2024-04-07 17:40:47,534:INFO:PyCaret optional dependencies:
2024-04-07 17:40:47,534:INFO:                shap: 0.44.0
2024-04-07 17:40:47,534:INFO:           interpret: Not installed
2024-04-07 17:40:47,534:INFO:                umap: Not installed
2024-04-07 17:40:47,534:INFO:     ydata_profiling: Not installed
2024-04-07 17:40:47,534:INFO:  explainerdashboard: Not installed
2024-04-07 17:40:47,534:INFO:             autoviz: Not installed
2024-04-07 17:40:47,534:INFO:           fairlearn: Not installed
2024-04-07 17:40:47,534:INFO:          deepchecks: Not installed
2024-04-07 17:40:47,534:INFO:             xgboost: Not installed
2024-04-07 17:40:47,534:INFO:            catboost: Not installed
2024-04-07 17:40:47,534:INFO:              kmodes: Not installed
2024-04-07 17:40:47,534:INFO:             mlxtend: Not installed
2024-04-07 17:40:47,534:INFO:       statsforecast: Not installed
2024-04-07 17:40:47,534:INFO:        tune_sklearn: Not installed
2024-04-07 17:40:47,534:INFO:                 ray: Not installed
2024-04-07 17:40:47,534:INFO:            hyperopt: Not installed
2024-04-07 17:40:47,534:INFO:              optuna: Not installed
2024-04-07 17:40:47,534:INFO:               skopt: Not installed
2024-04-07 17:40:47,534:INFO:              mlflow: 2.9.0
2024-04-07 17:40:47,534:INFO:              gradio: Not installed
2024-04-07 17:40:47,534:INFO:             fastapi: Not installed
2024-04-07 17:40:47,534:INFO:             uvicorn: Not installed
2024-04-07 17:40:47,534:INFO:              m2cgen: Not installed
2024-04-07 17:40:47,534:INFO:           evidently: Not installed
2024-04-07 17:40:47,535:INFO:               fugue: Not installed
2024-04-07 17:40:47,535:INFO:           streamlit: 1.28.0
2024-04-07 17:40:47,535:INFO:             prophet: Not installed
2024-04-07 17:40:47,535:INFO:None
2024-04-07 17:40:47,535:INFO:Set up data.
2024-04-07 17:40:47,540:INFO:Set up folding strategy.
2024-04-07 17:40:47,540:INFO:Set up train/test split.
2024-04-07 17:40:47,540:INFO:Set up data.
2024-04-07 17:40:47,546:INFO:Set up index.
2024-04-07 17:40:47,547:INFO:Assigning column types.
2024-04-07 17:40:47,552:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:40:47,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,599:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,696:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:40:47,752:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,818:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:40:47,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,857:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:40:47,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:47,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,002:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,002:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,002:INFO:Preparing preprocessing pipeline...
2024-04-07 17:40:48,002:INFO:Set up simple imputation.
2024-04-07 17:40:48,002:INFO:Set up feature normalization.
2024-04-07 17:40:48,018:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:40:48,034:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:40:48,034:INFO:Creating final display dataframe.
2024-04-07 17:40:48,099:INFO:Setup _display_container:                     Description             Value
0                    Session id              1482
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              9992
2024-04-07 17:40:48,185:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:40:48,262:INFO:setup() successfully completed in 0.74s...............
2024-04-07 17:40:48,262:INFO:Initializing compare_models()
2024-04-07 17:40:48,262:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:40:48,262:INFO:Checking exceptions
2024-04-07 17:40:48,274:INFO:Preparing display monitor
2024-04-07 17:40:48,303:INFO:Initializing Logistic Regression
2024-04-07 17:40:48,305:INFO:Total runtime is 2.291997273763021e-05 minutes
2024-04-07 17:40:48,307:INFO:SubProcess create_model() called ==================================
2024-04-07 17:40:48,309:INFO:Initializing create_model()
2024-04-07 17:40:48,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058E140D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:40:48,309:INFO:Checking exceptions
2024-04-07 17:40:48,309:INFO:Importing libraries
2024-04-07 17:40:48,310:INFO:Copying training dataset
2024-04-07 17:40:48,315:INFO:Defining folds
2024-04-07 17:40:48,315:INFO:Declaring metric variables
2024-04-07 17:40:48,319:INFO:Importing untrained model
2024-04-07 17:40:48,322:INFO:Logistic Regression Imported successfully
2024-04-07 17:40:48,326:INFO:Starting cross validation
2024-04-07 17:40:48,326:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:40:55,629:INFO:Calculating mean and std
2024-04-07 17:40:55,629:INFO:Creating metrics dataframe
2024-04-07 17:40:55,629:INFO:Uploading results into container
2024-04-07 17:40:55,629:INFO:Uploading model into container now
2024-04-07 17:40:55,629:INFO:_master_model_container: 1
2024-04-07 17:40:55,629:INFO:_display_container: 2
2024-04-07 17:40:55,629:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1482, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:40:55,629:INFO:create_model() successfully completed......................................
2024-04-07 17:40:55,881:INFO:SubProcess create_model() end ==================================
2024-04-07 17:40:55,881:INFO:Creating metrics dataframe
2024-04-07 17:40:55,881:INFO:Initializing Decision Tree Classifier
2024-04-07 17:40:55,881:INFO:Total runtime is 0.12629018624623617 minutes
2024-04-07 17:40:55,881:INFO:SubProcess create_model() called ==================================
2024-04-07 17:40:55,881:INFO:Initializing create_model()
2024-04-07 17:40:55,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F058E140D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:40:55,893:INFO:Checking exceptions
2024-04-07 17:40:55,893:INFO:Importing libraries
2024-04-07 17:40:55,893:INFO:Copying training dataset
2024-04-07 17:40:55,899:INFO:Defining folds
2024-04-07 17:40:55,899:INFO:Declaring metric variables
2024-04-07 17:40:55,904:INFO:Importing untrained model
2024-04-07 17:40:55,910:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:40:55,917:INFO:Starting cross validation
2024-04-07 17:40:55,918:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-07 17:41:01,244:INFO:Calculating mean and std
2024-04-07 17:41:01,244:INFO:Creating metrics dataframe
2024-04-07 17:41:01,260:INFO:Uploading results into container
2024-04-07 17:41:01,260:INFO:Uploading model into container now
2024-04-07 17:41:01,260:INFO:_master_model_container: 2
2024-04-07 17:41:01,260:INFO:_display_container: 2
2024-04-07 17:41:01,260:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1482, splitter='best')
2024-04-07 17:41:01,260:INFO:create_model() successfully completed......................................
2024-04-07 17:41:01,475:INFO:SubProcess create_model() end ==================================
2024-04-07 17:41:01,475:INFO:Creating metrics dataframe
2024-04-07 17:41:01,501:INFO:Initializing create_model()
2024-04-07 17:41:01,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1482, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:41:01,501:INFO:Checking exceptions
2024-04-07 17:41:01,503:INFO:Importing libraries
2024-04-07 17:41:01,503:INFO:Copying training dataset
2024-04-07 17:41:01,503:INFO:Defining folds
2024-04-07 17:41:01,503:INFO:Declaring metric variables
2024-04-07 17:41:01,503:INFO:Importing untrained model
2024-04-07 17:41:01,503:INFO:Declaring custom model
2024-04-07 17:41:01,503:INFO:Decision Tree Classifier Imported successfully
2024-04-07 17:41:01,503:INFO:Cross validation set to False
2024-04-07 17:41:01,503:INFO:Fitting Model
2024-04-07 17:41:01,568:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1482, splitter='best')
2024-04-07 17:41:01,568:INFO:create_model() successfully completed......................................
2024-04-07 17:41:01,740:INFO:Initializing create_model()
2024-04-07 17:41:01,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1482, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:41:01,740:INFO:Checking exceptions
2024-04-07 17:41:01,752:INFO:Importing libraries
2024-04-07 17:41:01,752:INFO:Copying training dataset
2024-04-07 17:41:01,757:INFO:Defining folds
2024-04-07 17:41:01,757:INFO:Declaring metric variables
2024-04-07 17:41:01,757:INFO:Importing untrained model
2024-04-07 17:41:01,758:INFO:Declaring custom model
2024-04-07 17:41:01,758:INFO:Logistic Regression Imported successfully
2024-04-07 17:41:01,758:INFO:Cross validation set to False
2024-04-07 17:41:01,758:INFO:Fitting Model
2024-04-07 17:41:01,781:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1482, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-07 17:41:01,781:INFO:create_model() successfully completed......................................
2024-04-07 17:41:01,972:INFO:_master_model_container: 2
2024-04-07 17:41:01,973:INFO:_display_container: 2
2024-04-07 17:41:01,974:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1482, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1482, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-07 17:41:01,974:INFO:compare_models() successfully completed......................................
2024-04-07 17:41:01,975:INFO:Initializing predict_model()
2024-04-07 17:41:01,975:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F05BBE4110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1482, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F051C25800>)
2024-04-07 17:41:01,975:INFO:Checking exceptions
2024-04-07 17:41:01,975:INFO:Preloading libraries
2024-04-07 17:43:37,710:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_ce81be9479ae45f9abbc319209f88479_c8df3724776d4b63825054bacc510387
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,710:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_a0b7ba3cc1ac4b8f98f09ac8d581243d_ee49ec3c38a84a34b131b3fa802bc9ab
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,710:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_3d0a147d015d441d9f0babe463367bf7_42704abb094b4b8c89a41bae0fd4874e
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_c7dbb2d4e45b42fabc004b9d4d726cf4_abf7e198bd9740be8376c6827decdd93
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_c4a8eaa8fe6d4c3c8748229d47a3e631_25ffe70bce214035b177447ae81b878e
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_5125f96f3cb64458b2040c3db4979a02_013bff9782ac40dda5b5b565029c8966
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_76c9590a40c14b7cabe1cde3d2e2f2fa_aa63d7a555b7455ab50d3641e1ce6d7f
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_712649b1b2494059aa00fdc3db87c812_4322e04913dc4ff09885a977f0f07bcc
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_6d0f0305f6fe45db8163cc8416d909e6_08c3f03502114680b6d963e877dd7fc8
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:37,711:WARNING:C:\Users\Michelle\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\Michelle\AppData\Local\Temp\joblib_memmapping_folder_15156_1e30b35083f140a088c9328bf416f6ba_708728d8243041b48863ab182e9413bf
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-07 17:43:45,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:43:45,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:43:45,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:43:45,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-07 17:43:48,645:INFO:PyCaret ClassificationExperiment
2024-04-07 17:43:48,645:INFO:Logging name: clf-default-name
2024-04-07 17:43:48,645:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-07 17:43:48,645:INFO:version 3.2.0
2024-04-07 17:43:48,645:INFO:Initializing setup()
2024-04-07 17:43:48,645:INFO:self.USI: 39a4
2024-04-07 17:43:48,645:INFO:self._variable_keys: {'USI', 'X_test', 'fold_groups_param', 'fold_shuffle_param', 'memory', 'n_jobs_param', 'target_param', 'y_test', 'fix_imbalance', 'seed', 'logging_param', '_ml_usecase', 'X', 'fold_generator', 'is_multiclass', 'X_train', 'gpu_n_jobs_param', 'y_train', 'gpu_param', 'log_plots_param', '_available_plots', 'idx', 'exp_id', 'html_param', 'pipeline', 'y', 'data', 'exp_name_log'}
2024-04-07 17:43:48,645:INFO:Checking environment
2024-04-07 17:43:48,645:INFO:python_version: 3.11.7
2024-04-07 17:43:48,645:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-07 17:43:48,645:INFO:machine: AMD64
2024-04-07 17:43:48,645:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-07 17:43:48,645:INFO:Memory: svmem(total=10575405056, available=3459186688, percent=67.3, used=7116218368, free=3459186688)
2024-04-07 17:43:48,646:INFO:Physical Core: 8
2024-04-07 17:43:48,646:INFO:Logical Core: 16
2024-04-07 17:43:48,646:INFO:Checking libraries
2024-04-07 17:43:48,646:INFO:System:
2024-04-07 17:43:48,646:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-07 17:43:48,646:INFO:executable: C:\Users\Michelle\anaconda3\python.exe
2024-04-07 17:43:48,646:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-07 17:43:48,646:INFO:PyCaret required dependencies:
2024-04-07 17:43:49,620:INFO:                 pip: 23.3.1
2024-04-07 17:43:49,620:INFO:          setuptools: 68.2.2
2024-04-07 17:43:49,620:INFO:             pycaret: 3.2.0
2024-04-07 17:43:49,620:INFO:             IPython: 8.20.0
2024-04-07 17:43:49,620:INFO:          ipywidgets: 7.6.5
2024-04-07 17:43:49,620:INFO:                tqdm: 4.65.0
2024-04-07 17:43:49,620:INFO:               numpy: 1.25.2
2024-04-07 17:43:49,620:INFO:              pandas: 1.5.3
2024-04-07 17:43:49,620:INFO:              jinja2: 3.1.3
2024-04-07 17:43:49,620:INFO:               scipy: 1.10.1
2024-04-07 17:43:49,620:INFO:              joblib: 1.2.0
2024-04-07 17:43:49,620:INFO:             sklearn: 1.2.2
2024-04-07 17:43:49,620:INFO:                pyod: 1.1.3
2024-04-07 17:43:49,620:INFO:            imblearn: 0.11.0
2024-04-07 17:43:49,620:INFO:   category_encoders: 2.6.3
2024-04-07 17:43:49,620:INFO:            lightgbm: 4.3.0
2024-04-07 17:43:49,620:INFO:               numba: 0.59.0
2024-04-07 17:43:49,620:INFO:            requests: 2.31.0
2024-04-07 17:43:49,620:INFO:          matplotlib: 3.6.0
2024-04-07 17:43:49,620:INFO:          scikitplot: 0.3.7
2024-04-07 17:43:49,620:INFO:         yellowbrick: 1.5
2024-04-07 17:43:49,620:INFO:              plotly: 5.9.0
2024-04-07 17:43:49,620:INFO:    plotly-resampler: Not installed
2024-04-07 17:43:49,621:INFO:             kaleido: 0.2.1
2024-04-07 17:43:49,621:INFO:           schemdraw: 0.15
2024-04-07 17:43:49,621:INFO:         statsmodels: 0.14.0
2024-04-07 17:43:49,621:INFO:              sktime: 0.21.1
2024-04-07 17:43:49,621:INFO:               tbats: 1.1.3
2024-04-07 17:43:49,621:INFO:            pmdarima: 2.0.4
2024-04-07 17:43:49,621:INFO:              psutil: 5.9.0
2024-04-07 17:43:49,621:INFO:          markupsafe: 2.1.3
2024-04-07 17:43:49,621:INFO:             pickle5: Not installed
2024-04-07 17:43:49,621:INFO:         cloudpickle: 2.2.1
2024-04-07 17:43:49,621:INFO:         deprecation: 2.1.0
2024-04-07 17:43:49,621:INFO:              xxhash: 3.4.1
2024-04-07 17:43:49,621:INFO:           wurlitzer: Not installed
2024-04-07 17:43:49,621:INFO:PyCaret optional dependencies:
2024-04-07 17:43:49,632:INFO:                shap: 0.44.0
2024-04-07 17:43:49,632:INFO:           interpret: Not installed
2024-04-07 17:43:49,632:INFO:                umap: Not installed
2024-04-07 17:43:49,632:INFO:     ydata_profiling: Not installed
2024-04-07 17:43:49,632:INFO:  explainerdashboard: Not installed
2024-04-07 17:43:49,632:INFO:             autoviz: Not installed
2024-04-07 17:43:49,632:INFO:           fairlearn: Not installed
2024-04-07 17:43:49,632:INFO:          deepchecks: Not installed
2024-04-07 17:43:49,632:INFO:             xgboost: Not installed
2024-04-07 17:43:49,632:INFO:            catboost: Not installed
2024-04-07 17:43:49,632:INFO:              kmodes: Not installed
2024-04-07 17:43:49,632:INFO:             mlxtend: Not installed
2024-04-07 17:43:49,632:INFO:       statsforecast: Not installed
2024-04-07 17:43:49,632:INFO:        tune_sklearn: Not installed
2024-04-07 17:43:49,632:INFO:                 ray: Not installed
2024-04-07 17:43:49,632:INFO:            hyperopt: Not installed
2024-04-07 17:43:49,632:INFO:              optuna: Not installed
2024-04-07 17:43:49,632:INFO:               skopt: Not installed
2024-04-07 17:43:49,632:INFO:              mlflow: 2.9.0
2024-04-07 17:43:49,632:INFO:              gradio: Not installed
2024-04-07 17:43:49,632:INFO:             fastapi: Not installed
2024-04-07 17:43:49,632:INFO:             uvicorn: Not installed
2024-04-07 17:43:49,632:INFO:              m2cgen: Not installed
2024-04-07 17:43:49,633:INFO:           evidently: Not installed
2024-04-07 17:43:49,633:INFO:               fugue: Not installed
2024-04-07 17:43:49,633:INFO:           streamlit: 1.28.0
2024-04-07 17:43:49,633:INFO:             prophet: Not installed
2024-04-07 17:43:49,633:INFO:None
2024-04-07 17:43:49,633:INFO:Set up data.
2024-04-07 17:43:49,639:INFO:Set up folding strategy.
2024-04-07 17:43:49,639:INFO:Set up train/test split.
2024-04-07 17:43:49,640:INFO:Set up data.
2024-04-07 17:43:49,644:INFO:Set up index.
2024-04-07 17:43:49,644:INFO:Assigning column types.
2024-04-07 17:43:49,647:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-07 17:43:49,691:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,693:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,774:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,803:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-07 17:43:49,848:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,922:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-07 17:43:49,950:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:49,951:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-07 17:43:50,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,097:INFO:Preparing preprocessing pipeline...
2024-04-07 17:43:50,098:INFO:Set up simple imputation.
2024-04-07 17:43:50,099:INFO:Set up feature normalization.
2024-04-07 17:43:50,156:INFO:Finished creating preprocessing pipeline.
2024-04-07 17:43:50,163:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Michelle\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-07 17:43:50,163:INFO:Creating final display dataframe.
2024-04-07 17:43:50,253:INFO:Setup _display_container:                     Description             Value
0                    Session id              2874
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              39a4
2024-04-07 17:43:50,337:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-07 17:43:50,416:INFO:setup() successfully completed in 1.77s...............
2024-04-07 17:43:50,416:INFO:Initializing compare_models()
2024-04-07 17:43:50,416:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027FE326DF50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000027FE326DF50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-07 17:43:50,416:INFO:Checking exceptions
2024-04-07 17:43:50,420:INFO:Preparing display monitor
2024-04-07 17:43:50,448:INFO:Initializing Logistic Regression
2024-04-07 17:43:50,448:INFO:Total runtime is 0.0 minutes
2024-04-07 17:43:50,453:INFO:SubProcess create_model() called ==================================
2024-04-07 17:43:50,453:INFO:Initializing create_model()
2024-04-07 17:43:50,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027FE326DF50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027FE51E4A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-07 17:43:50,454:INFO:Checking exceptions
2024-04-07 17:43:50,454:INFO:Importing libraries
2024-04-07 17:43:50,454:INFO:Copying training dataset
2024-04-07 17:43:50,459:INFO:Defining folds
2024-04-07 17:43:50,459:INFO:Declaring metric variables
2024-04-07 17:43:50,463:INFO:Importing untrained model
2024-04-07 17:43:50,466:INFO:Logistic Regression Imported successfully
2024-04-07 17:43:50,473:INFO:Starting cross validation
2024-04-07 17:43:50,475:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
